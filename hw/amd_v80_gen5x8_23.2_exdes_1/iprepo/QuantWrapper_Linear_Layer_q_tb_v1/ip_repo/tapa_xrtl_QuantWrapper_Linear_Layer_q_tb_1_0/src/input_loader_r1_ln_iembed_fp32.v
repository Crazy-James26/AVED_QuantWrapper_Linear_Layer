`timescale 1 ns / 1 ps
// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
 
(* CORE_GENERATION_INFO="input_loader_r1_ln_iembed_fp32_input_loader_r1_ln_iembed_fp32,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcv80-lsva4737-2MHP-e-S,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.825000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=31,HLS_SYN_DSP=0,HLS_SYN_FF=4706,HLS_SYN_LUT=2958,HLS_VERSION=2024_1}" *)
module input_loader_r1_ln_iembed_fp32 (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_input_mmap_AWVALID,
        m_axi_input_mmap_AWREADY,
        m_axi_input_mmap_AWADDR,
        m_axi_input_mmap_AWID,
        m_axi_input_mmap_AWLEN,
        m_axi_input_mmap_AWSIZE,
        m_axi_input_mmap_AWBURST,
        m_axi_input_mmap_AWLOCK,
        m_axi_input_mmap_AWCACHE,
        m_axi_input_mmap_AWPROT,
        m_axi_input_mmap_AWQOS,
        m_axi_input_mmap_AWREGION,
        m_axi_input_mmap_AWUSER,
        m_axi_input_mmap_WVALID,
        m_axi_input_mmap_WREADY,
        m_axi_input_mmap_WDATA,
        m_axi_input_mmap_WSTRB,
        m_axi_input_mmap_WLAST,
        m_axi_input_mmap_WID,
        m_axi_input_mmap_WUSER,
        m_axi_input_mmap_ARVALID,
        m_axi_input_mmap_ARREADY,
        m_axi_input_mmap_ARADDR,
        m_axi_input_mmap_ARID,
        m_axi_input_mmap_ARLEN,
        m_axi_input_mmap_ARSIZE,
        m_axi_input_mmap_ARBURST,
        m_axi_input_mmap_ARLOCK,
        m_axi_input_mmap_ARCACHE,
        m_axi_input_mmap_ARPROT,
        m_axi_input_mmap_ARQOS,
        m_axi_input_mmap_ARREGION,
        m_axi_input_mmap_ARUSER,
        m_axi_input_mmap_RVALID,
        m_axi_input_mmap_RREADY,
        m_axi_input_mmap_RDATA,
        m_axi_input_mmap_RLAST,
        m_axi_input_mmap_RID,
        m_axi_input_mmap_RUSER,
        m_axi_input_mmap_RRESP,
        m_axi_input_mmap_BVALID,
        m_axi_input_mmap_BREADY,
        m_axi_input_mmap_BRESP,
        m_axi_input_mmap_BID,
        m_axi_input_mmap_BUSER,
        input_mmap_offset,
        input_stream_s_din,
        input_stream_s_full_n,
        input_stream_s_write,
        input_stream_peek,
        seq_len
);
parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;
parameter    C_M_AXI_INPUT_MMAP_ID_WIDTH = 1;
parameter    C_M_AXI_INPUT_MMAP_ADDR_WIDTH = 64;
parameter    C_M_AXI_INPUT_MMAP_DATA_WIDTH = 512;
parameter    C_M_AXI_INPUT_MMAP_AWUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_MMAP_ARUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_MMAP_WUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_MMAP_RUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_MMAP_BUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_MMAP_USER_VALUE = 0;
parameter    C_M_AXI_INPUT_MMAP_PROT_VALUE = 0;
parameter    C_M_AXI_INPUT_MMAP_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter C_M_AXI_INPUT_MMAP_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_input_mmap_AWVALID;
input   m_axi_input_mmap_AWREADY;
output  [C_M_AXI_INPUT_MMAP_ADDR_WIDTH - 1:0] m_axi_input_mmap_AWADDR;
output  [C_M_AXI_INPUT_MMAP_ID_WIDTH - 1:0] m_axi_input_mmap_AWID;
output  [7:0] m_axi_input_mmap_AWLEN;
output  [2:0] m_axi_input_mmap_AWSIZE;
output  [1:0] m_axi_input_mmap_AWBURST;
output  [1:0] m_axi_input_mmap_AWLOCK;
output  [3:0] m_axi_input_mmap_AWCACHE;
output  [2:0] m_axi_input_mmap_AWPROT;
output  [3:0] m_axi_input_mmap_AWQOS;
output  [3:0] m_axi_input_mmap_AWREGION;
output  [C_M_AXI_INPUT_MMAP_AWUSER_WIDTH - 1:0] m_axi_input_mmap_AWUSER;
output   m_axi_input_mmap_WVALID;
input   m_axi_input_mmap_WREADY;
output  [C_M_AXI_INPUT_MMAP_DATA_WIDTH - 1:0] m_axi_input_mmap_WDATA;
output  [C_M_AXI_INPUT_MMAP_WSTRB_WIDTH - 1:0] m_axi_input_mmap_WSTRB;
output   m_axi_input_mmap_WLAST;
output  [C_M_AXI_INPUT_MMAP_ID_WIDTH - 1:0] m_axi_input_mmap_WID;
output  [C_M_AXI_INPUT_MMAP_WUSER_WIDTH - 1:0] m_axi_input_mmap_WUSER;
output   m_axi_input_mmap_ARVALID;
input   m_axi_input_mmap_ARREADY;
output  [C_M_AXI_INPUT_MMAP_ADDR_WIDTH - 1:0] m_axi_input_mmap_ARADDR;
output  [C_M_AXI_INPUT_MMAP_ID_WIDTH - 1:0] m_axi_input_mmap_ARID;
output  [7:0] m_axi_input_mmap_ARLEN;
output  [2:0] m_axi_input_mmap_ARSIZE;
output  [1:0] m_axi_input_mmap_ARBURST;
output  [1:0] m_axi_input_mmap_ARLOCK;
output  [3:0] m_axi_input_mmap_ARCACHE;
output  [2:0] m_axi_input_mmap_ARPROT;
output  [3:0] m_axi_input_mmap_ARQOS;
output  [3:0] m_axi_input_mmap_ARREGION;
output  [C_M_AXI_INPUT_MMAP_ARUSER_WIDTH - 1:0] m_axi_input_mmap_ARUSER;
input   m_axi_input_mmap_RVALID;
output   m_axi_input_mmap_RREADY;
input  [C_M_AXI_INPUT_MMAP_DATA_WIDTH - 1:0] m_axi_input_mmap_RDATA;
input   m_axi_input_mmap_RLAST;
input  [C_M_AXI_INPUT_MMAP_ID_WIDTH - 1:0] m_axi_input_mmap_RID;
input  [C_M_AXI_INPUT_MMAP_RUSER_WIDTH - 1:0] m_axi_input_mmap_RUSER;
input  [1:0] m_axi_input_mmap_RRESP;
input   m_axi_input_mmap_BVALID;
output   m_axi_input_mmap_BREADY;
input  [1:0] m_axi_input_mmap_BRESP;
input  [C_M_AXI_INPUT_MMAP_ID_WIDTH - 1:0] m_axi_input_mmap_BID;
input  [C_M_AXI_INPUT_MMAP_BUSER_WIDTH - 1:0] m_axi_input_mmap_BUSER;
input  [63:0] input_mmap_offset;
output  [512:0] input_stream_s_din;
input   input_stream_s_full_n;
output   input_stream_s_write;
input  [512:0] input_stream_peek;
input  [31:0] seq_len;
reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_stream_s_write;
 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] tmp_reg_213;
wire   [20:0] empty_17_fu_142_p2;
reg   [20:0] empty_17_reg_218;
reg   [20:0] p_lshr_f_cast_reg_223;
wire   [31:0] mul3_i_fu_163_p3;
reg   [31:0] mul3_i_reg_228;
wire    ap_CS_fsm_state2;
wire   [30:0] empty_19_fu_190_p3;
reg   [30:0] empty_19_reg_233;
wire   [35:0] tmp_1_fu_199_p3;
reg   [35:0] tmp_1_reg_238;
wire    grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_start;
wire    grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_done;
wire    grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_idle;
wire    grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_ready;
wire    grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWVALID;
wire   [63:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWADDR;
wire   [0:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWID;
wire   [31:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWLEN;
wire   [2:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWSIZE;
wire   [1:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWBURST;
wire   [1:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWLOCK;
wire   [3:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWCACHE;
wire   [2:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWPROT;
wire   [3:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWQOS;
wire   [3:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWREGION;
wire   [0:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWUSER;
wire    grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_WVALID;
wire   [511:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_WDATA;
wire   [63:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_WSTRB;
wire    grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_WLAST;
wire   [0:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_WID;
wire   [0:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_WUSER;
wire    grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARVALID;
wire   [63:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARADDR;
wire   [0:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARID;
wire   [31:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARLEN;
wire   [2:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARSIZE;
wire   [1:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARBURST;
wire   [1:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARLOCK;
wire   [3:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARCACHE;
wire   [2:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARPROT;
wire   [3:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARQOS;
wire   [3:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARREGION;
wire   [0:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARUSER;
wire    grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_RREADY;
wire    grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_BREADY;
wire   [512:0] grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_input_stream_s_din;
wire    grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_input_stream_s_write;
wire    input_mmap_AWREADY;
wire    input_mmap_WREADY;
reg    input_mmap_ARVALID;
wire    input_mmap_ARREADY;
wire    input_mmap_RVALID;
reg    input_mmap_RREADY;
wire   [511:0] input_mmap_RDATA;
wire   [8:0] input_mmap_RFIFONUM;
wire    input_mmap_BVALID;
reg    grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [24:0] trunc_ln2955_fu_114_p1;
wire   [24:0] p_neg_fu_126_p2;
wire   [20:0] p_lshr_cast_fu_132_p4;
wire   [20:0] empty_18_fu_158_p3;
wire   [19:0] trunc_ln2968_fu_178_p1;
wire   [0:0] cmp17_i_fu_172_p2;
wire   [30:0] trunc_ln1_fu_182_p3;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_start_reg = 1'b0;
end
input_loader_r1_ln_iembed_fp32_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_start),
    .ap_done(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_done),
    .ap_idle(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_idle),
    .ap_ready(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_ready),
    .m_axi_input_mmap_AWVALID(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWVALID),
    .m_axi_input_mmap_AWREADY(1'b0),
    .m_axi_input_mmap_AWADDR(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWADDR),
    .m_axi_input_mmap_AWID(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWID),
    .m_axi_input_mmap_AWLEN(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWLEN),
    .m_axi_input_mmap_AWSIZE(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWSIZE),
    .m_axi_input_mmap_AWBURST(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWBURST),
    .m_axi_input_mmap_AWLOCK(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWLOCK),
    .m_axi_input_mmap_AWCACHE(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWCACHE),
    .m_axi_input_mmap_AWPROT(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWPROT),
    .m_axi_input_mmap_AWQOS(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWQOS),
    .m_axi_input_mmap_AWREGION(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWREGION),
    .m_axi_input_mmap_AWUSER(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_AWUSER),
    .m_axi_input_mmap_WVALID(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_WVALID),
    .m_axi_input_mmap_WREADY(1'b0),
    .m_axi_input_mmap_WDATA(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_WDATA),
    .m_axi_input_mmap_WSTRB(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_WSTRB),
    .m_axi_input_mmap_WLAST(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_WLAST),
    .m_axi_input_mmap_WID(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_WID),
    .m_axi_input_mmap_WUSER(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_WUSER),
    .m_axi_input_mmap_ARVALID(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARVALID),
    .m_axi_input_mmap_ARREADY(input_mmap_ARREADY),
    .m_axi_input_mmap_ARADDR(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARADDR),
    .m_axi_input_mmap_ARID(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARID),
    .m_axi_input_mmap_ARLEN(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARLEN),
    .m_axi_input_mmap_ARSIZE(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARSIZE),
    .m_axi_input_mmap_ARBURST(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARBURST),
    .m_axi_input_mmap_ARLOCK(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARLOCK),
    .m_axi_input_mmap_ARCACHE(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARCACHE),
    .m_axi_input_mmap_ARPROT(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARPROT),
    .m_axi_input_mmap_ARQOS(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARQOS),
    .m_axi_input_mmap_ARREGION(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARREGION),
    .m_axi_input_mmap_ARUSER(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARUSER),
    .m_axi_input_mmap_RVALID(input_mmap_RVALID),
    .m_axi_input_mmap_RREADY(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_RREADY),
    .m_axi_input_mmap_RDATA(input_mmap_RDATA),
    .m_axi_input_mmap_RLAST(1'b0),
    .m_axi_input_mmap_RID(1'd0),
    .m_axi_input_mmap_RFIFONUM(input_mmap_RFIFONUM),
    .m_axi_input_mmap_RUSER(1'd0),
    .m_axi_input_mmap_RRESP(2'd0),
    .m_axi_input_mmap_BVALID(1'b0),
    .m_axi_input_mmap_BREADY(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_BREADY),
    .m_axi_input_mmap_BRESP(2'd0),
    .m_axi_input_mmap_BID(1'd0),
    .m_axi_input_mmap_BUSER(1'd0),
    .input_stream_s_din(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_input_stream_s_din),
    .input_stream_s_full_n(input_stream_s_full_n),
    .input_stream_s_write(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_input_stream_s_write),
    .zext_ln2955(tmp_1_reg_238),
    .zext_ln2968(empty_19_reg_233),
    .mul3_i(mul3_i_reg_228),
    .input_mmap_offset(input_mmap_offset)
);
input_loader_r1_ln_iembed_fp32_input_mmap_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 10 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_INPUT_MMAP_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_INPUT_MMAP_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_INPUT_MMAP_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_INPUT_MMAP_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_INPUT_MMAP_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_INPUT_MMAP_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_INPUT_MMAP_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_INPUT_MMAP_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_INPUT_MMAP_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_INPUT_MMAP_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_INPUT_MMAP_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 512 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 0 ))
input_mmap_m_axi_U(
    .AWVALID(m_axi_input_mmap_AWVALID),
    .AWREADY(m_axi_input_mmap_AWREADY),
    .AWADDR(m_axi_input_mmap_AWADDR),
    .AWID(m_axi_input_mmap_AWID),
    .AWLEN(m_axi_input_mmap_AWLEN),
    .AWSIZE(m_axi_input_mmap_AWSIZE),
    .AWBURST(m_axi_input_mmap_AWBURST),
    .AWLOCK(m_axi_input_mmap_AWLOCK),
    .AWCACHE(m_axi_input_mmap_AWCACHE),
    .AWPROT(m_axi_input_mmap_AWPROT),
    .AWQOS(m_axi_input_mmap_AWQOS),
    .AWREGION(m_axi_input_mmap_AWREGION),
    .AWUSER(m_axi_input_mmap_AWUSER),
    .WVALID(m_axi_input_mmap_WVALID),
    .WREADY(m_axi_input_mmap_WREADY),
    .WDATA(m_axi_input_mmap_WDATA),
    .WSTRB(m_axi_input_mmap_WSTRB),
    .WLAST(m_axi_input_mmap_WLAST),
    .WID(m_axi_input_mmap_WID),
    .WUSER(m_axi_input_mmap_WUSER),
    .ARVALID(m_axi_input_mmap_ARVALID),
    .ARREADY(m_axi_input_mmap_ARREADY),
    .ARADDR(m_axi_input_mmap_ARADDR),
    .ARID(m_axi_input_mmap_ARID),
    .ARLEN(m_axi_input_mmap_ARLEN),
    .ARSIZE(m_axi_input_mmap_ARSIZE),
    .ARBURST(m_axi_input_mmap_ARBURST),
    .ARLOCK(m_axi_input_mmap_ARLOCK),
    .ARCACHE(m_axi_input_mmap_ARCACHE),
    .ARPROT(m_axi_input_mmap_ARPROT),
    .ARQOS(m_axi_input_mmap_ARQOS),
    .ARREGION(m_axi_input_mmap_ARREGION),
    .ARUSER(m_axi_input_mmap_ARUSER),
    .RVALID(m_axi_input_mmap_RVALID),
    .RREADY(m_axi_input_mmap_RREADY),
    .RDATA(m_axi_input_mmap_RDATA),
    .RLAST(m_axi_input_mmap_RLAST),
    .RID(m_axi_input_mmap_RID),
    .RUSER(m_axi_input_mmap_RUSER),
    .RRESP(m_axi_input_mmap_RRESP),
    .BVALID(m_axi_input_mmap_BVALID),
    .BREADY(m_axi_input_mmap_BREADY),
    .BRESP(m_axi_input_mmap_BRESP),
    .BID(m_axi_input_mmap_BID),
    .BUSER(m_axi_input_mmap_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(input_mmap_ARVALID),
    .I_CH0_ARREADY(input_mmap_ARREADY),
    .I_CH0_ARADDR(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARADDR),
    .I_CH0_ARLEN(grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARLEN),
    .I_CH0_RVALID(input_mmap_RVALID),
    .I_CH0_RREADY(input_mmap_RREADY),
    .I_CH0_RDATA(input_mmap_RDATA),
    .I_CH0_RFIFONUM(input_mmap_RFIFONUM),
    .I_CH0_AWVALID(1'b0),
    .I_CH0_AWREADY(input_mmap_AWREADY),
    .I_CH0_AWADDR(64'd0),
    .I_CH0_AWLEN(32'd0),
    .I_CH0_WVALID(1'b0),
    .I_CH0_WREADY(input_mmap_WREADY),
    .I_CH0_WDATA(512'd0),
    .I_CH0_WSTRB(64'd0),
    .I_CH0_BVALID(input_mmap_BVALID),
    .I_CH0_BREADY(1'b0)
);
always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_start_reg <= 1'b1;
        end else if ((grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_ready == 1'b1)) begin
            grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_17_reg_218 <= empty_17_fu_142_p2;
        p_lshr_f_cast_reg_223 <= {{seq_len[24:4]}};
        tmp_reg_213 <= seq_len[32'd31];
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        empty_19_reg_233[30 : 11] <= empty_19_fu_190_p3[30 : 11];
        mul3_i_reg_228[31 : 11] <= mul3_i_fu_163_p3[31 : 11];
        tmp_1_reg_238[35 : 15] <= tmp_1_fu_199_p3[35 : 15];
    end
end
always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end
assign ap_ST_fsm_state2_blk = 1'b0;
always @ (*) begin
    if ((grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        input_mmap_ARVALID = grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_ARVALID;
    end else begin
        input_mmap_ARVALID = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        input_mmap_RREADY = grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_m_axi_input_mmap_RREADY;
    end else begin
        input_mmap_RREADY = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        input_stream_s_write = grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_input_stream_s_write;
    end else begin
        input_stream_s_write = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];
assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];
assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];
always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end
assign cmp17_i_fu_172_p2 = (($signed(empty_18_fu_158_p3) > $signed(21'd0)) ? 1'b1 : 1'b0);
assign empty_17_fu_142_p2 = (21'd0 - p_lshr_cast_fu_132_p4);
assign empty_18_fu_158_p3 = ((tmp_reg_213[0:0] == 1'b1) ? empty_17_reg_218 : p_lshr_f_cast_reg_223);
assign empty_19_fu_190_p3 = ((cmp17_i_fu_172_p2[0:0] == 1'b1) ? trunc_ln1_fu_182_p3 : 31'd0);
assign grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_start = grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_ap_start_reg;
assign input_stream_s_din = grp_input_loader_r1_ln_iembed_fp32_Pipeline_decoder_block_loop_read_input_loop_fu_98_input_stream_s_din;
assign mul3_i_fu_163_p3 = {{empty_18_fu_158_p3}, {11'd0}};
assign p_lshr_cast_fu_132_p4 = {{p_neg_fu_126_p2[24:4]}};
assign p_neg_fu_126_p2 = (25'd0 - trunc_ln2955_fu_114_p1);
assign tmp_1_fu_199_p3 = {{empty_18_fu_158_p3}, {15'd0}};
assign trunc_ln1_fu_182_p3 = {{trunc_ln2968_fu_178_p1}, {11'd0}};
assign trunc_ln2955_fu_114_p1 = seq_len[24:0];
assign trunc_ln2968_fu_178_p1 = empty_18_fu_158_p3[19:0];
always @ (posedge ap_clk) begin
    mul3_i_reg_228[10:0] <= 11'b00000000000;
    empty_19_reg_233[10:0] <= 11'b00000000000;
    tmp_1_reg_238[14:0] <= 15'b000000000000000;
end
endmodule