// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
module QuantWrapper_Linear_Layer_q_tb (
    input wire            ap_clk,
    input wire            ap_rst_n,
    output wire           interrupt,
    output wire [   63:0] m_axi_input_mmap_ARADDR,
    output wire [    1:0] m_axi_input_mmap_ARBURST,
    output wire [    3:0] m_axi_input_mmap_ARCACHE,
    output wire [    0:0] m_axi_input_mmap_ARID,
    output wire [    7:0] m_axi_input_mmap_ARLEN,
    output wire           m_axi_input_mmap_ARLOCK,
    output wire [    2:0] m_axi_input_mmap_ARPROT,
    output wire [    3:0] m_axi_input_mmap_ARQOS,
    input wire            m_axi_input_mmap_ARREADY,
    output wire [    2:0] m_axi_input_mmap_ARSIZE,
    output wire           m_axi_input_mmap_ARVALID,
    output wire [   63:0] m_axi_input_mmap_AWADDR,
    output wire [    1:0] m_axi_input_mmap_AWBURST,
    output wire [    3:0] m_axi_input_mmap_AWCACHE,
    output wire [    0:0] m_axi_input_mmap_AWID,
    output wire [    7:0] m_axi_input_mmap_AWLEN,
    output wire           m_axi_input_mmap_AWLOCK,
    output wire [    2:0] m_axi_input_mmap_AWPROT,
    output wire [    3:0] m_axi_input_mmap_AWQOS,
    input wire            m_axi_input_mmap_AWREADY,
    output wire [    2:0] m_axi_input_mmap_AWSIZE,
    output wire           m_axi_input_mmap_AWVALID,
    input wire  [    0:0] m_axi_input_mmap_BID,
    output wire           m_axi_input_mmap_BREADY,
    input wire  [    1:0] m_axi_input_mmap_BRESP,
    input wire            m_axi_input_mmap_BVALID,
    input wire  [  511:0] m_axi_input_mmap_RDATA,
    input wire  [    0:0] m_axi_input_mmap_RID,
    input wire            m_axi_input_mmap_RLAST,
    output wire           m_axi_input_mmap_RREADY,
    input wire  [    1:0] m_axi_input_mmap_RRESP,
    input wire            m_axi_input_mmap_RVALID,
    output wire [  511:0] m_axi_input_mmap_WDATA,
    output wire           m_axi_input_mmap_WLAST,
    input wire            m_axi_input_mmap_WREADY,
    output wire [   63:0] m_axi_input_mmap_WSTRB,
    output wire           m_axi_input_mmap_WVALID,
    output wire [   63:0] m_axi_output_mmap_ARADDR,
    output wire [    1:0] m_axi_output_mmap_ARBURST,
    output wire [    3:0] m_axi_output_mmap_ARCACHE,
    output wire [    0:0] m_axi_output_mmap_ARID,
    output wire [    7:0] m_axi_output_mmap_ARLEN,
    output wire           m_axi_output_mmap_ARLOCK,
    output wire [    2:0] m_axi_output_mmap_ARPROT,
    output wire [    3:0] m_axi_output_mmap_ARQOS,
    input wire            m_axi_output_mmap_ARREADY,
    output wire [    2:0] m_axi_output_mmap_ARSIZE,
    output wire           m_axi_output_mmap_ARVALID,
    output wire [   63:0] m_axi_output_mmap_AWADDR,
    output wire [    1:0] m_axi_output_mmap_AWBURST,
    output wire [    3:0] m_axi_output_mmap_AWCACHE,
    output wire [    0:0] m_axi_output_mmap_AWID,
    output wire [    7:0] m_axi_output_mmap_AWLEN,
    output wire           m_axi_output_mmap_AWLOCK,
    output wire [    2:0] m_axi_output_mmap_AWPROT,
    output wire [    3:0] m_axi_output_mmap_AWQOS,
    input wire            m_axi_output_mmap_AWREADY,
    output wire [    2:0] m_axi_output_mmap_AWSIZE,
    output wire           m_axi_output_mmap_AWVALID,
    input wire  [    0:0] m_axi_output_mmap_BID,
    output wire           m_axi_output_mmap_BREADY,
    input wire  [    1:0] m_axi_output_mmap_BRESP,
    input wire            m_axi_output_mmap_BVALID,
    input wire  [  511:0] m_axi_output_mmap_RDATA,
    input wire  [    0:0] m_axi_output_mmap_RID,
    input wire            m_axi_output_mmap_RLAST,
    output wire           m_axi_output_mmap_RREADY,
    input wire  [    1:0] m_axi_output_mmap_RRESP,
    input wire            m_axi_output_mmap_RVALID,
    output wire [  511:0] m_axi_output_mmap_WDATA,
    output wire           m_axi_output_mmap_WLAST,
    input wire            m_axi_output_mmap_WREADY,
    output wire [   63:0] m_axi_output_mmap_WSTRB,
    output wire           m_axi_output_mmap_WVALID,
    output wire [   63:0] m_axi_quant_weight_mmap_ARADDR,
    output wire [    1:0] m_axi_quant_weight_mmap_ARBURST,
    output wire [    3:0] m_axi_quant_weight_mmap_ARCACHE,
    output wire [    0:0] m_axi_quant_weight_mmap_ARID,
    output wire [    7:0] m_axi_quant_weight_mmap_ARLEN,
    output wire           m_axi_quant_weight_mmap_ARLOCK,
    output wire [    2:0] m_axi_quant_weight_mmap_ARPROT,
    output wire [    3:0] m_axi_quant_weight_mmap_ARQOS,
    input wire            m_axi_quant_weight_mmap_ARREADY,
    output wire [    2:0] m_axi_quant_weight_mmap_ARSIZE,
    output wire           m_axi_quant_weight_mmap_ARVALID,
    output wire [   63:0] m_axi_quant_weight_mmap_AWADDR,
    output wire [    1:0] m_axi_quant_weight_mmap_AWBURST,
    output wire [    3:0] m_axi_quant_weight_mmap_AWCACHE,
    output wire [    0:0] m_axi_quant_weight_mmap_AWID,
    output wire [    7:0] m_axi_quant_weight_mmap_AWLEN,
    output wire           m_axi_quant_weight_mmap_AWLOCK,
    output wire [    2:0] m_axi_quant_weight_mmap_AWPROT,
    output wire [    3:0] m_axi_quant_weight_mmap_AWQOS,
    input wire            m_axi_quant_weight_mmap_AWREADY,
    output wire [    2:0] m_axi_quant_weight_mmap_AWSIZE,
    output wire           m_axi_quant_weight_mmap_AWVALID,
    input wire  [    0:0] m_axi_quant_weight_mmap_BID,
    output wire           m_axi_quant_weight_mmap_BREADY,
    input wire  [    1:0] m_axi_quant_weight_mmap_BRESP,
    input wire            m_axi_quant_weight_mmap_BVALID,
    input wire  [  255:0] m_axi_quant_weight_mmap_RDATA,
    input wire  [    0:0] m_axi_quant_weight_mmap_RID,
    input wire            m_axi_quant_weight_mmap_RLAST,
    output wire           m_axi_quant_weight_mmap_RREADY,
    input wire  [    1:0] m_axi_quant_weight_mmap_RRESP,
    input wire            m_axi_quant_weight_mmap_RVALID,
    output wire [  255:0] m_axi_quant_weight_mmap_WDATA,
    output wire           m_axi_quant_weight_mmap_WLAST,
    input wire            m_axi_quant_weight_mmap_WREADY,
    output wire [   31:0] m_axi_quant_weight_mmap_WSTRB,
    output wire           m_axi_quant_weight_mmap_WVALID,
    output wire [   63:0] m_axi_weight_s_sum_mmap_ARADDR,
    output wire [    1:0] m_axi_weight_s_sum_mmap_ARBURST,
    output wire [    3:0] m_axi_weight_s_sum_mmap_ARCACHE,
    output wire [    0:0] m_axi_weight_s_sum_mmap_ARID,
    output wire [    7:0] m_axi_weight_s_sum_mmap_ARLEN,
    output wire           m_axi_weight_s_sum_mmap_ARLOCK,
    output wire [    2:0] m_axi_weight_s_sum_mmap_ARPROT,
    output wire [    3:0] m_axi_weight_s_sum_mmap_ARQOS,
    input wire            m_axi_weight_s_sum_mmap_ARREADY,
    output wire [    2:0] m_axi_weight_s_sum_mmap_ARSIZE,
    output wire           m_axi_weight_s_sum_mmap_ARVALID,
    output wire [   63:0] m_axi_weight_s_sum_mmap_AWADDR,
    output wire [    1:0] m_axi_weight_s_sum_mmap_AWBURST,
    output wire [    3:0] m_axi_weight_s_sum_mmap_AWCACHE,
    output wire [    0:0] m_axi_weight_s_sum_mmap_AWID,
    output wire [    7:0] m_axi_weight_s_sum_mmap_AWLEN,
    output wire           m_axi_weight_s_sum_mmap_AWLOCK,
    output wire [    2:0] m_axi_weight_s_sum_mmap_AWPROT,
    output wire [    3:0] m_axi_weight_s_sum_mmap_AWQOS,
    input wire            m_axi_weight_s_sum_mmap_AWREADY,
    output wire [    2:0] m_axi_weight_s_sum_mmap_AWSIZE,
    output wire           m_axi_weight_s_sum_mmap_AWVALID,
    input wire  [    0:0] m_axi_weight_s_sum_mmap_BID,
    output wire           m_axi_weight_s_sum_mmap_BREADY,
    input wire  [    1:0] m_axi_weight_s_sum_mmap_BRESP,
    input wire            m_axi_weight_s_sum_mmap_BVALID,
    input wire  [   63:0] m_axi_weight_s_sum_mmap_RDATA,
    input wire  [    0:0] m_axi_weight_s_sum_mmap_RID,
    input wire            m_axi_weight_s_sum_mmap_RLAST,
    output wire           m_axi_weight_s_sum_mmap_RREADY,
    input wire  [    1:0] m_axi_weight_s_sum_mmap_RRESP,
    input wire            m_axi_weight_s_sum_mmap_RVALID,
    output wire [   63:0] m_axi_weight_s_sum_mmap_WDATA,
    output wire           m_axi_weight_s_sum_mmap_WLAST,
    input wire            m_axi_weight_s_sum_mmap_WREADY,
    output wire [    7:0] m_axi_weight_s_sum_mmap_WSTRB,
    output wire           m_axi_weight_s_sum_mmap_WVALID,
    input wire  [    6:0] s_axi_control_ARADDR,
    output wire           s_axi_control_ARREADY,
    input wire            s_axi_control_ARVALID,
    input wire  [    6:0] s_axi_control_AWADDR,
    output wire           s_axi_control_AWREADY,
    input wire            s_axi_control_AWVALID,
    input wire            s_axi_control_BREADY,
    output wire [    1:0] s_axi_control_BRESP,
    output wire           s_axi_control_BVALID,
    output wire [   31:0] s_axi_control_RDATA,
    input wire            s_axi_control_RREADY,
    output wire [    1:0] s_axi_control_RRESP,
    output wire           s_axi_control_RVALID,
    input wire  [   31:0] s_axi_control_WDATA,
    output wire           s_axi_control_WREADY,
    input wire  [32'd3:0] s_axi_control_WSTRB,
    input wire            s_axi_control_WVALID
);

wire            Linear_Layer_i4xi4_q_0___rs_pipelined_ap_rst_n;
wire            Linear_Layer_i4xi4_q_0_ap_clk;
wire            Linear_Layer_i4xi4_q_0_ap_done;
wire            Linear_Layer_i4xi4_q_0_ap_idle;
wire            Linear_Layer_i4xi4_q_0_ap_ready;
wire            Linear_Layer_i4xi4_q_0_ap_rst_n;
wire            Linear_Layer_i4xi4_q_0_ap_start;
wire            Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_0_clk;
wire [     0:0] Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_0_if_din;
wire [     0:0] Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_0_if_dout;
wire            Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_1_clk;
wire [     0:0] Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_1_if_din;
wire [     0:0] Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_1_if_dout;
wire            Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_HEAD_if_dout;
wire            Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_TAIL_if_dout;
wire [    64:0] Linear_Layer_i4xi4_q_0_input_stream_peek_dout;
/**   Linear_Layer_i4xi4_q_0/input_stream_peek_dout   **/
wire [    64:0] Linear_Layer_i4xi4_q_0_input_stream_peek_dout_1;
wire            Linear_Layer_i4xi4_q_0_input_stream_peek_empty_n;
/**   Linear_Layer_i4xi4_q_0/input_stream_peek_empty_n   **/
wire            Linear_Layer_i4xi4_q_0_input_stream_peek_empty_n_1;
wire            Linear_Layer_i4xi4_q_0_input_stream_peek_read;
/**   Linear_Layer_i4xi4_q_0/input_stream_peek_read   **/
wire            Linear_Layer_i4xi4_q_0_input_stream_peek_read_1;
wire [    64:0] Linear_Layer_i4xi4_q_0_input_stream_s_dout;
wire            Linear_Layer_i4xi4_q_0_input_stream_s_empty_n;
wire            Linear_Layer_i4xi4_q_0_input_stream_s_read;
wire [   304:0] Linear_Layer_i4xi4_q_0_output_stream_peek;
/**   Linear_Layer_i4xi4_q_0/output_stream_peek   **/
wire [   304:0] Linear_Layer_i4xi4_q_0_output_stream_peek_1;
wire [   304:0] Linear_Layer_i4xi4_q_0_output_stream_s_din;
wire            Linear_Layer_i4xi4_q_0_output_stream_s_full_n;
wire            Linear_Layer_i4xi4_q_0_output_stream_s_write;
wire [    31:0] Linear_Layer_i4xi4_q_0_seq_len;
wire [   128:0] Linear_Layer_i4xi4_q_0_weight_stream_peek_dout;
/**   Linear_Layer_i4xi4_q_0/weight_stream_peek_dout   **/
wire [   128:0] Linear_Layer_i4xi4_q_0_weight_stream_peek_dout_1;
wire            Linear_Layer_i4xi4_q_0_weight_stream_peek_empty_n;
/**   Linear_Layer_i4xi4_q_0/weight_stream_peek_empty_n   **/
wire            Linear_Layer_i4xi4_q_0_weight_stream_peek_empty_n_1;
wire            Linear_Layer_i4xi4_q_0_weight_stream_peek_read;
/**   Linear_Layer_i4xi4_q_0/weight_stream_peek_read   **/
wire            Linear_Layer_i4xi4_q_0_weight_stream_peek_read_1;
wire [   128:0] Linear_Layer_i4xi4_q_0_weight_stream_s_dout;
wire            Linear_Layer_i4xi4_q_0_weight_stream_s_empty_n;
wire            Linear_Layer_i4xi4_q_0_weight_stream_s_read;
wire            _QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_0_clk932;
wire            _QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_1_clk76a;
wire            _Wrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_Linear_Layer_i4xi4_q_0_ap_clk92e;
wire            __Layer_q_tb_aux_split_aux_1_inst_quant_layer_r1_ln_iembed_fp32_int4_0_ap_clk7dc;
wire            __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_0_clk;
wire [     0:0] __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_0_if_din;
wire [     0:0] __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_0_if_dout;
wire            __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_1_clk;
wire [     0:0] __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_1_if_din;
wire [     0:0] __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_1_if_dout;
wire            __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_HEAD_if_dout;
wire            __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_TAIL_if_dout;
wire            __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst___rs_pipelined_ap_rst_n;
wire            __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst___tapa_fsm_unit_ap_clk;
wire            __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_control_s_axi_U_ACLK;
wire            __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_HEAD_clk;
wire            __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_TAIL_clk;
wire            __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_input_s_b_stream_clk;
wire            __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_input_stream_clk;
wire            __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_output_stream_clk;
wire            __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_quant_input_stream_clk;
wire            __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_quant_output_stream_clk;
wire            __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_quant_weight_stream_clk;
wire            __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_weight_s_sum_stream_clk;
wire            __rs_pt___rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_0___rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ap_rst_n;
wire [     6:0] __rs_pt_control_s_axi_U_0_control_s_axi_U_ARADDR;
wire            __rs_pt_control_s_axi_U_0_control_s_axi_U_ARREADY;
wire            __rs_pt_control_s_axi_U_0_control_s_axi_U_ARVALID;
wire [     6:0] __rs_pt_control_s_axi_U_1_control_s_axi_U_AWADDR;
wire            __rs_pt_control_s_axi_U_1_control_s_axi_U_AWREADY;
wire            __rs_pt_control_s_axi_U_1_control_s_axi_U_AWVALID;
wire            __rs_pt_control_s_axi_U_2_control_s_axi_U_BREADY;
wire [     1:0] __rs_pt_control_s_axi_U_2_control_s_axi_U_BRESP;
wire            __rs_pt_control_s_axi_U_2_control_s_axi_U_BVALID;
wire [    31:0] __rs_pt_control_s_axi_U_3_control_s_axi_U_RDATA;
wire            __rs_pt_control_s_axi_U_3_control_s_axi_U_RREADY;
wire [     1:0] __rs_pt_control_s_axi_U_3_control_s_axi_U_RRESP;
wire            __rs_pt_control_s_axi_U_3_control_s_axi_U_RVALID;
wire [    31:0] __rs_pt_control_s_axi_U_4_control_s_axi_U_WDATA;
wire            __rs_pt_control_s_axi_U_4_control_s_axi_U_WREADY;
wire [ 32'd3:0] __rs_pt_control_s_axi_U_4_control_s_axi_U_WSTRB;
wire            __rs_pt_control_s_axi_U_4_control_s_axi_U_WVALID;
wire            __rs_pt_control_s_axi_U_5_control_s_axi_U_interrupt;
wire [    63:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARADDR;
wire [     1:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARBURST;
wire [     3:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARCACHE;
wire [     0:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARID;
wire [     7:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARLEN;
wire [     1:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARLOCK;
wire [     2:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARPROT;
wire [     3:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARQOS;
wire            __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARREADY;
wire [     3:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARREGION;
wire [     2:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARSIZE;
wire [     0:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARUSER;
wire            __rs_pt_input_loader_r1_ln_iembed_fp32_0_0_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARVALID;
wire [    63:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWADDR;
wire [     1:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWBURST;
wire [     3:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWCACHE;
wire [     0:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWID;
wire [     7:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWLEN;
wire [     1:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWLOCK;
wire [     2:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWPROT;
wire [     3:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWQOS;
wire            __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWREADY;
wire [     3:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWREGION;
wire [     2:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWSIZE;
wire [     0:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWUSER;
wire            __rs_pt_input_loader_r1_ln_iembed_fp32_0_1_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWVALID;
wire [     0:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_2_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BID;
wire            __rs_pt_input_loader_r1_ln_iembed_fp32_0_2_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BREADY;
wire [     1:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_2_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BRESP;
wire [     0:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_2_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BUSER;
wire            __rs_pt_input_loader_r1_ln_iembed_fp32_0_2_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BVALID;
wire [   511:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_3_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RDATA;
wire [     0:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_3_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RID;
wire            __rs_pt_input_loader_r1_ln_iembed_fp32_0_3_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RLAST;
wire            __rs_pt_input_loader_r1_ln_iembed_fp32_0_3_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RREADY;
wire [     1:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_3_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RRESP;
wire [     0:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_3_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RUSER;
wire            __rs_pt_input_loader_r1_ln_iembed_fp32_0_3_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RVALID;
wire [   511:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_4_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WDATA;
wire [     0:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_4_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WID;
wire            __rs_pt_input_loader_r1_ln_iembed_fp32_0_4_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WLAST;
wire            __rs_pt_input_loader_r1_ln_iembed_fp32_0_4_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WREADY;
wire [32'd63:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_4_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WSTRB;
wire [     0:0] __rs_pt_input_loader_r1_ln_iembed_fp32_0_4_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WUSER;
wire            __rs_pt_input_loader_r1_ln_iembed_fp32_0_4_input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WVALID;
wire [    63:0] __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARADDR;
wire [     1:0] __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARBURST;
wire [     3:0] __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARCACHE;
wire [     0:0] __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARID;
wire [     7:0] __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARLEN;
wire [     1:0] __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARLOCK;
wire [     2:0] __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARPROT;
wire [     3:0] __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARQOS;
wire            __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARREADY;
wire [     3:0] __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARREGION;
wire [     2:0] __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARSIZE;
wire [     0:0] __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARUSER;
wire            __rs_pt_output_drainer_q_fp32_0_0_output_drainer_q_fp32_0_m_axi_output_mmap_ARVALID;
wire [    63:0] __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWADDR;
wire [     1:0] __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWBURST;
wire [     3:0] __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWCACHE;
wire [     0:0] __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWID;
wire [     7:0] __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWLEN;
wire [     1:0] __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWLOCK;
wire [     2:0] __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWPROT;
wire [     3:0] __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWQOS;
wire            __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWREADY;
wire [     3:0] __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWREGION;
wire [     2:0] __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWSIZE;
wire [     0:0] __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWUSER;
wire            __rs_pt_output_drainer_q_fp32_0_1_output_drainer_q_fp32_0_m_axi_output_mmap_AWVALID;
wire [     0:0] __rs_pt_output_drainer_q_fp32_0_2_output_drainer_q_fp32_0_m_axi_output_mmap_BID;
wire            __rs_pt_output_drainer_q_fp32_0_2_output_drainer_q_fp32_0_m_axi_output_mmap_BREADY;
wire [     1:0] __rs_pt_output_drainer_q_fp32_0_2_output_drainer_q_fp32_0_m_axi_output_mmap_BRESP;
wire [     0:0] __rs_pt_output_drainer_q_fp32_0_2_output_drainer_q_fp32_0_m_axi_output_mmap_BUSER;
wire            __rs_pt_output_drainer_q_fp32_0_2_output_drainer_q_fp32_0_m_axi_output_mmap_BVALID;
wire [   511:0] __rs_pt_output_drainer_q_fp32_0_3_output_drainer_q_fp32_0_m_axi_output_mmap_RDATA;
wire [     0:0] __rs_pt_output_drainer_q_fp32_0_3_output_drainer_q_fp32_0_m_axi_output_mmap_RID;
wire            __rs_pt_output_drainer_q_fp32_0_3_output_drainer_q_fp32_0_m_axi_output_mmap_RLAST;
wire            __rs_pt_output_drainer_q_fp32_0_3_output_drainer_q_fp32_0_m_axi_output_mmap_RREADY;
wire [     1:0] __rs_pt_output_drainer_q_fp32_0_3_output_drainer_q_fp32_0_m_axi_output_mmap_RRESP;
wire [     0:0] __rs_pt_output_drainer_q_fp32_0_3_output_drainer_q_fp32_0_m_axi_output_mmap_RUSER;
wire            __rs_pt_output_drainer_q_fp32_0_3_output_drainer_q_fp32_0_m_axi_output_mmap_RVALID;
wire [   511:0] __rs_pt_output_drainer_q_fp32_0_4_output_drainer_q_fp32_0_m_axi_output_mmap_WDATA;
wire [     0:0] __rs_pt_output_drainer_q_fp32_0_4_output_drainer_q_fp32_0_m_axi_output_mmap_WID;
wire            __rs_pt_output_drainer_q_fp32_0_4_output_drainer_q_fp32_0_m_axi_output_mmap_WLAST;
wire            __rs_pt_output_drainer_q_fp32_0_4_output_drainer_q_fp32_0_m_axi_output_mmap_WREADY;
wire [32'd63:0] __rs_pt_output_drainer_q_fp32_0_4_output_drainer_q_fp32_0_m_axi_output_mmap_WSTRB;
wire [     0:0] __rs_pt_output_drainer_q_fp32_0_4_output_drainer_q_fp32_0_m_axi_output_mmap_WUSER;
wire            __rs_pt_output_drainer_q_fp32_0_4_output_drainer_q_fp32_0_m_axi_output_mmap_WVALID;
wire [    63:0] __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARADDR;
wire [     1:0] __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARBURST;
wire [     3:0] __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARCACHE;
wire [     0:0] __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARID;
wire [     7:0] __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARLEN;
wire [     1:0] __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARLOCK;
wire [     2:0] __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARPROT;
wire [     3:0] __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARQOS;
wire            __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARREADY;
wire [     3:0] __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARREGION;
wire [     2:0] __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARSIZE;
wire [     0:0] __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARUSER;
wire            __rs_pt_weight_loader_wq_0_0_weight_loader_wq_0_m_axi_weight_mmap_ARVALID;
wire [    63:0] __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWADDR;
wire [     1:0] __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWBURST;
wire [     3:0] __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWCACHE;
wire [     0:0] __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWID;
wire [     7:0] __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWLEN;
wire [     1:0] __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWLOCK;
wire [     2:0] __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWPROT;
wire [     3:0] __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWQOS;
wire            __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWREADY;
wire [     3:0] __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWREGION;
wire [     2:0] __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWSIZE;
wire [     0:0] __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWUSER;
wire            __rs_pt_weight_loader_wq_0_1_weight_loader_wq_0_m_axi_weight_mmap_AWVALID;
wire [     0:0] __rs_pt_weight_loader_wq_0_2_weight_loader_wq_0_m_axi_weight_mmap_BID;
wire            __rs_pt_weight_loader_wq_0_2_weight_loader_wq_0_m_axi_weight_mmap_BREADY;
wire [     1:0] __rs_pt_weight_loader_wq_0_2_weight_loader_wq_0_m_axi_weight_mmap_BRESP;
wire [     0:0] __rs_pt_weight_loader_wq_0_2_weight_loader_wq_0_m_axi_weight_mmap_BUSER;
wire            __rs_pt_weight_loader_wq_0_2_weight_loader_wq_0_m_axi_weight_mmap_BVALID;
wire [   255:0] __rs_pt_weight_loader_wq_0_3_weight_loader_wq_0_m_axi_weight_mmap_RDATA;
wire [     0:0] __rs_pt_weight_loader_wq_0_3_weight_loader_wq_0_m_axi_weight_mmap_RID;
wire            __rs_pt_weight_loader_wq_0_3_weight_loader_wq_0_m_axi_weight_mmap_RLAST;
wire            __rs_pt_weight_loader_wq_0_3_weight_loader_wq_0_m_axi_weight_mmap_RREADY;
wire [     1:0] __rs_pt_weight_loader_wq_0_3_weight_loader_wq_0_m_axi_weight_mmap_RRESP;
wire [     0:0] __rs_pt_weight_loader_wq_0_3_weight_loader_wq_0_m_axi_weight_mmap_RUSER;
wire            __rs_pt_weight_loader_wq_0_3_weight_loader_wq_0_m_axi_weight_mmap_RVALID;
wire [   255:0] __rs_pt_weight_loader_wq_0_4_weight_loader_wq_0_m_axi_weight_mmap_WDATA;
wire [     0:0] __rs_pt_weight_loader_wq_0_4_weight_loader_wq_0_m_axi_weight_mmap_WID;
wire            __rs_pt_weight_loader_wq_0_4_weight_loader_wq_0_m_axi_weight_mmap_WLAST;
wire            __rs_pt_weight_loader_wq_0_4_weight_loader_wq_0_m_axi_weight_mmap_WREADY;
wire [32'd31:0] __rs_pt_weight_loader_wq_0_4_weight_loader_wq_0_m_axi_weight_mmap_WSTRB;
wire [     0:0] __rs_pt_weight_loader_wq_0_4_weight_loader_wq_0_m_axi_weight_mmap_WUSER;
wire            __rs_pt_weight_loader_wq_0_4_weight_loader_wq_0_m_axi_weight_mmap_WVALID;
wire [    63:0] __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARADDR;
wire [     1:0] __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARBURST;
wire [     3:0] __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARCACHE;
wire [     0:0] __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARID;
wire [     7:0] __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARLEN;
wire [     1:0] __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARLOCK;
wire [     2:0] __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARPROT;
wire [     3:0] __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARQOS;
wire            __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARREADY;
wire [     3:0] __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARREGION;
wire [     2:0] __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARSIZE;
wire [     0:0] __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARUSER;
wire            __rs_pt_weight_s_loader_wq_0_0_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARVALID;
wire [    63:0] __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWADDR;
wire [     1:0] __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWBURST;
wire [     3:0] __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWCACHE;
wire [     0:0] __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWID;
wire [     7:0] __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWLEN;
wire [     1:0] __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWLOCK;
wire [     2:0] __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWPROT;
wire [     3:0] __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWQOS;
wire            __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWREADY;
wire [     3:0] __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWREGION;
wire [     2:0] __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWSIZE;
wire [     0:0] __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWUSER;
wire            __rs_pt_weight_s_loader_wq_0_1_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWVALID;
wire [     0:0] __rs_pt_weight_s_loader_wq_0_2_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BID;
wire            __rs_pt_weight_s_loader_wq_0_2_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BREADY;
wire [     1:0] __rs_pt_weight_s_loader_wq_0_2_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BRESP;
wire [     0:0] __rs_pt_weight_s_loader_wq_0_2_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BUSER;
wire            __rs_pt_weight_s_loader_wq_0_2_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BVALID;
wire [    63:0] __rs_pt_weight_s_loader_wq_0_3_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RDATA;
wire [     0:0] __rs_pt_weight_s_loader_wq_0_3_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RID;
wire            __rs_pt_weight_s_loader_wq_0_3_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RLAST;
wire            __rs_pt_weight_s_loader_wq_0_3_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RREADY;
wire [     1:0] __rs_pt_weight_s_loader_wq_0_3_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RRESP;
wire [     0:0] __rs_pt_weight_s_loader_wq_0_3_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RUSER;
wire            __rs_pt_weight_s_loader_wq_0_3_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RVALID;
wire [    63:0] __rs_pt_weight_s_loader_wq_0_4_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WDATA;
wire [     0:0] __rs_pt_weight_s_loader_wq_0_4_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WID;
wire            __rs_pt_weight_s_loader_wq_0_4_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WLAST;
wire            __rs_pt_weight_s_loader_wq_0_4_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WREADY;
wire [ 32'd7:0] __rs_pt_weight_s_loader_wq_0_4_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WSTRB;
wire [     0:0] __rs_pt_weight_s_loader_wq_0_4_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WUSER;
wire            __rs_pt_weight_s_loader_wq_0_4_weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WVALID;
wire [    31:0] __tapa_fsm_unit_Linear_Layer_i4xi4_q_0___seq_len__q0;
wire            __tapa_fsm_unit_Linear_Layer_i4xi4_q_0__ap_done;
wire            __tapa_fsm_unit_Linear_Layer_i4xi4_q_0__ap_idle;
wire            __tapa_fsm_unit_Linear_Layer_i4xi4_q_0__ap_ready;
wire            __tapa_fsm_unit_Linear_Layer_i4xi4_q_0__ap_start;
wire            __tapa_fsm_unit_____rs_pipelined_ap_rst_n;
wire            __tapa_fsm_unit___ff_0_RS_FF_PP_BODY_0_clk;
wire [     0:0] __tapa_fsm_unit___ff_0_RS_FF_PP_BODY_0_if_din;
wire [     0:0] __tapa_fsm_unit___ff_0_RS_FF_PP_BODY_0_if_dout;
wire            __tapa_fsm_unit___ff_0_RS_FF_PP_BODY_1_clk;
wire [     0:0] __tapa_fsm_unit___ff_0_RS_FF_PP_BODY_1_if_din;
wire [     0:0] __tapa_fsm_unit___ff_0_RS_FF_PP_BODY_1_if_dout;
wire            __tapa_fsm_unit___ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] __tapa_fsm_unit___ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] __tapa_fsm_unit___ff_0_RS_FF_PP_HEAD_if_dout;
wire            __tapa_fsm_unit___ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] __tapa_fsm_unit___ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] __tapa_fsm_unit___ff_0_RS_FF_PP_TAIL_if_dout;
wire            __tapa_fsm_unit_ap_clk;
wire            __tapa_fsm_unit_ap_done;
wire            __tapa_fsm_unit_ap_idle;
wire            __tapa_fsm_unit_ap_ready;
wire            __tapa_fsm_unit_ap_rst_n;
wire            __tapa_fsm_unit_ap_start;
wire [    31:0] __tapa_fsm_unit_dequant_layer_q_int_fp32_0___seq_len__q0;
wire            __tapa_fsm_unit_dequant_layer_q_int_fp32_0__ap_done;
wire            __tapa_fsm_unit_dequant_layer_q_int_fp32_0__ap_idle;
wire            __tapa_fsm_unit_dequant_layer_q_int_fp32_0__ap_ready;
wire            __tapa_fsm_unit_dequant_layer_q_int_fp32_0__ap_start;
wire            __tapa_fsm_unit_global_fsm_ap_done;
wire            __tapa_fsm_unit_global_fsm_ap_start;
wire [    63:0] __tapa_fsm_unit_global_fsm_s_input_mmap_offset;
wire [    63:0] __tapa_fsm_unit_global_fsm_s_output_mmap_offset;
wire [    63:0] __tapa_fsm_unit_global_fsm_s_quant_weight_mmap_offset;
wire [    31:0] __tapa_fsm_unit_global_fsm_s_seq_len;
wire [    63:0] __tapa_fsm_unit_global_fsm_s_weight_s_sum_mmap_offset;
wire [    31:0] __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0___seq_len__q0;
wire            __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__ap_done;
wire            __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__ap_idle;
wire            __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__ap_ready;
wire            __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__ap_start;
wire [    63:0] __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__mmap_offset_q0;
wire [    63:0] __tapa_fsm_unit_input_mmap_offset;
wire            __tapa_fsm_unit_is_done_Linear_Layer_i4xi4_q_0;
wire            __tapa_fsm_unit_is_done_dequant_layer_q_int_fp32_0;
wire            __tapa_fsm_unit_is_done_input_loader_r1_ln_iembed_fp32_0;
wire            __tapa_fsm_unit_is_done_output_drainer_q_fp32_0;
wire            __tapa_fsm_unit_is_done_quant_layer_r1_ln_iembed_fp32_int4_0;
wire            __tapa_fsm_unit_is_done_weight_loader_wq_0;
wire            __tapa_fsm_unit_is_done_weight_s_loader_wq_0;
wire [    63:0] __tapa_fsm_unit_output_drainer_q_fp32_0___output_mmap_offset__q0;
wire [    31:0] __tapa_fsm_unit_output_drainer_q_fp32_0___seq_len__q0;
wire            __tapa_fsm_unit_output_drainer_q_fp32_0__ap_done;
wire            __tapa_fsm_unit_output_drainer_q_fp32_0__ap_idle;
wire            __tapa_fsm_unit_output_drainer_q_fp32_0__ap_ready;
wire            __tapa_fsm_unit_output_drainer_q_fp32_0__ap_start;
wire [    63:0] __tapa_fsm_unit_output_mmap_offset;
wire            __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__ap_done;
wire            __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__ap_idle;
wire            __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__ap_ready;
wire            __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__ap_start;
wire [    31:0] __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__seq_len_q0;
wire [    63:0] __tapa_fsm_unit_quant_weight_mmap_offset;
wire [    31:0] __tapa_fsm_unit_seq_len;
wire [    63:0] __tapa_fsm_unit_weight_loader_wq_0___quant_mmap_offset__q0;
wire [    31:0] __tapa_fsm_unit_weight_loader_wq_0___seq_len__q0;
wire            __tapa_fsm_unit_weight_loader_wq_0__ap_done;
wire            __tapa_fsm_unit_weight_loader_wq_0__ap_idle;
wire            __tapa_fsm_unit_weight_loader_wq_0__ap_ready;
wire            __tapa_fsm_unit_weight_loader_wq_0__ap_start;
wire [    63:0] __tapa_fsm_unit_weight_s_loader_wq_0___s_sum_mmap_offset__q0;
wire [    31:0] __tapa_fsm_unit_weight_s_loader_wq_0___seq_len__q0;
wire            __tapa_fsm_unit_weight_s_loader_wq_0__ap_done;
wire            __tapa_fsm_unit_weight_s_loader_wq_0__ap_idle;
wire            __tapa_fsm_unit_weight_s_loader_wq_0__ap_ready;
wire            __tapa_fsm_unit_weight_s_loader_wq_0__ap_start;
wire [    63:0] __tapa_fsm_unit_weight_s_sum_mmap_offset;
wire [     0:0] _antWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_HEAD_if_dout002;
wire [     0:0] _antWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_TAIL_if_doute0c;
wire            _ed_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0___rs_pipelined___tapa_fsm_unit_ap_rst_n1aa;
wire            _near_Layer_q_tb_aux_split_aux_1_inst_input_loader_r1_ln_iembed_fp32_0_ap_clk777;
wire [     0:0] _ntWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_0_if_din627;
wire [     0:0] _ntWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_1_if_din470;
wire            _ntWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_weight_s_loader_wq_0_ap_clk249;
wire            _per_Linear_Layer_q_tb_aux_split_aux_1_inst_dequant_layer_q_int_fp32_0_ap_clk655;
wire            _rapper_Linear_Layer_q_tb_aux_split_aux_1_inst_output_drainer_q_fp32_0_ap_clk9d4;
wire [     0:0] _tWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_0_if_dout063;
wire [     0:0] _tWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_1_if_doutb49;
wire [     0:0] _uantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_HEAD_if_din6e1;
wire [     0:0] _uantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_TAIL_if_dinf56;
wire            _uantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_weight_loader_wq_0_ap_clk299;
wire            control_s_axi_U_ACLK;
wire            control_s_axi_U_ACLK_EN;
wire [     6:0] control_s_axi_U_ARADDR;
wire            control_s_axi_U_ARESET;
wire            control_s_axi_U_ARREADY;
wire            control_s_axi_U_ARVALID;
wire [     6:0] control_s_axi_U_AWADDR;
wire            control_s_axi_U_AWREADY;
wire            control_s_axi_U_AWVALID;
wire            control_s_axi_U_BREADY;
wire [     1:0] control_s_axi_U_BRESP;
wire            control_s_axi_U_BVALID;
wire [    31:0] control_s_axi_U_RDATA;
wire            control_s_axi_U_RREADY;
wire [     1:0] control_s_axi_U_RRESP;
wire            control_s_axi_U_RVALID;
wire [    31:0] control_s_axi_U_WDATA;
wire            control_s_axi_U_WREADY;
wire [ 32'd3:0] control_s_axi_U_WSTRB;
wire            control_s_axi_U_WVALID;
wire            control_s_axi_U___rs_pipelined_ARESET;
wire            control_s_axi_U_ap_done;
wire            control_s_axi_U_ap_idle;
wire            control_s_axi_U_ap_ready;
wire            control_s_axi_U_ap_start;
wire            control_s_axi_U_ff_0_RS_FF_PP_BODY_0_clk;
wire [     0:0] control_s_axi_U_ff_0_RS_FF_PP_BODY_0_if_din;
wire [     0:0] control_s_axi_U_ff_0_RS_FF_PP_BODY_0_if_dout;
wire            control_s_axi_U_ff_0_RS_FF_PP_BODY_1_clk;
wire [     0:0] control_s_axi_U_ff_0_RS_FF_PP_BODY_1_if_din;
wire [     0:0] control_s_axi_U_ff_0_RS_FF_PP_BODY_1_if_dout;
wire            control_s_axi_U_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] control_s_axi_U_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] control_s_axi_U_ff_0_RS_FF_PP_HEAD_if_dout;
wire            control_s_axi_U_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] control_s_axi_U_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] control_s_axi_U_ff_0_RS_FF_PP_TAIL_if_dout;
wire [    63:0] control_s_axi_U_input_mmap_offset;
wire            control_s_axi_U_interrupt;
wire [    63:0] control_s_axi_U_output_mmap_offset;
wire [    63:0] control_s_axi_U_quant_weight_mmap_offset;
wire [    31:0] control_s_axi_U_seq_len;
wire [    63:0] control_s_axi_U_weight_s_sum_mmap_offset;
wire            dequant_layer_q_int_fp32_0___rs_pipelined_ap_rst_n;
wire            dequant_layer_q_int_fp32_0_ap_clk;
wire            dequant_layer_q_int_fp32_0_ap_done;
wire            dequant_layer_q_int_fp32_0_ap_idle;
wire            dequant_layer_q_int_fp32_0_ap_ready;
wire            dequant_layer_q_int_fp32_0_ap_rst_n;
wire            dequant_layer_q_int_fp32_0_ap_start;
wire            dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_0_clk;
wire [     0:0] dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_0_if_din;
wire [     0:0] dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout;
wire            dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_1_clk;
wire [     0:0] dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_1_if_din;
wire [     0:0] dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout;
wire            dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout;
wire            dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_TAIL_if_dout;
wire [    64:0] dequant_layer_q_int_fp32_0_input_s_b_stream_peek_dout;
/**   dequant_layer_q_int_fp32_0/input_s_b_stream_peek_dout   **/
wire [    64:0] dequant_layer_q_int_fp32_0_input_s_b_stream_peek_dout_1;
wire            dequant_layer_q_int_fp32_0_input_s_b_stream_peek_empty_n;
/**   dequant_layer_q_int_fp32_0/input_s_b_stream_peek_empty_n   **/
wire            dequant_layer_q_int_fp32_0_input_s_b_stream_peek_empty_n_1;
wire            dequant_layer_q_int_fp32_0_input_s_b_stream_peek_read;
/**   dequant_layer_q_int_fp32_0/input_s_b_stream_peek_read   **/
wire            dequant_layer_q_int_fp32_0_input_s_b_stream_peek_read_1;
wire [    64:0] dequant_layer_q_int_fp32_0_input_s_b_stream_s_dout;
wire            dequant_layer_q_int_fp32_0_input_s_b_stream_s_empty_n;
wire            dequant_layer_q_int_fp32_0_input_s_b_stream_s_read;
wire [   304:0] dequant_layer_q_int_fp32_0_input_stream_peek_dout;
/**   dequant_layer_q_int_fp32_0/input_stream_peek_dout   **/
wire [   304:0] dequant_layer_q_int_fp32_0_input_stream_peek_dout_1;
wire            dequant_layer_q_int_fp32_0_input_stream_peek_empty_n;
/**   dequant_layer_q_int_fp32_0/input_stream_peek_empty_n   **/
wire            dequant_layer_q_int_fp32_0_input_stream_peek_empty_n_1;
wire            dequant_layer_q_int_fp32_0_input_stream_peek_read;
/**   dequant_layer_q_int_fp32_0/input_stream_peek_read   **/
wire            dequant_layer_q_int_fp32_0_input_stream_peek_read_1;
wire [   304:0] dequant_layer_q_int_fp32_0_input_stream_s_dout;
wire            dequant_layer_q_int_fp32_0_input_stream_s_empty_n;
wire            dequant_layer_q_int_fp32_0_input_stream_s_read;
wire [   512:0] dequant_layer_q_int_fp32_0_output_stream_peek;
/**   dequant_layer_q_int_fp32_0/output_stream_peek   **/
wire [   512:0] dequant_layer_q_int_fp32_0_output_stream_peek_1;
wire [   512:0] dequant_layer_q_int_fp32_0_output_stream_s_din;
wire            dequant_layer_q_int_fp32_0_output_stream_s_full_n;
wire            dequant_layer_q_int_fp32_0_output_stream_s_write;
wire [    31:0] dequant_layer_q_int_fp32_0_seq_len;
wire [    64:0] dequant_layer_q_int_fp32_0_weight_s_sum_stream_peek_dout;
/**   dequant_layer_q_int_fp32_0/weight_s_sum_stream_peek_dout   **/
wire [    64:0] dequant_layer_q_int_fp32_0_weight_s_sum_stream_peek_dout_1;
wire            dequant_layer_q_int_fp32_0_weight_s_sum_stream_peek_empty_n;
/**   dequant_layer_q_int_fp32_0/weight_s_sum_stream_peek_empty_n   **/
wire            dequant_layer_q_int_fp32_0_weight_s_sum_stream_peek_empty_n_1;
wire            dequant_layer_q_int_fp32_0_weight_s_sum_stream_peek_read;
/**   dequant_layer_q_int_fp32_0/weight_s_sum_stream_peek_read   **/
wire            dequant_layer_q_int_fp32_0_weight_s_sum_stream_peek_read_1;
wire [    64:0] dequant_layer_q_int_fp32_0_weight_s_sum_stream_s_dout;
wire            dequant_layer_q_int_fp32_0_weight_s_sum_stream_s_empty_n;
wire            dequant_layer_q_int_fp32_0_weight_s_sum_stream_s_read;
wire            input_loader_r1_ln_iembed_fp32_0___rs_pipelined_ap_rst_n;
wire            input_loader_r1_ln_iembed_fp32_0_ap_clk;
wire            input_loader_r1_ln_iembed_fp32_0_ap_done;
wire            input_loader_r1_ln_iembed_fp32_0_ap_idle;
wire            input_loader_r1_ln_iembed_fp32_0_ap_ready;
wire            input_loader_r1_ln_iembed_fp32_0_ap_rst_n;
wire            input_loader_r1_ln_iembed_fp32_0_ap_start;
wire            input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_0_clk;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_0_if_din;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout;
wire            input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_1_clk;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_1_if_din;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout;
wire            input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout;
wire            input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_TAIL_if_dout;
wire [    63:0] input_loader_r1_ln_iembed_fp32_0_input_mmap_offset;
wire [   512:0] input_loader_r1_ln_iembed_fp32_0_input_stream_peek;
/**   input_loader_r1_ln_iembed_fp32_0/input_stream_peek   **/
wire [   512:0] input_loader_r1_ln_iembed_fp32_0_input_stream_peek_1;
wire [   512:0] input_loader_r1_ln_iembed_fp32_0_input_stream_s_din;
wire            input_loader_r1_ln_iembed_fp32_0_input_stream_s_full_n;
wire            input_loader_r1_ln_iembed_fp32_0_input_stream_s_write;
wire [    63:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARADDR;
wire [     1:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARBURST;
wire [     3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARCACHE;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARID;
wire [     7:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARLEN;
wire [     1:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARLOCK;
wire [     2:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARPROT;
wire [     3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARQOS;
wire            input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARREADY;
wire [     3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARREGION;
/**   input_loader_r1_ln_iembed_fp32_0/m_axi_input_mmap_ARREGION   **/
wire [     3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARREGION_1;
wire [     2:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARSIZE;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARUSER;
/**   input_loader_r1_ln_iembed_fp32_0/m_axi_input_mmap_ARUSER   **/
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARUSER_1;
wire            input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARVALID;
wire [    63:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWADDR;
wire [     1:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWBURST;
wire [     3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWCACHE;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWID;
wire [     7:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWLEN;
wire [     1:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWLOCK;
wire [     2:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWPROT;
wire [     3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWQOS;
wire            input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWREADY;
wire [     3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWREGION;
/**   input_loader_r1_ln_iembed_fp32_0/m_axi_input_mmap_AWREGION   **/
wire [     3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWREGION_1;
wire [     2:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWSIZE;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWUSER;
/**   input_loader_r1_ln_iembed_fp32_0/m_axi_input_mmap_AWUSER   **/
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWUSER_1;
wire            input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWVALID;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BID;
wire            input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BREADY;
wire [     1:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BRESP;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BUSER;
/**   input_loader_r1_ln_iembed_fp32_0/m_axi_input_mmap_BUSER   **/
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BUSER_1;
wire            input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BVALID;
wire [   511:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RDATA;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RID;
wire            input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RLAST;
wire            input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RREADY;
wire [     1:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RRESP;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RUSER;
/**   input_loader_r1_ln_iembed_fp32_0/m_axi_input_mmap_RUSER   **/
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RUSER_1;
wire            input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RVALID;
wire [   511:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WDATA;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WID;
/**   input_loader_r1_ln_iembed_fp32_0/m_axi_input_mmap_WID   **/
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WID_1;
wire            input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WLAST;
wire            input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WREADY;
wire [32'd63:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WSTRB;
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WUSER;
/**   input_loader_r1_ln_iembed_fp32_0/m_axi_input_mmap_WUSER   **/
wire [     0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WUSER_1;
wire            input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WVALID;
wire [    31:0] input_loader_r1_ln_iembed_fp32_0_seq_len;
wire            input_s_b_stream___rs_pipelined_reset;
wire            input_s_b_stream_clk;
wire            input_s_b_stream_ff_0_RS_FF_PP_BODY_0_clk;
wire [     0:0] input_s_b_stream_ff_0_RS_FF_PP_BODY_0_if_din;
wire [     0:0] input_s_b_stream_ff_0_RS_FF_PP_BODY_0_if_dout;
wire            input_s_b_stream_ff_0_RS_FF_PP_BODY_1_clk;
wire [     0:0] input_s_b_stream_ff_0_RS_FF_PP_BODY_1_if_din;
wire [     0:0] input_s_b_stream_ff_0_RS_FF_PP_BODY_1_if_dout;
wire            input_s_b_stream_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] input_s_b_stream_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] input_s_b_stream_ff_0_RS_FF_PP_HEAD_if_dout;
wire            input_s_b_stream_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] input_s_b_stream_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] input_s_b_stream_ff_0_RS_FF_PP_TAIL_if_dout;
wire [    64:0] input_s_b_stream_if_din;
wire [    64:0] input_s_b_stream_if_dout;
wire            input_s_b_stream_if_empty_n;
wire            input_s_b_stream_if_full_n;
wire            input_s_b_stream_if_read;
wire            input_s_b_stream_if_read_ce;
wire            input_s_b_stream_if_write;
wire            input_s_b_stream_if_write_ce;
wire            input_s_b_stream_reset;
wire            input_stream___rs_pipelined_reset;
wire            input_stream_clk;
wire            input_stream_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] input_stream_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] input_stream_ff_0_RS_FF_PP_HEAD_if_dout;
wire            input_stream_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] input_stream_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] input_stream_ff_0_RS_FF_PP_TAIL_if_dout;
wire [   512:0] input_stream_if_din;
wire [   512:0] input_stream_if_dout;
wire            input_stream_if_empty_n;
wire            input_stream_if_full_n;
wire            input_stream_if_read;
wire            input_stream_if_read_ce;
wire            input_stream_if_write;
wire            input_stream_if_write_ce;
wire            input_stream_reset;
wire            output_drainer_q_fp32_0___rs_pipelined_ap_rst_n;
wire            output_drainer_q_fp32_0_ap_clk;
wire            output_drainer_q_fp32_0_ap_done;
wire            output_drainer_q_fp32_0_ap_idle;
wire            output_drainer_q_fp32_0_ap_ready;
wire            output_drainer_q_fp32_0_ap_rst_n;
wire            output_drainer_q_fp32_0_ap_start;
wire            output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_0_clk;
wire [     0:0] output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_0_if_din;
wire [     0:0] output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout;
wire            output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_1_clk;
wire [     0:0] output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_1_if_din;
wire [     0:0] output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout;
wire            output_drainer_q_fp32_0_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] output_drainer_q_fp32_0_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] output_drainer_q_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout;
wire            output_drainer_q_fp32_0_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] output_drainer_q_fp32_0_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] output_drainer_q_fp32_0_ff_0_RS_FF_PP_TAIL_if_dout;
wire [    63:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARADDR;
wire [     1:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARBURST;
wire [     3:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARCACHE;
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARID;
wire [     7:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARLEN;
wire [     1:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARLOCK;
wire [     2:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARPROT;
wire [     3:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARQOS;
wire            output_drainer_q_fp32_0_m_axi_output_mmap_ARREADY;
wire [     3:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARREGION;
/**   output_drainer_q_fp32_0/m_axi_output_mmap_ARREGION   **/
wire [     3:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARREGION_1;
wire [     2:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARSIZE;
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARUSER;
/**   output_drainer_q_fp32_0/m_axi_output_mmap_ARUSER   **/
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARUSER_1;
wire            output_drainer_q_fp32_0_m_axi_output_mmap_ARVALID;
wire [    63:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWADDR;
wire [     1:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWBURST;
wire [     3:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWCACHE;
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWID;
wire [     7:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWLEN;
wire [     1:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWLOCK;
wire [     2:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWPROT;
wire [     3:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWQOS;
wire            output_drainer_q_fp32_0_m_axi_output_mmap_AWREADY;
wire [     3:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWREGION;
/**   output_drainer_q_fp32_0/m_axi_output_mmap_AWREGION   **/
wire [     3:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWREGION_1;
wire [     2:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWSIZE;
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWUSER;
/**   output_drainer_q_fp32_0/m_axi_output_mmap_AWUSER   **/
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWUSER_1;
wire            output_drainer_q_fp32_0_m_axi_output_mmap_AWVALID;
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_BID;
wire            output_drainer_q_fp32_0_m_axi_output_mmap_BREADY;
wire [     1:0] output_drainer_q_fp32_0_m_axi_output_mmap_BRESP;
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_BUSER;
/**   output_drainer_q_fp32_0/m_axi_output_mmap_BUSER   **/
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_BUSER_1;
wire            output_drainer_q_fp32_0_m_axi_output_mmap_BVALID;
wire [   511:0] output_drainer_q_fp32_0_m_axi_output_mmap_RDATA;
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_RID;
wire            output_drainer_q_fp32_0_m_axi_output_mmap_RLAST;
wire            output_drainer_q_fp32_0_m_axi_output_mmap_RREADY;
wire [     1:0] output_drainer_q_fp32_0_m_axi_output_mmap_RRESP;
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_RUSER;
/**   output_drainer_q_fp32_0/m_axi_output_mmap_RUSER   **/
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_RUSER_1;
wire            output_drainer_q_fp32_0_m_axi_output_mmap_RVALID;
wire [   511:0] output_drainer_q_fp32_0_m_axi_output_mmap_WDATA;
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_WID;
/**   output_drainer_q_fp32_0/m_axi_output_mmap_WID   **/
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_WID_1;
wire            output_drainer_q_fp32_0_m_axi_output_mmap_WLAST;
wire            output_drainer_q_fp32_0_m_axi_output_mmap_WREADY;
wire [32'd63:0] output_drainer_q_fp32_0_m_axi_output_mmap_WSTRB;
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_WUSER;
/**   output_drainer_q_fp32_0/m_axi_output_mmap_WUSER   **/
wire [     0:0] output_drainer_q_fp32_0_m_axi_output_mmap_WUSER_1;
wire            output_drainer_q_fp32_0_m_axi_output_mmap_WVALID;
wire [    63:0] output_drainer_q_fp32_0_output_mmap_offset;
wire [   512:0] output_drainer_q_fp32_0_output_stream_peek_dout;
/**   output_drainer_q_fp32_0/output_stream_peek_dout   **/
wire [   512:0] output_drainer_q_fp32_0_output_stream_peek_dout_1;
wire            output_drainer_q_fp32_0_output_stream_peek_empty_n;
/**   output_drainer_q_fp32_0/output_stream_peek_empty_n   **/
wire            output_drainer_q_fp32_0_output_stream_peek_empty_n_1;
wire            output_drainer_q_fp32_0_output_stream_peek_read;
/**   output_drainer_q_fp32_0/output_stream_peek_read   **/
wire            output_drainer_q_fp32_0_output_stream_peek_read_1;
wire [   512:0] output_drainer_q_fp32_0_output_stream_s_dout;
wire            output_drainer_q_fp32_0_output_stream_s_empty_n;
wire            output_drainer_q_fp32_0_output_stream_s_read;
wire [    31:0] output_drainer_q_fp32_0_seq_len;
wire            output_stream___rs_pipelined_reset;
wire            output_stream_clk;
wire            output_stream_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] output_stream_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] output_stream_ff_0_RS_FF_PP_HEAD_if_dout;
wire            output_stream_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] output_stream_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] output_stream_ff_0_RS_FF_PP_TAIL_if_dout;
wire [   512:0] output_stream_if_din;
wire [   512:0] output_stream_if_dout;
wire            output_stream_if_empty_n;
wire            output_stream_if_full_n;
wire            output_stream_if_read;
wire            output_stream_if_read_ce;
wire            output_stream_if_write;
wire            output_stream_if_write_ce;
wire            output_stream_reset;
wire            quant_input_stream___rs_pipelined_reset;
wire            quant_input_stream_clk;
wire            quant_input_stream_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] quant_input_stream_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] quant_input_stream_ff_0_RS_FF_PP_HEAD_if_dout;
wire            quant_input_stream_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] quant_input_stream_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] quant_input_stream_ff_0_RS_FF_PP_TAIL_if_dout;
wire [    64:0] quant_input_stream_if_din;
wire [    64:0] quant_input_stream_if_dout;
wire            quant_input_stream_if_empty_n;
wire            quant_input_stream_if_full_n;
wire            quant_input_stream_if_read;
wire            quant_input_stream_if_read_ce;
wire            quant_input_stream_if_write;
wire            quant_input_stream_if_write_ce;
wire            quant_input_stream_reset;
wire            quant_layer_r1_ln_iembed_fp32_int4_0___rs_pipelined_ap_rst_n;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_ap_clk;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_ap_done;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_ap_idle;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_ap_ready;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_ap_rst_n;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_ap_start;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_HEAD_if_dout;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_TAIL_if_dout;
wire [    64:0] quant_layer_r1_ln_iembed_fp32_int4_0_input_s_b_stream_peek;
/**   quant_layer_r1_ln_iembed_fp32_int4_0/input_s_b_stream_peek   **/
wire [    64:0] quant_layer_r1_ln_iembed_fp32_int4_0_input_s_b_stream_peek_1;
wire [    64:0] quant_layer_r1_ln_iembed_fp32_int4_0_input_s_b_stream_s_din;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_input_s_b_stream_s_full_n;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_input_s_b_stream_s_write;
wire [   512:0] quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_peek_dout;
/**   quant_layer_r1_ln_iembed_fp32_int4_0/input_stream_peek_dout   **/
wire [   512:0] quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_peek_dout_1;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_peek_empty_n;
/**   quant_layer_r1_ln_iembed_fp32_int4_0/input_stream_peek_empty_n   **/
wire            quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_peek_empty_n_1;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_peek_read;
/**   quant_layer_r1_ln_iembed_fp32_int4_0/input_stream_peek_read   **/
wire            quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_peek_read_1;
wire [   512:0] quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_s_dout;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_s_empty_n;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_s_read;
wire [    64:0] quant_layer_r1_ln_iembed_fp32_int4_0_output_stream_peek;
/**   quant_layer_r1_ln_iembed_fp32_int4_0/output_stream_peek   **/
wire [    64:0] quant_layer_r1_ln_iembed_fp32_int4_0_output_stream_peek_1;
wire [    64:0] quant_layer_r1_ln_iembed_fp32_int4_0_output_stream_s_din;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_output_stream_s_full_n;
wire            quant_layer_r1_ln_iembed_fp32_int4_0_output_stream_s_write;
wire [    31:0] quant_layer_r1_ln_iembed_fp32_int4_0_seq_len;
wire            quant_output_stream___rs_pipelined_reset;
wire            quant_output_stream_clk;
wire            quant_output_stream_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] quant_output_stream_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] quant_output_stream_ff_0_RS_FF_PP_HEAD_if_dout;
wire            quant_output_stream_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] quant_output_stream_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] quant_output_stream_ff_0_RS_FF_PP_TAIL_if_dout;
wire [   304:0] quant_output_stream_if_din;
wire [   304:0] quant_output_stream_if_dout;
wire            quant_output_stream_if_empty_n;
wire            quant_output_stream_if_full_n;
wire            quant_output_stream_if_read;
wire            quant_output_stream_if_read_ce;
wire            quant_output_stream_if_write;
wire            quant_output_stream_if_write_ce;
wire            quant_output_stream_reset;
wire            quant_weight_stream___rs_pipelined_reset;
wire            quant_weight_stream_clk;
wire            quant_weight_stream_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] quant_weight_stream_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] quant_weight_stream_ff_0_RS_FF_PP_HEAD_if_dout;
wire            quant_weight_stream_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] quant_weight_stream_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] quant_weight_stream_ff_0_RS_FF_PP_TAIL_if_dout;
wire [   128:0] quant_weight_stream_if_din;
wire [   128:0] quant_weight_stream_if_dout;
wire            quant_weight_stream_if_empty_n;
wire            quant_weight_stream_if_full_n;
wire            quant_weight_stream_if_read;
wire            quant_weight_stream_if_read_ce;
wire            quant_weight_stream_if_write;
wire            quant_weight_stream_if_write_ce;
wire            quant_weight_stream_reset;
wire            weight_loader_wq_0___rs_pipelined_ap_rst_n;
wire            weight_loader_wq_0_ap_clk;
wire            weight_loader_wq_0_ap_done;
wire            weight_loader_wq_0_ap_idle;
wire            weight_loader_wq_0_ap_ready;
wire            weight_loader_wq_0_ap_rst_n;
wire            weight_loader_wq_0_ap_start;
wire            weight_loader_wq_0_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] weight_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] weight_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout;
wire            weight_loader_wq_0_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] weight_loader_wq_0_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] weight_loader_wq_0_ff_0_RS_FF_PP_TAIL_if_dout;
wire [    63:0] weight_loader_wq_0_m_axi_weight_mmap_ARADDR;
wire [     1:0] weight_loader_wq_0_m_axi_weight_mmap_ARBURST;
wire [     3:0] weight_loader_wq_0_m_axi_weight_mmap_ARCACHE;
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_ARID;
wire [     7:0] weight_loader_wq_0_m_axi_weight_mmap_ARLEN;
wire [     1:0] weight_loader_wq_0_m_axi_weight_mmap_ARLOCK;
wire [     2:0] weight_loader_wq_0_m_axi_weight_mmap_ARPROT;
wire [     3:0] weight_loader_wq_0_m_axi_weight_mmap_ARQOS;
wire            weight_loader_wq_0_m_axi_weight_mmap_ARREADY;
wire [     3:0] weight_loader_wq_0_m_axi_weight_mmap_ARREGION;
/**   weight_loader_wq_0/m_axi_weight_mmap_ARREGION   **/
wire [     3:0] weight_loader_wq_0_m_axi_weight_mmap_ARREGION_1;
wire [     2:0] weight_loader_wq_0_m_axi_weight_mmap_ARSIZE;
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_ARUSER;
/**   weight_loader_wq_0/m_axi_weight_mmap_ARUSER   **/
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_ARUSER_1;
wire            weight_loader_wq_0_m_axi_weight_mmap_ARVALID;
wire [    63:0] weight_loader_wq_0_m_axi_weight_mmap_AWADDR;
wire [     1:0] weight_loader_wq_0_m_axi_weight_mmap_AWBURST;
wire [     3:0] weight_loader_wq_0_m_axi_weight_mmap_AWCACHE;
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_AWID;
wire [     7:0] weight_loader_wq_0_m_axi_weight_mmap_AWLEN;
wire [     1:0] weight_loader_wq_0_m_axi_weight_mmap_AWLOCK;
wire [     2:0] weight_loader_wq_0_m_axi_weight_mmap_AWPROT;
wire [     3:0] weight_loader_wq_0_m_axi_weight_mmap_AWQOS;
wire            weight_loader_wq_0_m_axi_weight_mmap_AWREADY;
wire [     3:0] weight_loader_wq_0_m_axi_weight_mmap_AWREGION;
/**   weight_loader_wq_0/m_axi_weight_mmap_AWREGION   **/
wire [     3:0] weight_loader_wq_0_m_axi_weight_mmap_AWREGION_1;
wire [     2:0] weight_loader_wq_0_m_axi_weight_mmap_AWSIZE;
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_AWUSER;
/**   weight_loader_wq_0/m_axi_weight_mmap_AWUSER   **/
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_AWUSER_1;
wire            weight_loader_wq_0_m_axi_weight_mmap_AWVALID;
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_BID;
wire            weight_loader_wq_0_m_axi_weight_mmap_BREADY;
wire [     1:0] weight_loader_wq_0_m_axi_weight_mmap_BRESP;
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_BUSER;
/**   weight_loader_wq_0/m_axi_weight_mmap_BUSER   **/
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_BUSER_1;
wire            weight_loader_wq_0_m_axi_weight_mmap_BVALID;
wire [   255:0] weight_loader_wq_0_m_axi_weight_mmap_RDATA;
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_RID;
wire            weight_loader_wq_0_m_axi_weight_mmap_RLAST;
wire            weight_loader_wq_0_m_axi_weight_mmap_RREADY;
wire [     1:0] weight_loader_wq_0_m_axi_weight_mmap_RRESP;
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_RUSER;
/**   weight_loader_wq_0/m_axi_weight_mmap_RUSER   **/
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_RUSER_1;
wire            weight_loader_wq_0_m_axi_weight_mmap_RVALID;
wire [   255:0] weight_loader_wq_0_m_axi_weight_mmap_WDATA;
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_WID;
/**   weight_loader_wq_0/m_axi_weight_mmap_WID   **/
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_WID_1;
wire            weight_loader_wq_0_m_axi_weight_mmap_WLAST;
wire            weight_loader_wq_0_m_axi_weight_mmap_WREADY;
wire [32'd31:0] weight_loader_wq_0_m_axi_weight_mmap_WSTRB;
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_WUSER;
/**   weight_loader_wq_0/m_axi_weight_mmap_WUSER   **/
wire [     0:0] weight_loader_wq_0_m_axi_weight_mmap_WUSER_1;
wire            weight_loader_wq_0_m_axi_weight_mmap_WVALID;
wire [    31:0] weight_loader_wq_0_seq_len;
wire [    63:0] weight_loader_wq_0_weight_mmap_offset;
wire [   128:0] weight_loader_wq_0_weight_stream_peek;
/**   weight_loader_wq_0/weight_stream_peek   **/
wire [   128:0] weight_loader_wq_0_weight_stream_peek_1;
wire [   128:0] weight_loader_wq_0_weight_stream_s_din;
wire            weight_loader_wq_0_weight_stream_s_full_n;
wire            weight_loader_wq_0_weight_stream_s_write;
wire            weight_s_loader_wq_0___rs_pipelined_ap_rst_n;
wire            weight_s_loader_wq_0_ap_clk;
wire            weight_s_loader_wq_0_ap_done;
wire            weight_s_loader_wq_0_ap_idle;
wire            weight_s_loader_wq_0_ap_ready;
wire            weight_s_loader_wq_0_ap_rst_n;
wire            weight_s_loader_wq_0_ap_start;
wire            weight_s_loader_wq_0_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] weight_s_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] weight_s_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout;
wire            weight_s_loader_wq_0_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] weight_s_loader_wq_0_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] weight_s_loader_wq_0_ff_0_RS_FF_PP_TAIL_if_dout;
wire [    63:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARADDR;
wire [     1:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARBURST;
wire [     3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARCACHE;
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARID;
wire [     7:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARLEN;
wire [     1:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARLOCK;
wire [     2:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARPROT;
wire [     3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARQOS;
wire            weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARREADY;
wire [     3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARREGION;
/**   weight_s_loader_wq_0/m_axi_weight_s_sum_mmap_ARREGION   **/
wire [     3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARREGION_1;
wire [     2:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARSIZE;
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARUSER;
/**   weight_s_loader_wq_0/m_axi_weight_s_sum_mmap_ARUSER   **/
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARUSER_1;
wire            weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARVALID;
wire [    63:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWADDR;
wire [     1:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWBURST;
wire [     3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWCACHE;
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWID;
wire [     7:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWLEN;
wire [     1:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWLOCK;
wire [     2:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWPROT;
wire [     3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWQOS;
wire            weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWREADY;
wire [     3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWREGION;
/**   weight_s_loader_wq_0/m_axi_weight_s_sum_mmap_AWREGION   **/
wire [     3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWREGION_1;
wire [     2:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWSIZE;
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWUSER;
/**   weight_s_loader_wq_0/m_axi_weight_s_sum_mmap_AWUSER   **/
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWUSER_1;
wire            weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWVALID;
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BID;
wire            weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BREADY;
wire [     1:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BRESP;
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BUSER;
/**   weight_s_loader_wq_0/m_axi_weight_s_sum_mmap_BUSER   **/
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BUSER_1;
wire            weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BVALID;
wire [    63:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RDATA;
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RID;
wire            weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RLAST;
wire            weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RREADY;
wire [     1:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RRESP;
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RUSER;
/**   weight_s_loader_wq_0/m_axi_weight_s_sum_mmap_RUSER   **/
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RUSER_1;
wire            weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RVALID;
wire [    63:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WDATA;
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WID;
/**   weight_s_loader_wq_0/m_axi_weight_s_sum_mmap_WID   **/
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WID_1;
wire            weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WLAST;
wire            weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WREADY;
wire [ 32'd7:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WSTRB;
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WUSER;
/**   weight_s_loader_wq_0/m_axi_weight_s_sum_mmap_WUSER   **/
wire [     0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WUSER_1;
wire            weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WVALID;
wire [    31:0] weight_s_loader_wq_0_seq_len;
wire [    63:0] weight_s_loader_wq_0_weight_s_sum_mmap_offset;
wire [    64:0] weight_s_loader_wq_0_weight_s_sum_stream_peek;
/**   weight_s_loader_wq_0/weight_s_sum_stream_peek   **/
wire [    64:0] weight_s_loader_wq_0_weight_s_sum_stream_peek_1;
wire [    64:0] weight_s_loader_wq_0_weight_s_sum_stream_s_din;
wire            weight_s_loader_wq_0_weight_s_sum_stream_s_full_n;
wire            weight_s_loader_wq_0_weight_s_sum_stream_s_write;
wire            weight_s_sum_stream___rs_pipelined_reset;
wire            weight_s_sum_stream_clk;
wire            weight_s_sum_stream_ff_0_RS_FF_PP_HEAD_clk;
wire [     0:0] weight_s_sum_stream_ff_0_RS_FF_PP_HEAD_if_din;
wire [     0:0] weight_s_sum_stream_ff_0_RS_FF_PP_HEAD_if_dout;
wire            weight_s_sum_stream_ff_0_RS_FF_PP_TAIL_clk;
wire [     0:0] weight_s_sum_stream_ff_0_RS_FF_PP_TAIL_if_din;
wire [     0:0] weight_s_sum_stream_ff_0_RS_FF_PP_TAIL_if_dout;
wire [    64:0] weight_s_sum_stream_if_din;
wire [    64:0] weight_s_sum_stream_if_dout;
wire            weight_s_sum_stream_if_empty_n;
wire            weight_s_sum_stream_if_full_n;
wire            weight_s_sum_stream_if_read;
wire            weight_s_sum_stream_if_read_ce;
wire            weight_s_sum_stream_if_write;
wire            weight_s_sum_stream_if_write_ce;
wire            weight_s_sum_stream_reset;


(* keep_hierarchy="true" *)
SLOT_X0Y0_TO_SLOT_X0Y0 SLOT_X0Y0_TO_SLOT_X0Y0_0 (
    .Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_1_if_dout                              (Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_1_if_dout),
    .__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_1_if_dout          (__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_1_if_dout),
    .__tapa_fsm_unit___ff_0_RS_FF_PP_BODY_1_if_dout                                   (__tapa_fsm_unit___ff_0_RS_FF_PP_BODY_1_if_dout),
    ._antWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_HEAD_if_dout002 (_antWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_HEAD_if_dout002),
    .ap_clk                                                                           (ap_clk),
    .ap_rst_n                                                                         (ap_rst_n),
    .control_s_axi_U_ff_0_RS_FF_PP_BODY_1_if_dout                                     (control_s_axi_U_ff_0_RS_FF_PP_BODY_1_if_dout),
    .dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout                          (dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout),
    .input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout                    (input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout),
    .input_s_b_stream_ff_0_RS_FF_PP_BODY_1_if_dout                                    (input_s_b_stream_ff_0_RS_FF_PP_BODY_1_if_dout),
    .input_stream_ff_0_RS_FF_PP_HEAD_if_dout                                          (input_stream_ff_0_RS_FF_PP_HEAD_if_dout),
    .interrupt                                                                        (interrupt),
    .m_axi_input_mmap_ARADDR                                                          (m_axi_input_mmap_ARADDR),
    .m_axi_input_mmap_ARBURST                                                         (m_axi_input_mmap_ARBURST),
    .m_axi_input_mmap_ARCACHE                                                         (m_axi_input_mmap_ARCACHE),
    .m_axi_input_mmap_ARID                                                            (m_axi_input_mmap_ARID),
    .m_axi_input_mmap_ARLEN                                                           (m_axi_input_mmap_ARLEN),
    .m_axi_input_mmap_ARLOCK                                                          (m_axi_input_mmap_ARLOCK),
    .m_axi_input_mmap_ARPROT                                                          (m_axi_input_mmap_ARPROT),
    .m_axi_input_mmap_ARQOS                                                           (m_axi_input_mmap_ARQOS),
    .m_axi_input_mmap_ARREADY                                                         (m_axi_input_mmap_ARREADY),
    .m_axi_input_mmap_ARSIZE                                                          (m_axi_input_mmap_ARSIZE),
    .m_axi_input_mmap_ARVALID                                                         (m_axi_input_mmap_ARVALID),
    .m_axi_input_mmap_AWADDR                                                          (m_axi_input_mmap_AWADDR),
    .m_axi_input_mmap_AWBURST                                                         (m_axi_input_mmap_AWBURST),
    .m_axi_input_mmap_AWCACHE                                                         (m_axi_input_mmap_AWCACHE),
    .m_axi_input_mmap_AWID                                                            (m_axi_input_mmap_AWID),
    .m_axi_input_mmap_AWLEN                                                           (m_axi_input_mmap_AWLEN),
    .m_axi_input_mmap_AWLOCK                                                          (m_axi_input_mmap_AWLOCK),
    .m_axi_input_mmap_AWPROT                                                          (m_axi_input_mmap_AWPROT),
    .m_axi_input_mmap_AWQOS                                                           (m_axi_input_mmap_AWQOS),
    .m_axi_input_mmap_AWREADY                                                         (m_axi_input_mmap_AWREADY),
    .m_axi_input_mmap_AWSIZE                                                          (m_axi_input_mmap_AWSIZE),
    .m_axi_input_mmap_AWVALID                                                         (m_axi_input_mmap_AWVALID),
    .m_axi_input_mmap_BID                                                             (m_axi_input_mmap_BID),
    .m_axi_input_mmap_BREADY                                                          (m_axi_input_mmap_BREADY),
    .m_axi_input_mmap_BRESP                                                           (m_axi_input_mmap_BRESP),
    .m_axi_input_mmap_BVALID                                                          (m_axi_input_mmap_BVALID),
    .m_axi_input_mmap_RDATA                                                           (m_axi_input_mmap_RDATA),
    .m_axi_input_mmap_RID                                                             (m_axi_input_mmap_RID),
    .m_axi_input_mmap_RLAST                                                           (m_axi_input_mmap_RLAST),
    .m_axi_input_mmap_RREADY                                                          (m_axi_input_mmap_RREADY),
    .m_axi_input_mmap_RRESP                                                           (m_axi_input_mmap_RRESP),
    .m_axi_input_mmap_RVALID                                                          (m_axi_input_mmap_RVALID),
    .m_axi_input_mmap_WDATA                                                           (m_axi_input_mmap_WDATA),
    .m_axi_input_mmap_WLAST                                                           (m_axi_input_mmap_WLAST),
    .m_axi_input_mmap_WREADY                                                          (m_axi_input_mmap_WREADY),
    .m_axi_input_mmap_WSTRB                                                           (m_axi_input_mmap_WSTRB),
    .m_axi_input_mmap_WVALID                                                          (m_axi_input_mmap_WVALID),
    .m_axi_output_mmap_ARADDR                                                         (m_axi_output_mmap_ARADDR),
    .m_axi_output_mmap_ARBURST                                                        (m_axi_output_mmap_ARBURST),
    .m_axi_output_mmap_ARCACHE                                                        (m_axi_output_mmap_ARCACHE),
    .m_axi_output_mmap_ARID                                                           (m_axi_output_mmap_ARID),
    .m_axi_output_mmap_ARLEN                                                          (m_axi_output_mmap_ARLEN),
    .m_axi_output_mmap_ARLOCK                                                         (m_axi_output_mmap_ARLOCK),
    .m_axi_output_mmap_ARPROT                                                         (m_axi_output_mmap_ARPROT),
    .m_axi_output_mmap_ARQOS                                                          (m_axi_output_mmap_ARQOS),
    .m_axi_output_mmap_ARREADY                                                        (m_axi_output_mmap_ARREADY),
    .m_axi_output_mmap_ARSIZE                                                         (m_axi_output_mmap_ARSIZE),
    .m_axi_output_mmap_ARVALID                                                        (m_axi_output_mmap_ARVALID),
    .m_axi_output_mmap_AWADDR                                                         (m_axi_output_mmap_AWADDR),
    .m_axi_output_mmap_AWBURST                                                        (m_axi_output_mmap_AWBURST),
    .m_axi_output_mmap_AWCACHE                                                        (m_axi_output_mmap_AWCACHE),
    .m_axi_output_mmap_AWID                                                           (m_axi_output_mmap_AWID),
    .m_axi_output_mmap_AWLEN                                                          (m_axi_output_mmap_AWLEN),
    .m_axi_output_mmap_AWLOCK                                                         (m_axi_output_mmap_AWLOCK),
    .m_axi_output_mmap_AWPROT                                                         (m_axi_output_mmap_AWPROT),
    .m_axi_output_mmap_AWQOS                                                          (m_axi_output_mmap_AWQOS),
    .m_axi_output_mmap_AWREADY                                                        (m_axi_output_mmap_AWREADY),
    .m_axi_output_mmap_AWSIZE                                                         (m_axi_output_mmap_AWSIZE),
    .m_axi_output_mmap_AWVALID                                                        (m_axi_output_mmap_AWVALID),
    .m_axi_output_mmap_BID                                                            (m_axi_output_mmap_BID),
    .m_axi_output_mmap_BREADY                                                         (m_axi_output_mmap_BREADY),
    .m_axi_output_mmap_BRESP                                                          (m_axi_output_mmap_BRESP),
    .m_axi_output_mmap_BVALID                                                         (m_axi_output_mmap_BVALID),
    .m_axi_output_mmap_RDATA                                                          (m_axi_output_mmap_RDATA),
    .m_axi_output_mmap_RID                                                            (m_axi_output_mmap_RID),
    .m_axi_output_mmap_RLAST                                                          (m_axi_output_mmap_RLAST),
    .m_axi_output_mmap_RREADY                                                         (m_axi_output_mmap_RREADY),
    .m_axi_output_mmap_RRESP                                                          (m_axi_output_mmap_RRESP),
    .m_axi_output_mmap_RVALID                                                         (m_axi_output_mmap_RVALID),
    .m_axi_output_mmap_WDATA                                                          (m_axi_output_mmap_WDATA),
    .m_axi_output_mmap_WLAST                                                          (m_axi_output_mmap_WLAST),
    .m_axi_output_mmap_WREADY                                                         (m_axi_output_mmap_WREADY),
    .m_axi_output_mmap_WSTRB                                                          (m_axi_output_mmap_WSTRB),
    .m_axi_output_mmap_WVALID                                                         (m_axi_output_mmap_WVALID),
    .m_axi_quant_weight_mmap_ARADDR                                                   (m_axi_quant_weight_mmap_ARADDR),
    .m_axi_quant_weight_mmap_ARBURST                                                  (m_axi_quant_weight_mmap_ARBURST),
    .m_axi_quant_weight_mmap_ARCACHE                                                  (m_axi_quant_weight_mmap_ARCACHE),
    .m_axi_quant_weight_mmap_ARID                                                     (m_axi_quant_weight_mmap_ARID),
    .m_axi_quant_weight_mmap_ARLEN                                                    (m_axi_quant_weight_mmap_ARLEN),
    .m_axi_quant_weight_mmap_ARLOCK                                                   (m_axi_quant_weight_mmap_ARLOCK),
    .m_axi_quant_weight_mmap_ARPROT                                                   (m_axi_quant_weight_mmap_ARPROT),
    .m_axi_quant_weight_mmap_ARQOS                                                    (m_axi_quant_weight_mmap_ARQOS),
    .m_axi_quant_weight_mmap_ARREADY                                                  (m_axi_quant_weight_mmap_ARREADY),
    .m_axi_quant_weight_mmap_ARSIZE                                                   (m_axi_quant_weight_mmap_ARSIZE),
    .m_axi_quant_weight_mmap_ARVALID                                                  (m_axi_quant_weight_mmap_ARVALID),
    .m_axi_quant_weight_mmap_AWADDR                                                   (m_axi_quant_weight_mmap_AWADDR),
    .m_axi_quant_weight_mmap_AWBURST                                                  (m_axi_quant_weight_mmap_AWBURST),
    .m_axi_quant_weight_mmap_AWCACHE                                                  (m_axi_quant_weight_mmap_AWCACHE),
    .m_axi_quant_weight_mmap_AWID                                                     (m_axi_quant_weight_mmap_AWID),
    .m_axi_quant_weight_mmap_AWLEN                                                    (m_axi_quant_weight_mmap_AWLEN),
    .m_axi_quant_weight_mmap_AWLOCK                                                   (m_axi_quant_weight_mmap_AWLOCK),
    .m_axi_quant_weight_mmap_AWPROT                                                   (m_axi_quant_weight_mmap_AWPROT),
    .m_axi_quant_weight_mmap_AWQOS                                                    (m_axi_quant_weight_mmap_AWQOS),
    .m_axi_quant_weight_mmap_AWREADY                                                  (m_axi_quant_weight_mmap_AWREADY),
    .m_axi_quant_weight_mmap_AWSIZE                                                   (m_axi_quant_weight_mmap_AWSIZE),
    .m_axi_quant_weight_mmap_AWVALID                                                  (m_axi_quant_weight_mmap_AWVALID),
    .m_axi_quant_weight_mmap_BID                                                      (m_axi_quant_weight_mmap_BID),
    .m_axi_quant_weight_mmap_BREADY                                                   (m_axi_quant_weight_mmap_BREADY),
    .m_axi_quant_weight_mmap_BRESP                                                    (m_axi_quant_weight_mmap_BRESP),
    .m_axi_quant_weight_mmap_BVALID                                                   (m_axi_quant_weight_mmap_BVALID),
    .m_axi_quant_weight_mmap_RDATA                                                    (m_axi_quant_weight_mmap_RDATA),
    .m_axi_quant_weight_mmap_RID                                                      (m_axi_quant_weight_mmap_RID),
    .m_axi_quant_weight_mmap_RLAST                                                    (m_axi_quant_weight_mmap_RLAST),
    .m_axi_quant_weight_mmap_RREADY                                                   (m_axi_quant_weight_mmap_RREADY),
    .m_axi_quant_weight_mmap_RRESP                                                    (m_axi_quant_weight_mmap_RRESP),
    .m_axi_quant_weight_mmap_RVALID                                                   (m_axi_quant_weight_mmap_RVALID),
    .m_axi_quant_weight_mmap_WDATA                                                    (m_axi_quant_weight_mmap_WDATA),
    .m_axi_quant_weight_mmap_WLAST                                                    (m_axi_quant_weight_mmap_WLAST),
    .m_axi_quant_weight_mmap_WREADY                                                   (m_axi_quant_weight_mmap_WREADY),
    .m_axi_quant_weight_mmap_WSTRB                                                    (m_axi_quant_weight_mmap_WSTRB),
    .m_axi_quant_weight_mmap_WVALID                                                   (m_axi_quant_weight_mmap_WVALID),
    .m_axi_weight_s_sum_mmap_ARADDR                                                   (m_axi_weight_s_sum_mmap_ARADDR),
    .m_axi_weight_s_sum_mmap_ARBURST                                                  (m_axi_weight_s_sum_mmap_ARBURST),
    .m_axi_weight_s_sum_mmap_ARCACHE                                                  (m_axi_weight_s_sum_mmap_ARCACHE),
    .m_axi_weight_s_sum_mmap_ARID                                                     (m_axi_weight_s_sum_mmap_ARID),
    .m_axi_weight_s_sum_mmap_ARLEN                                                    (m_axi_weight_s_sum_mmap_ARLEN),
    .m_axi_weight_s_sum_mmap_ARLOCK                                                   (m_axi_weight_s_sum_mmap_ARLOCK),
    .m_axi_weight_s_sum_mmap_ARPROT                                                   (m_axi_weight_s_sum_mmap_ARPROT),
    .m_axi_weight_s_sum_mmap_ARQOS                                                    (m_axi_weight_s_sum_mmap_ARQOS),
    .m_axi_weight_s_sum_mmap_ARREADY                                                  (m_axi_weight_s_sum_mmap_ARREADY),
    .m_axi_weight_s_sum_mmap_ARSIZE                                                   (m_axi_weight_s_sum_mmap_ARSIZE),
    .m_axi_weight_s_sum_mmap_ARVALID                                                  (m_axi_weight_s_sum_mmap_ARVALID),
    .m_axi_weight_s_sum_mmap_AWADDR                                                   (m_axi_weight_s_sum_mmap_AWADDR),
    .m_axi_weight_s_sum_mmap_AWBURST                                                  (m_axi_weight_s_sum_mmap_AWBURST),
    .m_axi_weight_s_sum_mmap_AWCACHE                                                  (m_axi_weight_s_sum_mmap_AWCACHE),
    .m_axi_weight_s_sum_mmap_AWID                                                     (m_axi_weight_s_sum_mmap_AWID),
    .m_axi_weight_s_sum_mmap_AWLEN                                                    (m_axi_weight_s_sum_mmap_AWLEN),
    .m_axi_weight_s_sum_mmap_AWLOCK                                                   (m_axi_weight_s_sum_mmap_AWLOCK),
    .m_axi_weight_s_sum_mmap_AWPROT                                                   (m_axi_weight_s_sum_mmap_AWPROT),
    .m_axi_weight_s_sum_mmap_AWQOS                                                    (m_axi_weight_s_sum_mmap_AWQOS),
    .m_axi_weight_s_sum_mmap_AWREADY                                                  (m_axi_weight_s_sum_mmap_AWREADY),
    .m_axi_weight_s_sum_mmap_AWSIZE                                                   (m_axi_weight_s_sum_mmap_AWSIZE),
    .m_axi_weight_s_sum_mmap_AWVALID                                                  (m_axi_weight_s_sum_mmap_AWVALID),
    .m_axi_weight_s_sum_mmap_BID                                                      (m_axi_weight_s_sum_mmap_BID),
    .m_axi_weight_s_sum_mmap_BREADY                                                   (m_axi_weight_s_sum_mmap_BREADY),
    .m_axi_weight_s_sum_mmap_BRESP                                                    (m_axi_weight_s_sum_mmap_BRESP),
    .m_axi_weight_s_sum_mmap_BVALID                                                   (m_axi_weight_s_sum_mmap_BVALID),
    .m_axi_weight_s_sum_mmap_RDATA                                                    (m_axi_weight_s_sum_mmap_RDATA),
    .m_axi_weight_s_sum_mmap_RID                                                      (m_axi_weight_s_sum_mmap_RID),
    .m_axi_weight_s_sum_mmap_RLAST                                                    (m_axi_weight_s_sum_mmap_RLAST),
    .m_axi_weight_s_sum_mmap_RREADY                                                   (m_axi_weight_s_sum_mmap_RREADY),
    .m_axi_weight_s_sum_mmap_RRESP                                                    (m_axi_weight_s_sum_mmap_RRESP),
    .m_axi_weight_s_sum_mmap_RVALID                                                   (m_axi_weight_s_sum_mmap_RVALID),
    .m_axi_weight_s_sum_mmap_WDATA                                                    (m_axi_weight_s_sum_mmap_WDATA),
    .m_axi_weight_s_sum_mmap_WLAST                                                    (m_axi_weight_s_sum_mmap_WLAST),
    .m_axi_weight_s_sum_mmap_WREADY                                                   (m_axi_weight_s_sum_mmap_WREADY),
    .m_axi_weight_s_sum_mmap_WSTRB                                                    (m_axi_weight_s_sum_mmap_WSTRB),
    .m_axi_weight_s_sum_mmap_WVALID                                                   (m_axi_weight_s_sum_mmap_WVALID),
    .output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout                             (output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout),
    .output_stream_ff_0_RS_FF_PP_HEAD_if_dout                                         (output_stream_ff_0_RS_FF_PP_HEAD_if_dout),
    .quant_input_stream_ff_0_RS_FF_PP_HEAD_if_dout                                    (quant_input_stream_ff_0_RS_FF_PP_HEAD_if_dout),
    .quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_HEAD_if_dout                  (quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .quant_output_stream_ff_0_RS_FF_PP_HEAD_if_dout                                   (quant_output_stream_ff_0_RS_FF_PP_HEAD_if_dout),
    .quant_weight_stream_ff_0_RS_FF_PP_HEAD_if_dout                                   (quant_weight_stream_ff_0_RS_FF_PP_HEAD_if_dout),
    .s_axi_control_ARADDR                                                             (s_axi_control_ARADDR),
    .s_axi_control_ARREADY                                                            (s_axi_control_ARREADY),
    .s_axi_control_ARVALID                                                            (s_axi_control_ARVALID),
    .s_axi_control_AWADDR                                                             (s_axi_control_AWADDR),
    .s_axi_control_AWREADY                                                            (s_axi_control_AWREADY),
    .s_axi_control_AWVALID                                                            (s_axi_control_AWVALID),
    .s_axi_control_BREADY                                                             (s_axi_control_BREADY),
    .s_axi_control_BRESP                                                              (s_axi_control_BRESP),
    .s_axi_control_BVALID                                                             (s_axi_control_BVALID),
    .s_axi_control_RDATA                                                              (s_axi_control_RDATA),
    .s_axi_control_RREADY                                                             (s_axi_control_RREADY),
    .s_axi_control_RRESP                                                              (s_axi_control_RRESP),
    .s_axi_control_RVALID                                                             (s_axi_control_RVALID),
    .s_axi_control_WDATA                                                              (s_axi_control_WDATA),
    .s_axi_control_WREADY                                                             (s_axi_control_WREADY),
    .s_axi_control_WSTRB                                                              (s_axi_control_WSTRB),
    .s_axi_control_WVALID                                                             (s_axi_control_WVALID),
    .weight_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout                                    (weight_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .weight_s_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout                                  (weight_s_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .weight_s_sum_stream_ff_0_RS_FF_PP_HEAD_if_dout                                   (weight_s_sum_stream_ff_0_RS_FF_PP_HEAD_if_dout)
);

(* keep_hierarchy="true" *)
SLOT_X0Y1_TO_SLOT_X0Y1 SLOT_X0Y1_TO_SLOT_X0Y1_0 (
    .Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_HEAD_if_dout                                (Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_HEAD_if_dout            (__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .__tapa_fsm_unit___ff_0_RS_FF_PP_HEAD_if_dout                                     (__tapa_fsm_unit___ff_0_RS_FF_PP_HEAD_if_dout),
    ._tWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_1_if_doutb49 (_tWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_1_if_doutb49),
    .ap_clk                                                                           (ap_clk),
    .control_s_axi_U_ff_0_RS_FF_PP_HEAD_if_dout                                       (control_s_axi_U_ff_0_RS_FF_PP_HEAD_if_dout),
    .dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout                            (dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout                      (input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .input_s_b_stream_ff_0_RS_FF_PP_HEAD_if_dout                                      (input_s_b_stream_ff_0_RS_FF_PP_HEAD_if_dout),
    .input_stream_ff_0_RS_FF_PP_HEAD_if_dout                                          (input_stream_ff_0_RS_FF_PP_HEAD_if_dout),
    .output_drainer_q_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout                               (output_drainer_q_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .output_stream_ff_0_RS_FF_PP_HEAD_if_dout                                         (output_stream_ff_0_RS_FF_PP_HEAD_if_dout),
    .quant_input_stream_ff_0_RS_FF_PP_HEAD_if_dout                                    (quant_input_stream_ff_0_RS_FF_PP_HEAD_if_dout),
    .quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_HEAD_if_dout                  (quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .quant_output_stream_ff_0_RS_FF_PP_HEAD_if_dout                                   (quant_output_stream_ff_0_RS_FF_PP_HEAD_if_dout),
    .quant_weight_stream_ff_0_RS_FF_PP_HEAD_if_dout                                   (quant_weight_stream_ff_0_RS_FF_PP_HEAD_if_dout),
    .weight_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout                                    (weight_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .weight_s_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout                                  (weight_s_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .weight_s_sum_stream_ff_0_RS_FF_PP_HEAD_if_dout                                   (weight_s_sum_stream_ff_0_RS_FF_PP_HEAD_if_dout)
);

(* keep_hierarchy="true" *)
SLOT_X1Y0_TO_SLOT_X1Y0 SLOT_X1Y0_TO_SLOT_X1Y0_0 (
    .Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_0_if_dout                              (Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_0_if_dout),
    .Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_1_if_dout                              (Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_1_if_dout),
    .__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_0_if_dout          (__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_0_if_dout),
    .__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_1_if_dout          (__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_1_if_dout),
    .__tapa_fsm_unit___ff_0_RS_FF_PP_BODY_0_if_dout                                   (__tapa_fsm_unit___ff_0_RS_FF_PP_BODY_0_if_dout),
    .__tapa_fsm_unit___ff_0_RS_FF_PP_BODY_1_if_dout                                   (__tapa_fsm_unit___ff_0_RS_FF_PP_BODY_1_if_dout),
    ._antWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_HEAD_if_dout002 (_antWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_HEAD_if_dout002),
    ._tWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_0_if_dout063 (_tWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_0_if_dout063),
    .ap_clk                                                                           (ap_clk),
    .control_s_axi_U_ff_0_RS_FF_PP_BODY_0_if_dout                                     (control_s_axi_U_ff_0_RS_FF_PP_BODY_0_if_dout),
    .control_s_axi_U_ff_0_RS_FF_PP_BODY_1_if_dout                                     (control_s_axi_U_ff_0_RS_FF_PP_BODY_1_if_dout),
    .dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout                          (dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout),
    .dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout                          (dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout),
    .input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout                    (input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout),
    .input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout                    (input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout),
    .input_s_b_stream_ff_0_RS_FF_PP_BODY_0_if_dout                                    (input_s_b_stream_ff_0_RS_FF_PP_BODY_0_if_dout),
    .input_s_b_stream_ff_0_RS_FF_PP_BODY_1_if_dout                                    (input_s_b_stream_ff_0_RS_FF_PP_BODY_1_if_dout),
    .output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout                             (output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout),
    .output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout                             (output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_1_if_dout)
);

(* keep_hierarchy="true" *)
SLOT_X1Y1_TO_SLOT_X1Y1 SLOT_X1Y1_TO_SLOT_X1Y1_0 (
    .Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_0_if_dout                              (Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_BODY_0_if_dout),
    .Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_HEAD_if_dout                                (Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_0_if_dout          (__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_BODY_0_if_dout),
    .__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_HEAD_if_dout            (__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .__tapa_fsm_unit___ff_0_RS_FF_PP_BODY_0_if_dout                                   (__tapa_fsm_unit___ff_0_RS_FF_PP_BODY_0_if_dout),
    .__tapa_fsm_unit___ff_0_RS_FF_PP_HEAD_if_dout                                     (__tapa_fsm_unit___ff_0_RS_FF_PP_HEAD_if_dout),
    ._tWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_0_if_dout063 (_tWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_0_if_dout063),
    ._tWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_1_if_doutb49 (_tWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_1_if_doutb49),
    .ap_clk                                                                           (ap_clk),
    .control_s_axi_U_ff_0_RS_FF_PP_BODY_0_if_dout                                     (control_s_axi_U_ff_0_RS_FF_PP_BODY_0_if_dout),
    .control_s_axi_U_ff_0_RS_FF_PP_HEAD_if_dout                                       (control_s_axi_U_ff_0_RS_FF_PP_HEAD_if_dout),
    .dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout                          (dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout),
    .dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout                            (dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout                    (input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout),
    .input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout                      (input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout),
    .input_s_b_stream_ff_0_RS_FF_PP_BODY_0_if_dout                                    (input_s_b_stream_ff_0_RS_FF_PP_BODY_0_if_dout),
    .input_s_b_stream_ff_0_RS_FF_PP_HEAD_if_dout                                      (input_s_b_stream_ff_0_RS_FF_PP_HEAD_if_dout),
    .output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout                             (output_drainer_q_fp32_0_ff_0_RS_FF_PP_BODY_0_if_dout),
    .output_drainer_q_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout                               (output_drainer_q_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout)
);

endmodule  // QuantWrapper_Linear_Layer_q_tb