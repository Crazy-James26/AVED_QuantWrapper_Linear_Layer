// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
/**   Generated by RapidStream   **/
module __rs_pt_weight_s_loader_wq_0_2 #(
    parameter ap_ST_fsm_state1                       = 3'd1,
    parameter ap_ST_fsm_state2                       = 3'd2,
    parameter ap_ST_fsm_state3                       = 3'd4,
    parameter C_M_AXI_WEIGHT_S_SUM_MMAP_ID_WIDTH     = 1,
    parameter C_M_AXI_WEIGHT_S_SUM_MMAP_ADDR_WIDTH   = 64,
    parameter C_M_AXI_WEIGHT_S_SUM_MMAP_DATA_WIDTH   = 64,
    parameter C_M_AXI_WEIGHT_S_SUM_MMAP_AWUSER_WIDTH = 1,
    parameter C_M_AXI_WEIGHT_S_SUM_MMAP_ARUSER_WIDTH = 1,
    parameter C_M_AXI_WEIGHT_S_SUM_MMAP_WUSER_WIDTH  = 1,
    parameter C_M_AXI_WEIGHT_S_SUM_MMAP_RUSER_WIDTH  = 1,
    parameter C_M_AXI_WEIGHT_S_SUM_MMAP_BUSER_WIDTH  = 1,
    parameter C_M_AXI_WEIGHT_S_SUM_MMAP_USER_VALUE   = 0,
    parameter C_M_AXI_WEIGHT_S_SUM_MMAP_PROT_VALUE   = 0,
    parameter C_M_AXI_WEIGHT_S_SUM_MMAP_CACHE_VALUE  = 3,
    parameter C_M_AXI_DATA_WIDTH                     = 32,
    parameter C_M_AXI_WEIGHT_S_SUM_MMAP_WSTRB_WIDTH  = 32'd8,
    parameter C_M_AXI_WSTRB_WIDTH                    = 32'd4
) (
    output wire [   (C_M_AXI_WEIGHT_S_SUM_MMAP_ID_WIDTH - 1):0] __rs_pt_m_axi_weight_s_sum_mmap_BID,
    input wire                                                  __rs_pt_m_axi_weight_s_sum_mmap_BREADY,
    output wire [                                          1:0] __rs_pt_m_axi_weight_s_sum_mmap_BRESP,
    output wire [(C_M_AXI_WEIGHT_S_SUM_MMAP_BUSER_WIDTH - 1):0] __rs_pt_m_axi_weight_s_sum_mmap_BUSER,
    output wire                                                 __rs_pt_m_axi_weight_s_sum_mmap_BVALID,
    input wire                                                  ap_clk,
    input wire                                                  ap_rst_n,
    input wire  [   (C_M_AXI_WEIGHT_S_SUM_MMAP_ID_WIDTH - 1):0] m_axi_weight_s_sum_mmap_BID,
    output wire                                                 m_axi_weight_s_sum_mmap_BREADY,
    input wire  [                                          1:0] m_axi_weight_s_sum_mmap_BRESP,
    input wire  [(C_M_AXI_WEIGHT_S_SUM_MMAP_BUSER_WIDTH - 1):0] m_axi_weight_s_sum_mmap_BUSER,
    input wire                                                  m_axi_weight_s_sum_mmap_BVALID
);




__rs_pass_through #(
    .WIDTH (( ( C_M_AXI_WEIGHT_S_SUM_MMAP_ID_WIDTH - 1 ) - ( 0 ) + 1 ))
) __rs_pt_weight_s_loader_wq_m_axi_weight_s_sum_mmap_BID_inst /**   Generated by RapidStream   **/ (
    .din  (m_axi_weight_s_sum_mmap_BID),
    .dout (__rs_pt_m_axi_weight_s_sum_mmap_BID)
);


__rs_pass_through #(
    .WIDTH (1)
) __rs_pt_weight_s_loader_wq_m_axi_weight_s_sum_mmap_BREADY_inst /**   Generated by RapidStream   **/ (
    .din  (__rs_pt_m_axi_weight_s_sum_mmap_BREADY),
    .dout (m_axi_weight_s_sum_mmap_BREADY)
);


__rs_pass_through #(
    .WIDTH (2)
) __rs_pt_weight_s_loader_wq_m_axi_weight_s_sum_mmap_BRESP_inst /**   Generated by RapidStream   **/ (
    .din  (m_axi_weight_s_sum_mmap_BRESP),
    .dout (__rs_pt_m_axi_weight_s_sum_mmap_BRESP)
);


__rs_pass_through #(
    .WIDTH (( ( C_M_AXI_WEIGHT_S_SUM_MMAP_BUSER_WIDTH - 1 ) - ( 0 ) + 1 ))
) __rs_pt_weight_s_loader_wq_m_axi_weight_s_sum_mmap_BUSER_inst /**   Generated by RapidStream   **/ (
    .din  (m_axi_weight_s_sum_mmap_BUSER),
    .dout (__rs_pt_m_axi_weight_s_sum_mmap_BUSER)
);


__rs_pass_through #(
    .WIDTH (1)
) __rs_pt_weight_s_loader_wq_m_axi_weight_s_sum_mmap_BVALID_inst /**   Generated by RapidStream   **/ (
    .din  (m_axi_weight_s_sum_mmap_BVALID),
    .dout (__rs_pt_m_axi_weight_s_sum_mmap_BVALID)
);

endmodule  // __rs_pt_weight_s_loader_wq_0_2