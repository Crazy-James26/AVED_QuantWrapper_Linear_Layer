`timescale 1 ns / 1 ps
// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
 
module dequant_layer_q_int_fp32_dequant_layer_qint_fp32_19_true_16_2048_1024_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_stream_s_dout,
        input_stream_s_empty_n,
        input_stream_s_read,
        input_s_b_stream_s_dout,
        input_s_b_stream_s_empty_n,
        input_s_b_stream_s_read,
        weight_s_sum_stream_s_dout,
        weight_s_sum_stream_s_empty_n,
        weight_s_sum_stream_s_read,
        output_stream_s_din,
        output_stream_s_full_n,
        output_stream_s_write,
        seq_len
);
parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [304:0] input_stream_s_dout;
input   input_stream_s_empty_n;
output   input_stream_s_read;
input  [64:0] input_s_b_stream_s_dout;
input   input_s_b_stream_s_empty_n;
output   input_s_b_stream_s_read;
input  [64:0] weight_s_sum_stream_s_dout;
input   weight_s_sum_stream_s_empty_n;
output   weight_s_sum_stream_s_read;
output  [512:0] output_stream_s_din;
input   output_stream_s_full_n;
output   output_stream_s_write;
input  [31:0] seq_len;
reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_stream_s_read;
reg input_s_b_stream_s_read;
reg weight_s_sum_stream_s_read;
reg output_stream_s_write;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] tmp_2_reg_606;
reg   [27:0] tmp_reg_611;
reg   [27:0] tmp_1_reg_616;
wire   [28:0] div_fu_460_p3;
reg   [28:0] div_reg_621;
wire    ap_CS_fsm_state2;
reg   [31:0] s_load_reg_821;
wire    ap_CS_fsm_state6;
reg   [31:0] b_load_reg_826;
reg   [31:0] s_load_1_reg_831;
reg   [31:0] b_load_1_reg_836;
reg   [31:0] s_load_2_reg_841;
wire    ap_CS_fsm_state7;
reg   [31:0] b_load_2_reg_846;
reg   [31:0] s_load_3_reg_851;
reg   [31:0] b_load_3_reg_856;
reg   [31:0] s_load_4_reg_861;
wire    ap_CS_fsm_state8;
reg   [31:0] b_load_4_reg_866;
reg   [31:0] s_load_5_reg_871;
reg   [31:0] b_load_5_reg_876;
reg   [31:0] s_load_6_reg_881;
wire    ap_CS_fsm_state9;
reg   [31:0] b_load_6_reg_886;
reg   [31:0] s_load_7_reg_891;
reg   [31:0] b_load_7_reg_896;
reg   [31:0] s_load_8_reg_901;
wire    ap_CS_fsm_state10;
reg   [31:0] b_load_8_reg_906;
reg   [31:0] s_load_9_reg_911;
reg   [31:0] b_load_9_reg_916;
reg   [31:0] s_load_10_reg_921;
wire    ap_CS_fsm_state11;
reg   [31:0] b_load_10_reg_926;
reg   [31:0] s_load_11_reg_931;
reg   [31:0] b_load_11_reg_936;
reg   [31:0] s_load_12_reg_941;
wire    ap_CS_fsm_state12;
reg   [31:0] b_load_12_reg_946;
reg   [31:0] s_load_13_reg_951;
reg   [31:0] b_load_13_reg_956;
reg   [31:0] s_load_14_reg_961;
wire    ap_CS_fsm_state13;
reg   [31:0] b_load_14_reg_966;
reg   [31:0] s_load_15_reg_971;
reg   [31:0] b_load_15_reg_976;
reg   [3:0] s_address0;
reg    s_ce0;
reg    s_we0;
wire   [31:0] s_q0;
wire   [31:0] s_q1;
reg   [3:0] b_address0;
reg    b_ce0;
reg    b_we0;
wire   [31:0] b_q0;
wire   [31:0] b_q1;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_start;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_done;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_idle;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_ready;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_input_s_b_stream_s_read;
wire   [3:0] grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_s_address0;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_s_ce0;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_s_we0;
wire   [31:0] grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_s_d0;
wire   [3:0] grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_b_address0;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_b_ce0;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_b_we0;
wire   [31:0] grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_b_d0;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_start;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_done;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_idle;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_ready;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_input_stream_s_read;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_weight_s_sum_stream_s_read;
wire   [512:0] grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_output_stream_s_din;
wire    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_output_stream_s_write;
reg    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln876_fu_483_p2;
wire    ap_CS_fsm_state4;
reg    grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_start_reg;
wire    ap_CS_fsm_state14;
reg   [27:0] M_fu_86;
wire   [27:0] add_ln876_fu_473_p2;
reg    s_ce1_local;
wire    ap_CS_fsm_state5;
reg   [3:0] s_address1_local;
reg    s_ce0_local;
reg   [3:0] s_address0_local;
reg    b_ce1_local;
reg   [3:0] b_address1_local;
reg    b_ce0_local;
reg   [3:0] b_address0_local;
wire   [31:0] p_neg_fu_410_p2;
wire   [28:0] p_lshr_cast_fu_448_p1;
wire   [28:0] p_neg_t_fu_451_p2;
wire   [28:0] p_lshr_f_cast_fu_457_p1;
wire   [28:0] zext_ln876_fu_479_p1;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_start_reg = 1'b0;
#0 grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_start_reg = 1'b0;
#0 M_fu_86 = 28'd0;
end
dequant_layer_q_int_fp32_dequant_layer_qint_fp32_19_true_16_2048_1024_s_s_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s_address0),
    .ce0(s_ce0),
    .we0(s_we0),
    .d0(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_s_d0),
    .q0(s_q0),
    .address1(s_address1_local),
    .ce1(s_ce1_local),
    .q1(s_q1)
);
dequant_layer_q_int_fp32_dequant_layer_qint_fp32_19_true_16_2048_1024_s_s_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_address0),
    .ce0(b_ce0),
    .we0(b_we0),
    .d0(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_b_d0),
    .q0(b_q0),
    .address1(b_address1_local),
    .ce1(b_ce1_local),
    .q1(b_q1)
);
dequant_layer_q_int_fp32_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1 grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_start),
    .ap_done(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_done),
    .ap_idle(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_idle),
    .ap_ready(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_ready),
    .input_s_b_stream_s_dout(input_s_b_stream_s_dout),
    .input_s_b_stream_s_empty_n(input_s_b_stream_s_empty_n),
    .input_s_b_stream_s_read(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_input_s_b_stream_s_read),
    .s_address0(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_s_address0),
    .s_ce0(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_s_ce0),
    .s_we0(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_s_we0),
    .s_d0(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_s_d0),
    .b_address0(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_b_address0),
    .b_ce0(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_b_ce0),
    .b_we0(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_b_we0),
    .b_d0(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_b_d0)
);
dequant_layer_q_int_fp32_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_start),
    .ap_done(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_done),
    .ap_idle(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_idle),
    .ap_ready(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_ready),
    .input_stream_s_dout(input_stream_s_dout),
    .input_stream_s_empty_n(input_stream_s_empty_n),
    .input_stream_s_read(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_input_stream_s_read),
    .weight_s_sum_stream_s_dout(weight_s_sum_stream_s_dout),
    .weight_s_sum_stream_s_empty_n(weight_s_sum_stream_s_empty_n),
    .weight_s_sum_stream_s_read(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_weight_s_sum_stream_s_read),
    .output_stream_s_din(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_output_stream_s_din),
    .output_stream_s_full_n(output_stream_s_full_n),
    .output_stream_s_write(grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_output_stream_s_write),
    .s_load(s_load_reg_821),
    .b_load(b_load_reg_826),
    .s_load_1(s_load_1_reg_831),
    .b_load_1(b_load_1_reg_836),
    .s_load_2(s_load_2_reg_841),
    .b_load_2(b_load_2_reg_846),
    .s_load_3(s_load_3_reg_851),
    .b_load_3(b_load_3_reg_856),
    .s_load_4(s_load_4_reg_861),
    .b_load_4(b_load_4_reg_866),
    .s_load_5(s_load_5_reg_871),
    .b_load_5(b_load_5_reg_876),
    .s_load_6(s_load_6_reg_881),
    .b_load_6(b_load_6_reg_886),
    .s_load_7(s_load_7_reg_891),
    .b_load_7(b_load_7_reg_896),
    .s_load_8(s_load_8_reg_901),
    .b_load_8(b_load_8_reg_906),
    .s_load_9(s_load_9_reg_911),
    .b_load_9(b_load_9_reg_916),
    .s_load_10(s_load_10_reg_921),
    .b_load_10(b_load_10_reg_926),
    .s_load_11(s_load_11_reg_931),
    .b_load_11(b_load_11_reg_936),
    .s_load_12(s_load_12_reg_941),
    .b_load_12(b_load_12_reg_946),
    .s_load_13(s_load_13_reg_951),
    .b_load_13(b_load_13_reg_956),
    .s_load_14(s_load_14_reg_961),
    .b_load_14(b_load_14_reg_966),
    .s_load_15(s_load_15_reg_971),
    .b_load_15(b_load_15_reg_976)
);
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln876_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_start_reg <= 1'b1;
        end else if ((grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_ready == 1'b1)) begin
            grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_start_reg <= 1'b1;
        end else if ((grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_ready == 1'b1)) begin
            grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        M_fu_86 <= 28'd0;
    end else if (((icmp_ln876_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        M_fu_86 <= add_ln876_fu_473_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        b_load_10_reg_926 <= b_q1;
        b_load_11_reg_936 <= b_q0;
        s_load_10_reg_921 <= s_q1;
        s_load_11_reg_931 <= s_q0;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        b_load_12_reg_946 <= b_q1;
        b_load_13_reg_956 <= b_q0;
        s_load_12_reg_941 <= s_q1;
        s_load_13_reg_951 <= s_q0;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        b_load_14_reg_966 <= b_q1;
        b_load_15_reg_976 <= b_q0;
        s_load_14_reg_961 <= s_q1;
        s_load_15_reg_971 <= s_q0;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        b_load_1_reg_836 <= b_q0;
        b_load_reg_826 <= b_q1;
        s_load_1_reg_831 <= s_q0;
        s_load_reg_821 <= s_q1;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        b_load_2_reg_846 <= b_q1;
        b_load_3_reg_856 <= b_q0;
        s_load_2_reg_841 <= s_q1;
        s_load_3_reg_851 <= s_q0;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        b_load_4_reg_866 <= b_q1;
        b_load_5_reg_876 <= b_q0;
        s_load_4_reg_861 <= s_q1;
        s_load_5_reg_871 <= s_q0;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        b_load_6_reg_886 <= b_q1;
        b_load_7_reg_896 <= b_q0;
        s_load_6_reg_881 <= s_q1;
        s_load_7_reg_891 <= s_q0;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        b_load_8_reg_906 <= b_q1;
        b_load_9_reg_916 <= b_q0;
        s_load_8_reg_901 <= s_q1;
        s_load_9_reg_911 <= s_q0;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        div_reg_621 <= div_fu_460_p3;
    end
end
always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_1_reg_616 <= {{seq_len[31:4]}};
        tmp_2_reg_606 <= seq_len[32'd31];
        tmp_reg_611 <= {{p_neg_fu_410_p2[31:4]}};
    end
end
assign ap_ST_fsm_state10_blk = 1'b0;
assign ap_ST_fsm_state11_blk = 1'b0;
assign ap_ST_fsm_state12_blk = 1'b0;
assign ap_ST_fsm_state13_blk = 1'b0;
always @ (*) begin
    if ((grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_done == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end
always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end
assign ap_ST_fsm_state2_blk = 1'b0;
assign ap_ST_fsm_state3_blk = 1'b0;
always @ (*) begin
    if ((grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end
assign ap_ST_fsm_state5_blk = 1'b0;
assign ap_ST_fsm_state6_blk = 1'b0;
assign ap_ST_fsm_state7_blk = 1'b0;
assign ap_ST_fsm_state8_blk = 1'b0;
assign ap_ST_fsm_state9_blk = 1'b0;
always @ (*) begin
    if ((((icmp_ln876_fu_483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((icmp_ln876_fu_483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        b_address0 = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_b_address0;
    end else begin
        b_address0 = b_address0_local;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        b_address0_local = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        b_address0_local = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        b_address0_local = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        b_address0_local = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_address0_local = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_address0_local = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_address0_local = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_address0_local = 64'd1;
    end else begin
        b_address0_local = 'bx;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        b_address1_local = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        b_address1_local = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        b_address1_local = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        b_address1_local = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        b_address1_local = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        b_address1_local = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_address1_local = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        b_address1_local = 64'd0;
    end else begin
        b_address1_local = 'bx;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        b_ce0 = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_b_ce0;
    end else begin
        b_ce0 = b_ce0_local;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        b_ce0_local = 1'b1;
    end else begin
        b_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        b_ce1_local = 1'b1;
    end else begin
        b_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        b_we0 = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_b_we0;
    end else begin
        b_we0 = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        input_s_b_stream_s_read = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_input_s_b_stream_s_read;
    end else begin
        input_s_b_stream_s_read = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        input_stream_s_read = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_input_stream_s_read;
    end else begin
        input_stream_s_read = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_stream_s_write = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_output_stream_s_write;
    end else begin
        output_stream_s_write = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        s_address0 = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_s_address0;
    end else begin
        s_address0 = s_address0_local;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s_address0_local = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        s_address0_local = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s_address0_local = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        s_address0_local = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_address0_local = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_address0_local = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_address0_local = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        s_address0_local = 64'd1;
    end else begin
        s_address0_local = 'bx;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        s_address1_local = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        s_address1_local = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s_address1_local = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        s_address1_local = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_address1_local = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_address1_local = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_address1_local = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        s_address1_local = 64'd0;
    end else begin
        s_address1_local = 'bx;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        s_ce0 = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_s_ce0;
    end else begin
        s_ce0 = s_ce0_local;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        s_ce0_local = 1'b1;
    end else begin
        s_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        s_ce1_local = 1'b1;
    end else begin
        s_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        s_we0 = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_s_we0;
    end else begin
        s_we0 = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        weight_s_sum_stream_s_read = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_weight_s_sum_stream_s_read;
    end else begin
        weight_s_sum_stream_s_read = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln876_fu_483_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign add_ln876_fu_473_p2 = (M_fu_86 + 28'd1);
assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];
assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];
assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];
assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];
assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];
assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];
assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];
assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];
assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];
assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];
assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];
assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];
assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];
assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];
assign div_fu_460_p3 = ((tmp_2_reg_606[0:0] == 1'b1) ? p_neg_t_fu_451_p2 : p_lshr_f_cast_fu_457_p1);
assign grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_start = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_VITIS_LOOP_880_1_fu_346_ap_start_reg;
assign grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_start = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_ap_start_reg;
assign icmp_ln876_fu_483_p2 = (($signed(zext_ln876_fu_479_p1) < $signed(div_reg_621)) ? 1'b1 : 1'b0);
assign output_stream_s_din = grp_dequant_layer_qint_fp32_19_true_16_2048_1024_Pipeline_output_dim_loop_fu_354_output_stream_s_din;
assign p_lshr_cast_fu_448_p1 = tmp_reg_611;
assign p_lshr_f_cast_fu_457_p1 = tmp_1_reg_616;
assign p_neg_fu_410_p2 = (32'd0 - seq_len);
assign p_neg_t_fu_451_p2 = (29'd0 - p_lshr_cast_fu_448_p1);
assign zext_ln876_fu_479_p1 = M_fu_86;
endmodule