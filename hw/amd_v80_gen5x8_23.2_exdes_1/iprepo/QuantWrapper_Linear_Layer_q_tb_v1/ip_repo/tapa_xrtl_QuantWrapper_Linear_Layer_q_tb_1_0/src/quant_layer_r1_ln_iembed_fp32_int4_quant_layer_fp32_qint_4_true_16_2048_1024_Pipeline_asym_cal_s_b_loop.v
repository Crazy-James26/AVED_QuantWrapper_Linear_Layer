`timescale 1 ns / 1 ps
// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
 
module quant_layer_r1_ln_iembed_fp32_int4_quant_layer_fp32_qint_4_true_16_2048_1024_Pipeline_asym_cal_s_b_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_s_b_stream_s_din,
        input_s_b_stream_s_full_n,
        input_s_b_stream_s_write,
        p_reload546,
        p_reload544,
        p_reload542,
        p_reload540,
        p_reload538,
        p_reload536,
        p_reload534,
        p_reload532,
        p_reload530,
        p_reload528,
        p_reload526,
        p_reload524,
        p_reload522,
        p_reload520,
        p_reload518,
        p_reload516,
        p_reload545,
        p_reload543,
        p_reload541,
        p_reload539,
        p_reload537,
        p_reload535,
        p_reload533,
        p_reload531,
        p_reload529,
        p_reload527,
        p_reload525,
        p_reload523,
        p_reload521,
        p_reload519,
        p_reload517,
        p_reload,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        b_address0,
        b_ce0,
        b_we0,
        b_d0,
        grp_fu_1831_p_din0,
        grp_fu_1831_p_din1,
        grp_fu_1831_p_opcode,
        grp_fu_1831_p_dout0,
        grp_fu_1831_p_ce,
        grp_fu_1835_p_din0,
        grp_fu_1835_p_din1,
        grp_fu_1835_p_dout0,
        grp_fu_1835_p_ce
);
parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [64:0] input_s_b_stream_s_din;
input   input_s_b_stream_s_full_n;
output   input_s_b_stream_s_write;
input  [31:0] p_reload546;
input  [31:0] p_reload544;
input  [31:0] p_reload542;
input  [31:0] p_reload540;
input  [31:0] p_reload538;
input  [31:0] p_reload536;
input  [31:0] p_reload534;
input  [31:0] p_reload532;
input  [31:0] p_reload530;
input  [31:0] p_reload528;
input  [31:0] p_reload526;
input  [31:0] p_reload524;
input  [31:0] p_reload522;
input  [31:0] p_reload520;
input  [31:0] p_reload518;
input  [31:0] p_reload516;
input  [31:0] p_reload545;
input  [31:0] p_reload543;
input  [31:0] p_reload541;
input  [31:0] p_reload539;
input  [31:0] p_reload537;
input  [31:0] p_reload535;
input  [31:0] p_reload533;
input  [31:0] p_reload531;
input  [31:0] p_reload529;
input  [31:0] p_reload527;
input  [31:0] p_reload525;
input  [31:0] p_reload523;
input  [31:0] p_reload521;
input  [31:0] p_reload519;
input  [31:0] p_reload517;
input  [31:0] p_reload;
output  [3:0] s_address0;
output   s_ce0;
output   s_we0;
output  [31:0] s_d0;
output  [3:0] b_address0;
output   b_ce0;
output   b_we0;
output  [31:0] b_d0;
output  [31:0] grp_fu_1831_p_din0;
output  [31:0] grp_fu_1831_p_din1;
output  [1:0] grp_fu_1831_p_opcode;
input  [31:0] grp_fu_1831_p_dout0;
output   grp_fu_1831_p_ce;
output  [31:0] grp_fu_1835_p_din0;
output  [31:0] grp_fu_1835_p_din1;
input  [31:0] grp_fu_1835_p_dout0;
output   grp_fu_1835_p_ce;
reg ap_idle;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_idle_pp0;
reg    ap_block_state35_pp0_stage0_iter34;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln812_fu_489_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    input_s_b_stream_s_blk_n;
wire    ap_block_pp0_stage0;
reg   [4:0] m_1_reg_776;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] tmp_s_fu_499_p35;
reg   [31:0] tmp_s_reg_785;
wire   [31:0] tmp_1_fu_571_p35;
reg   [31:0] tmp_1_reg_791;
reg   [31:0] tmp_1_reg_791_pp0_iter1_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter2_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter3_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter4_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter5_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter6_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter7_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter8_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter9_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter10_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter11_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter12_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter13_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter14_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter15_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter16_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter17_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter18_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter19_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter20_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter21_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter22_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter23_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter24_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter25_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter26_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter27_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter28_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter29_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter30_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter31_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter32_reg;
reg   [31:0] tmp_1_reg_791_pp0_iter33_reg;
wire   [63:0] zext_ln812_fu_655_p1;
reg   [63:0] zext_ln812_reg_800;
reg   [63:0] zext_ln812_reg_800_pp0_iter2_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter3_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter4_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter5_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter6_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter7_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter8_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter9_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter10_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter11_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter12_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter13_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter14_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter15_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter16_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter17_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter18_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter19_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter20_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter21_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter22_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter23_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter24_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter25_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter26_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter27_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter28_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter29_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter30_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter31_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter32_reg;
reg   [63:0] zext_ln812_reg_800_pp0_iter33_reg;
reg   [31:0] div1_reg_811;
reg   [31:0] div1_reg_811_pp0_iter33_reg;
wire   [0:0] icmp_ln815_fu_705_p2;
reg   [0:0] icmp_ln815_reg_819;
wire   [0:0] icmp_ln815_1_fu_711_p2;
reg   [0:0] icmp_ln815_1_reg_824;
wire   [0:0] grp_fu_396_p2;
reg   [0:0] tmp_95_reg_829;
reg   [4:0] m_fu_158;
wire   [4:0] add_ln812_fu_483_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_m_1;
wire   [64:0] zext_ln150_fu_757_p1;
reg    ap_block_pp0_stage0_01001;
reg    input_s_b_stream_s_write_local;
reg    b_we0_local;
reg    b_ce0_local;
reg    s_we0_local;
wire   [31:0] select_ln815_fu_726_p3;
reg    s_ce0_local;
reg   [31:0] grp_fu_396_p0;
wire   [31:0] grp_fu_396_p1;
wire   [31:0] tmp_s_fu_499_p33;
wire   [3:0] trunc_ln812_fu_495_p1;
wire   [31:0] tmp_1_fu_571_p33;
wire   [31:0] bitcast_ln815_fu_688_p1;
wire   [7:0] tmp_94_fu_691_p4;
wire   [22:0] trunc_ln815_fu_701_p1;
wire   [0:0] or_ln815_fu_717_p2;
wire   [0:0] and_ln815_fu_721_p2;
wire   [31:0] bitcast_ln150_1_fu_746_p1;
wire   [31:0] bitcast_ln150_fu_742_p1;
wire   [63:0] tmp_2_fu_749_p3;
reg    grp_fu_387_ce;
reg    grp_fu_391_ce;
wire   [4:0] grp_fu_396_opcode;
reg    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [3:0] tmp_s_fu_499_p1;
wire   [3:0] tmp_s_fu_499_p3;
wire   [3:0] tmp_s_fu_499_p5;
wire   [3:0] tmp_s_fu_499_p7;
wire   [3:0] tmp_s_fu_499_p9;
wire   [3:0] tmp_s_fu_499_p11;
wire   [3:0] tmp_s_fu_499_p13;
wire   [3:0] tmp_s_fu_499_p15;
wire  signed [3:0] tmp_s_fu_499_p17;
wire  signed [3:0] tmp_s_fu_499_p19;
wire  signed [3:0] tmp_s_fu_499_p21;
wire  signed [3:0] tmp_s_fu_499_p23;
wire  signed [3:0] tmp_s_fu_499_p25;
wire  signed [3:0] tmp_s_fu_499_p27;
wire  signed [3:0] tmp_s_fu_499_p29;
wire  signed [3:0] tmp_s_fu_499_p31;
wire   [3:0] tmp_1_fu_571_p1;
wire   [3:0] tmp_1_fu_571_p3;
wire   [3:0] tmp_1_fu_571_p5;
wire   [3:0] tmp_1_fu_571_p7;
wire   [3:0] tmp_1_fu_571_p9;
wire   [3:0] tmp_1_fu_571_p11;
wire   [3:0] tmp_1_fu_571_p13;
wire   [3:0] tmp_1_fu_571_p15;
wire  signed [3:0] tmp_1_fu_571_p17;
wire  signed [3:0] tmp_1_fu_571_p19;
wire  signed [3:0] tmp_1_fu_571_p21;
wire  signed [3:0] tmp_1_fu_571_p23;
wire  signed [3:0] tmp_1_fu_571_p25;
wire  signed [3:0] tmp_1_fu_571_p27;
wire  signed [3:0] tmp_1_fu_571_p29;
wire  signed [3:0] tmp_1_fu_571_p31;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 m_fu_158 = 5'd0;
#0 ap_done_reg = 1'b0;
end
quant_layer_r1_ln_iembed_fp32_int4_fcmp_32ns_32ns_1_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_1_no_dsp_1_U85(
    .din0(grp_fu_396_p0),
    .din1(grp_fu_396_p1),
    .opcode(grp_fu_396_opcode),
    .dout(grp_fu_396_p2)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_33_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .CASE13( 4'hD ),
    .din13_WIDTH( 32 ),
    .CASE14( 4'hE ),
    .din14_WIDTH( 32 ),
    .CASE15( 4'hF ),
    .din15_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_33_4_32_1_1_U86(
    .din0(p_reload546),
    .din1(p_reload544),
    .din2(p_reload542),
    .din3(p_reload540),
    .din4(p_reload538),
    .din5(p_reload536),
    .din6(p_reload534),
    .din7(p_reload532),
    .din8(p_reload530),
    .din9(p_reload528),
    .din10(p_reload526),
    .din11(p_reload524),
    .din12(p_reload522),
    .din13(p_reload520),
    .din14(p_reload518),
    .din15(p_reload516),
    .def(tmp_s_fu_499_p33),
    .sel(trunc_ln812_fu_495_p1),
    .dout(tmp_s_fu_499_p35)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_33_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .CASE13( 4'hD ),
    .din13_WIDTH( 32 ),
    .CASE14( 4'hE ),
    .din14_WIDTH( 32 ),
    .CASE15( 4'hF ),
    .din15_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_33_4_32_1_1_U87(
    .din0(p_reload545),
    .din1(p_reload543),
    .din2(p_reload541),
    .din3(p_reload539),
    .din4(p_reload537),
    .din5(p_reload535),
    .din6(p_reload533),
    .din7(p_reload531),
    .din8(p_reload529),
    .din9(p_reload527),
    .din10(p_reload525),
    .din11(p_reload523),
    .din12(p_reload521),
    .din13(p_reload519),
    .din14(p_reload517),
    .din15(p_reload),
    .def(tmp_1_fu_571_p33),
    .sel(trunc_ln812_fu_495_p1),
    .dout(tmp_1_fu_571_p35)
);
quant_layer_r1_ln_iembed_fp32_int4_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter33_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln812_fu_489_p2 == 1'd0))) begin
            m_fu_158 <= add_ln812_fu_483_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            m_fu_158 <= 5'd0;
        end
    end
end
always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        div1_reg_811 <= grp_fu_1835_p_dout0;
        div1_reg_811_pp0_iter33_reg <= div1_reg_811;
        icmp_ln815_1_reg_824 <= icmp_ln815_1_fu_711_p2;
        icmp_ln815_reg_819 <= icmp_ln815_fu_705_p2;
        tmp_1_reg_791_pp0_iter10_reg <= tmp_1_reg_791_pp0_iter9_reg;
        tmp_1_reg_791_pp0_iter11_reg <= tmp_1_reg_791_pp0_iter10_reg;
        tmp_1_reg_791_pp0_iter12_reg <= tmp_1_reg_791_pp0_iter11_reg;
        tmp_1_reg_791_pp0_iter13_reg <= tmp_1_reg_791_pp0_iter12_reg;
        tmp_1_reg_791_pp0_iter14_reg <= tmp_1_reg_791_pp0_iter13_reg;
        tmp_1_reg_791_pp0_iter15_reg <= tmp_1_reg_791_pp0_iter14_reg;
        tmp_1_reg_791_pp0_iter16_reg <= tmp_1_reg_791_pp0_iter15_reg;
        tmp_1_reg_791_pp0_iter17_reg <= tmp_1_reg_791_pp0_iter16_reg;
        tmp_1_reg_791_pp0_iter18_reg <= tmp_1_reg_791_pp0_iter17_reg;
        tmp_1_reg_791_pp0_iter19_reg <= tmp_1_reg_791_pp0_iter18_reg;
        tmp_1_reg_791_pp0_iter20_reg <= tmp_1_reg_791_pp0_iter19_reg;
        tmp_1_reg_791_pp0_iter21_reg <= tmp_1_reg_791_pp0_iter20_reg;
        tmp_1_reg_791_pp0_iter22_reg <= tmp_1_reg_791_pp0_iter21_reg;
        tmp_1_reg_791_pp0_iter23_reg <= tmp_1_reg_791_pp0_iter22_reg;
        tmp_1_reg_791_pp0_iter24_reg <= tmp_1_reg_791_pp0_iter23_reg;
        tmp_1_reg_791_pp0_iter25_reg <= tmp_1_reg_791_pp0_iter24_reg;
        tmp_1_reg_791_pp0_iter26_reg <= tmp_1_reg_791_pp0_iter25_reg;
        tmp_1_reg_791_pp0_iter27_reg <= tmp_1_reg_791_pp0_iter26_reg;
        tmp_1_reg_791_pp0_iter28_reg <= tmp_1_reg_791_pp0_iter27_reg;
        tmp_1_reg_791_pp0_iter29_reg <= tmp_1_reg_791_pp0_iter28_reg;
        tmp_1_reg_791_pp0_iter2_reg <= tmp_1_reg_791_pp0_iter1_reg;
        tmp_1_reg_791_pp0_iter30_reg <= tmp_1_reg_791_pp0_iter29_reg;
        tmp_1_reg_791_pp0_iter31_reg <= tmp_1_reg_791_pp0_iter30_reg;
        tmp_1_reg_791_pp0_iter32_reg <= tmp_1_reg_791_pp0_iter31_reg;
        tmp_1_reg_791_pp0_iter33_reg <= tmp_1_reg_791_pp0_iter32_reg;
        tmp_1_reg_791_pp0_iter3_reg <= tmp_1_reg_791_pp0_iter2_reg;
        tmp_1_reg_791_pp0_iter4_reg <= tmp_1_reg_791_pp0_iter3_reg;
        tmp_1_reg_791_pp0_iter5_reg <= tmp_1_reg_791_pp0_iter4_reg;
        tmp_1_reg_791_pp0_iter6_reg <= tmp_1_reg_791_pp0_iter5_reg;
        tmp_1_reg_791_pp0_iter7_reg <= tmp_1_reg_791_pp0_iter6_reg;
        tmp_1_reg_791_pp0_iter8_reg <= tmp_1_reg_791_pp0_iter7_reg;
        tmp_1_reg_791_pp0_iter9_reg <= tmp_1_reg_791_pp0_iter8_reg;
        tmp_95_reg_829 <= grp_fu_396_p2;
        zext_ln812_reg_800_pp0_iter10_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter9_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter11_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter10_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter12_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter11_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter13_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter12_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter14_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter13_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter15_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter14_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter16_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter15_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter17_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter16_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter18_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter17_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter19_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter18_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter20_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter19_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter21_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter20_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter22_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter21_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter23_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter22_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter24_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter23_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter25_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter24_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter26_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter25_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter27_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter26_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter28_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter27_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter29_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter28_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter2_reg[4 : 0] <= zext_ln812_reg_800[4 : 0];
        zext_ln812_reg_800_pp0_iter30_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter29_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter31_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter30_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter32_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter31_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter33_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter32_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter3_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter2_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter4_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter3_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter5_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter4_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter6_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter5_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter7_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter6_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter8_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter7_reg[4 : 0];
        zext_ln812_reg_800_pp0_iter9_reg[4 : 0] <= zext_ln812_reg_800_pp0_iter8_reg[4 : 0];
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        m_1_reg_776 <= ap_sig_allocacmp_m_1;
        tmp_1_reg_791 <= tmp_1_fu_571_p35;
        tmp_1_reg_791_pp0_iter1_reg <= tmp_1_reg_791;
        tmp_s_reg_785 <= tmp_s_fu_499_p35;
        zext_ln812_reg_800[4 : 0] <= zext_ln812_fu_655_p1[4 : 0];
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        grp_fu_396_p0 <= grp_fu_1835_p_dout0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln812_fu_489_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end
always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter33_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end
always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) 
    & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end
always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_m_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_m_1 = m_fu_158;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_ce0_local = 1'b1;
    end else begin
        b_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_we0_local = 1'b1;
    end else begin
        b_we0_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_387_ce = 1'b1;
    end else begin
        grp_fu_387_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_391_ce = 1'b1;
    end else begin
        grp_fu_391_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        input_s_b_stream_s_blk_n = input_s_b_stream_s_full_n;
    end else begin
        input_s_b_stream_s_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        input_s_b_stream_s_write_local = 1'b1;
    end else begin
        input_s_b_stream_s_write_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        s_ce0_local = 1'b1;
    end else begin
        s_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter34 == 1'b1))) begin
        s_we0_local = 1'b1;
    end else begin
        s_we0_local = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign add_ln812_fu_483_p2 = (ap_sig_allocacmp_m_1 + 5'd1);
assign and_ln815_fu_721_p2 = (tmp_95_reg_829 & or_ln815_fu_717_p2);
assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];
assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);
always @ (*) begin
    ap_block_pp0_stage0_00001 = ((1'b1 == ap_block_state35_pp0_stage0_iter34) & (ap_enable_reg_pp0_iter34 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b1 == ap_block_state35_pp0_stage0_iter34) & (ap_enable_reg_pp0_iter34 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_block_state35_pp0_stage0_iter34) & (ap_enable_reg_pp0_iter34 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_block_state35_pp0_stage0_iter34) & (ap_enable_reg_pp0_iter34 == 1'b1));
end
always @ (*) begin
    ap_block_state35_pp0_stage0_iter34 = (input_s_b_stream_s_full_n == 1'b0);
end
assign ap_done = ap_done_sig;
assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);
assign ap_enable_reg_pp0_iter0 = ap_start_int;
assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;
assign ap_ready = ap_ready_sig;
assign b_address0 = zext_ln812_fu_655_p1;
assign b_ce0 = b_ce0_local;
assign b_d0 = tmp_1_reg_791;
assign b_we0 = b_we0_local;
assign bitcast_ln150_1_fu_746_p1 = tmp_1_reg_791_pp0_iter33_reg;
assign bitcast_ln150_fu_742_p1 = select_ln815_fu_726_p3;
assign bitcast_ln815_fu_688_p1 = div1_reg_811;
assign grp_fu_1831_p_ce = grp_fu_387_ce;
assign grp_fu_1831_p_din0 = tmp_s_reg_785;
assign grp_fu_1831_p_din1 = tmp_1_reg_791;
assign grp_fu_1831_p_opcode = 2'd1;
assign grp_fu_1835_p_ce = grp_fu_391_ce;
assign grp_fu_1835_p_din0 = grp_fu_1831_p_dout0;
assign grp_fu_1835_p_din1 = 32'd1097859072;
assign grp_fu_396_opcode = 5'd1;
assign grp_fu_396_p1 = 32'd0;
assign icmp_ln812_fu_489_p2 = ((ap_sig_allocacmp_m_1 == 5'd16) ? 1'b1 : 1'b0);
assign icmp_ln815_1_fu_711_p2 = ((trunc_ln815_fu_701_p1 == 23'd0) ? 1'b1 : 1'b0);
assign icmp_ln815_fu_705_p2 = ((tmp_94_fu_691_p4 != 8'd255) ? 1'b1 : 1'b0);
assign input_s_b_stream_s_din = zext_ln150_fu_757_p1;
assign input_s_b_stream_s_write = input_s_b_stream_s_write_local;
assign or_ln815_fu_717_p2 = (icmp_ln815_reg_819 | icmp_ln815_1_reg_824);
assign s_address0 = zext_ln812_reg_800_pp0_iter33_reg;
assign s_ce0 = s_ce0_local;
assign s_d0 = select_ln815_fu_726_p3;
assign s_we0 = s_we0_local;
assign select_ln815_fu_726_p3 = ((and_ln815_fu_721_p2[0:0] == 1'b1) ? 32'd1065353216 : div1_reg_811_pp0_iter33_reg);
assign tmp_1_fu_571_p33 = 'bx;
assign tmp_2_fu_749_p3 = {{bitcast_ln150_1_fu_746_p1}, {bitcast_ln150_fu_742_p1}};
assign tmp_94_fu_691_p4 = {{bitcast_ln815_fu_688_p1[30:23]}};
assign tmp_s_fu_499_p33 = 'bx;
assign trunc_ln812_fu_495_p1 = ap_sig_allocacmp_m_1[3:0];
assign trunc_ln815_fu_701_p1 = bitcast_ln815_fu_688_p1[22:0];
assign zext_ln150_fu_757_p1 = tmp_2_fu_749_p3;
assign zext_ln812_fu_655_p1 = m_1_reg_776;
always @ (posedge ap_clk) begin
    zext_ln812_reg_800[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter2_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter3_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter4_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter5_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter6_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter7_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter8_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter9_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter10_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter11_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter12_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter13_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter14_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter15_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter16_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter17_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter18_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter19_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter20_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter21_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter22_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter23_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter24_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter25_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter26_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter27_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter28_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter29_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter30_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter31_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter32_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln812_reg_800_pp0_iter33_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end
endmodule