`timescale 1 ns / 1 ps
// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
 
module Linear_Layer_i4xi4_q_systolic_array_i4xi4_pack_2x2_16_32_11_true_Loop_data_load_AB_proc1 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        block_A_loader_dout,
        block_A_loader_num_data_valid,
        block_A_loader_fifo_cap,
        block_A_loader_empty_n,
        block_A_loader_read,
        block_B_loader_dout,
        block_B_loader_num_data_valid,
        block_B_loader_fifo_cap,
        block_B_loader_empty_n,
        block_B_loader_read,
        A_fifo_din,
        A_fifo_num_data_valid,
        A_fifo_fifo_cap,
        A_fifo_full_n,
        A_fifo_write,
        A_fifo_16_din,
        A_fifo_16_num_data_valid,
        A_fifo_16_fifo_cap,
        A_fifo_16_full_n,
        A_fifo_16_write,
        A_fifo_32_din,
        A_fifo_32_num_data_valid,
        A_fifo_32_fifo_cap,
        A_fifo_32_full_n,
        A_fifo_32_write,
        A_fifo_48_din,
        A_fifo_48_num_data_valid,
        A_fifo_48_fifo_cap,
        A_fifo_48_full_n,
        A_fifo_48_write,
        A_fifo_64_din,
        A_fifo_64_num_data_valid,
        A_fifo_64_fifo_cap,
        A_fifo_64_full_n,
        A_fifo_64_write,
        A_fifo_80_din,
        A_fifo_80_num_data_valid,
        A_fifo_80_fifo_cap,
        A_fifo_80_full_n,
        A_fifo_80_write,
        A_fifo_96_din,
        A_fifo_96_num_data_valid,
        A_fifo_96_fifo_cap,
        A_fifo_96_full_n,
        A_fifo_96_write,
        A_fifo_112_din,
        A_fifo_112_num_data_valid,
        A_fifo_112_fifo_cap,
        A_fifo_112_full_n,
        A_fifo_112_write,
        B_fifo_din,
        B_fifo_num_data_valid,
        B_fifo_fifo_cap,
        B_fifo_full_n,
        B_fifo_write,
        B_fifo_8_din,
        B_fifo_8_num_data_valid,
        B_fifo_8_fifo_cap,
        B_fifo_8_full_n,
        B_fifo_8_write,
        B_fifo_16_din,
        B_fifo_16_num_data_valid,
        B_fifo_16_fifo_cap,
        B_fifo_16_full_n,
        B_fifo_16_write,
        B_fifo_24_din,
        B_fifo_24_num_data_valid,
        B_fifo_24_fifo_cap,
        B_fifo_24_full_n,
        B_fifo_24_write,
        B_fifo_32_din,
        B_fifo_32_num_data_valid,
        B_fifo_32_fifo_cap,
        B_fifo_32_full_n,
        B_fifo_32_write,
        B_fifo_40_din,
        B_fifo_40_num_data_valid,
        B_fifo_40_fifo_cap,
        B_fifo_40_full_n,
        B_fifo_40_write,
        B_fifo_48_din,
        B_fifo_48_num_data_valid,
        B_fifo_48_fifo_cap,
        B_fifo_48_full_n,
        B_fifo_48_write,
        B_fifo_56_din,
        B_fifo_56_num_data_valid,
        B_fifo_56_fifo_cap,
        B_fifo_56_full_n,
        B_fifo_56_write,
        B_fifo_64_din,
        B_fifo_64_num_data_valid,
        B_fifo_64_fifo_cap,
        B_fifo_64_full_n,
        B_fifo_64_write,
        B_fifo_72_din,
        B_fifo_72_num_data_valid,
        B_fifo_72_fifo_cap,
        B_fifo_72_full_n,
        B_fifo_72_write,
        B_fifo_80_din,
        B_fifo_80_num_data_valid,
        B_fifo_80_fifo_cap,
        B_fifo_80_full_n,
        B_fifo_80_write,
        B_fifo_88_din,
        B_fifo_88_num_data_valid,
        B_fifo_88_fifo_cap,
        B_fifo_88_full_n,
        B_fifo_88_write,
        B_fifo_96_din,
        B_fifo_96_num_data_valid,
        B_fifo_96_fifo_cap,
        B_fifo_96_full_n,
        B_fifo_96_write,
        B_fifo_104_din,
        B_fifo_104_num_data_valid,
        B_fifo_104_fifo_cap,
        B_fifo_104_full_n,
        B_fifo_104_write,
        B_fifo_112_din,
        B_fifo_112_num_data_valid,
        B_fifo_112_fifo_cap,
        B_fifo_112_full_n,
        B_fifo_112_write,
        B_fifo_120_din,
        B_fifo_120_num_data_valid,
        B_fifo_120_fifo_cap,
        B_fifo_120_full_n,
        B_fifo_120_write,
        start_out,
        start_write
);
parameter    ap_ST_fsm_state1 = 1'd1;
input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] block_A_loader_dout;
input  [2:0] block_A_loader_num_data_valid;
input  [2:0] block_A_loader_fifo_cap;
input   block_A_loader_empty_n;
output   block_A_loader_read;
input  [127:0] block_B_loader_dout;
input  [2:0] block_B_loader_num_data_valid;
input  [2:0] block_B_loader_fifo_cap;
input   block_B_loader_empty_n;
output   block_B_loader_read;
output  [7:0] A_fifo_din;
input  [4:0] A_fifo_num_data_valid;
input  [4:0] A_fifo_fifo_cap;
input   A_fifo_full_n;
output   A_fifo_write;
output  [7:0] A_fifo_16_din;
input  [4:0] A_fifo_16_num_data_valid;
input  [4:0] A_fifo_16_fifo_cap;
input   A_fifo_16_full_n;
output   A_fifo_16_write;
output  [7:0] A_fifo_32_din;
input  [4:0] A_fifo_32_num_data_valid;
input  [4:0] A_fifo_32_fifo_cap;
input   A_fifo_32_full_n;
output   A_fifo_32_write;
output  [7:0] A_fifo_48_din;
input  [4:0] A_fifo_48_num_data_valid;
input  [4:0] A_fifo_48_fifo_cap;
input   A_fifo_48_full_n;
output   A_fifo_48_write;
output  [7:0] A_fifo_64_din;
input  [4:0] A_fifo_64_num_data_valid;
input  [4:0] A_fifo_64_fifo_cap;
input   A_fifo_64_full_n;
output   A_fifo_64_write;
output  [7:0] A_fifo_80_din;
input  [4:0] A_fifo_80_num_data_valid;
input  [4:0] A_fifo_80_fifo_cap;
input   A_fifo_80_full_n;
output   A_fifo_80_write;
output  [7:0] A_fifo_96_din;
input  [4:0] A_fifo_96_num_data_valid;
input  [4:0] A_fifo_96_fifo_cap;
input   A_fifo_96_full_n;
output   A_fifo_96_write;
output  [7:0] A_fifo_112_din;
input  [4:0] A_fifo_112_num_data_valid;
input  [4:0] A_fifo_112_fifo_cap;
input   A_fifo_112_full_n;
output   A_fifo_112_write;
output  [7:0] B_fifo_din;
input  [5:0] B_fifo_num_data_valid;
input  [5:0] B_fifo_fifo_cap;
input   B_fifo_full_n;
output   B_fifo_write;
output  [7:0] B_fifo_8_din;
input  [5:0] B_fifo_8_num_data_valid;
input  [5:0] B_fifo_8_fifo_cap;
input   B_fifo_8_full_n;
output   B_fifo_8_write;
output  [7:0] B_fifo_16_din;
input  [5:0] B_fifo_16_num_data_valid;
input  [5:0] B_fifo_16_fifo_cap;
input   B_fifo_16_full_n;
output   B_fifo_16_write;
output  [7:0] B_fifo_24_din;
input  [5:0] B_fifo_24_num_data_valid;
input  [5:0] B_fifo_24_fifo_cap;
input   B_fifo_24_full_n;
output   B_fifo_24_write;
output  [7:0] B_fifo_32_din;
input  [5:0] B_fifo_32_num_data_valid;
input  [5:0] B_fifo_32_fifo_cap;
input   B_fifo_32_full_n;
output   B_fifo_32_write;
output  [7:0] B_fifo_40_din;
input  [5:0] B_fifo_40_num_data_valid;
input  [5:0] B_fifo_40_fifo_cap;
input   B_fifo_40_full_n;
output   B_fifo_40_write;
output  [7:0] B_fifo_48_din;
input  [5:0] B_fifo_48_num_data_valid;
input  [5:0] B_fifo_48_fifo_cap;
input   B_fifo_48_full_n;
output   B_fifo_48_write;
output  [7:0] B_fifo_56_din;
input  [5:0] B_fifo_56_num_data_valid;
input  [5:0] B_fifo_56_fifo_cap;
input   B_fifo_56_full_n;
output   B_fifo_56_write;
output  [7:0] B_fifo_64_din;
input  [5:0] B_fifo_64_num_data_valid;
input  [5:0] B_fifo_64_fifo_cap;
input   B_fifo_64_full_n;
output   B_fifo_64_write;
output  [7:0] B_fifo_72_din;
input  [5:0] B_fifo_72_num_data_valid;
input  [5:0] B_fifo_72_fifo_cap;
input   B_fifo_72_full_n;
output   B_fifo_72_write;
output  [7:0] B_fifo_80_din;
input  [5:0] B_fifo_80_num_data_valid;
input  [5:0] B_fifo_80_fifo_cap;
input   B_fifo_80_full_n;
output   B_fifo_80_write;
output  [7:0] B_fifo_88_din;
input  [5:0] B_fifo_88_num_data_valid;
input  [5:0] B_fifo_88_fifo_cap;
input   B_fifo_88_full_n;
output   B_fifo_88_write;
output  [7:0] B_fifo_96_din;
input  [5:0] B_fifo_96_num_data_valid;
input  [5:0] B_fifo_96_fifo_cap;
input   B_fifo_96_full_n;
output   B_fifo_96_write;
output  [7:0] B_fifo_104_din;
input  [5:0] B_fifo_104_num_data_valid;
input  [5:0] B_fifo_104_fifo_cap;
input   B_fifo_104_full_n;
output   B_fifo_104_write;
output  [7:0] B_fifo_112_din;
input  [5:0] B_fifo_112_num_data_valid;
input  [5:0] B_fifo_112_fifo_cap;
input   B_fifo_112_full_n;
output   B_fifo_112_write;
output  [7:0] B_fifo_120_din;
input  [5:0] B_fifo_120_num_data_valid;
input  [5:0] B_fifo_120_fifo_cap;
input   B_fifo_120_full_n;
output   B_fifo_120_write;
output   start_out;
output   start_write;
reg ap_idle;
reg start_write;
reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln2255_fu_718_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    block_A_loader_blk_n;
reg    block_B_loader_blk_n;
reg    A_fifo_blk_n;
reg    A_fifo_16_blk_n;
reg    A_fifo_32_blk_n;
reg    A_fifo_48_blk_n;
reg    A_fifo_64_blk_n;
reg    A_fifo_80_blk_n;
reg    A_fifo_96_blk_n;
reg    A_fifo_112_blk_n;
reg    B_fifo_blk_n;
reg    B_fifo_8_blk_n;
reg    B_fifo_16_blk_n;
reg    B_fifo_24_blk_n;
reg    B_fifo_32_blk_n;
reg    B_fifo_40_blk_n;
reg    B_fifo_48_blk_n;
reg    B_fifo_56_blk_n;
reg    B_fifo_64_blk_n;
reg    B_fifo_72_blk_n;
reg    B_fifo_80_blk_n;
reg    B_fifo_88_blk_n;
reg    B_fifo_96_blk_n;
reg    B_fifo_104_blk_n;
reg    B_fifo_112_blk_n;
reg    B_fifo_120_blk_n;
reg   [10:0] k1_fu_158;
wire   [10:0] k_fu_360_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_k1_load;
reg    block_A_loader_read_local;
reg    block_B_loader_read_local;
wire   [7:0] trunc_ln2260_fu_370_p1;
reg    A_fifo_write_local;
reg    A_fifo_16_write_local;
reg    A_fifo_32_write_local;
reg    A_fifo_48_write_local;
reg    A_fifo_64_write_local;
reg    A_fifo_80_write_local;
reg    A_fifo_96_write_local;
reg    A_fifo_112_write_local;
wire   [7:0] trunc_ln2263_fu_484_p1;
reg    B_fifo_write_local;
reg    B_fifo_8_write_local;
reg    B_fifo_16_write_local;
reg    B_fifo_24_write_local;
reg    B_fifo_32_write_local;
reg    B_fifo_40_write_local;
reg    B_fifo_48_write_local;
reg    B_fifo_56_write_local;
reg    B_fifo_64_write_local;
reg    B_fifo_72_write_local;
reg    B_fifo_80_write_local;
reg    B_fifo_88_write_local;
reg    B_fifo_96_write_local;
reg    B_fifo_104_write_local;
reg    B_fifo_112_write_local;
reg    B_fifo_120_write_local;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_done_sig;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
#0 k1_fu_158 = 11'd0;
end
Linear_Layer_i4xi4_q_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        k1_fu_158 <= k_fu_360_p2;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_112_blk_n = A_fifo_112_full_n;
    end else begin
        A_fifo_112_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_112_write_local = 1'b1;
    end else begin
        A_fifo_112_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_16_blk_n = A_fifo_16_full_n;
    end else begin
        A_fifo_16_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_16_write_local = 1'b1;
    end else begin
        A_fifo_16_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_32_blk_n = A_fifo_32_full_n;
    end else begin
        A_fifo_32_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_32_write_local = 1'b1;
    end else begin
        A_fifo_32_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_48_blk_n = A_fifo_48_full_n;
    end else begin
        A_fifo_48_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_48_write_local = 1'b1;
    end else begin
        A_fifo_48_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_64_blk_n = A_fifo_64_full_n;
    end else begin
        A_fifo_64_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_64_write_local = 1'b1;
    end else begin
        A_fifo_64_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_80_blk_n = A_fifo_80_full_n;
    end else begin
        A_fifo_80_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_80_write_local = 1'b1;
    end else begin
        A_fifo_80_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_96_blk_n = A_fifo_96_full_n;
    end else begin
        A_fifo_96_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_96_write_local = 1'b1;
    end else begin
        A_fifo_96_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_blk_n = A_fifo_full_n;
    end else begin
        A_fifo_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        A_fifo_write_local = 1'b1;
    end else begin
        A_fifo_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_104_blk_n = B_fifo_104_full_n;
    end else begin
        B_fifo_104_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_104_write_local = 1'b1;
    end else begin
        B_fifo_104_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_112_blk_n = B_fifo_112_full_n;
    end else begin
        B_fifo_112_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_112_write_local = 1'b1;
    end else begin
        B_fifo_112_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_120_blk_n = B_fifo_120_full_n;
    end else begin
        B_fifo_120_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_120_write_local = 1'b1;
    end else begin
        B_fifo_120_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_16_blk_n = B_fifo_16_full_n;
    end else begin
        B_fifo_16_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_16_write_local = 1'b1;
    end else begin
        B_fifo_16_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_24_blk_n = B_fifo_24_full_n;
    end else begin
        B_fifo_24_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_24_write_local = 1'b1;
    end else begin
        B_fifo_24_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_32_blk_n = B_fifo_32_full_n;
    end else begin
        B_fifo_32_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_32_write_local = 1'b1;
    end else begin
        B_fifo_32_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_40_blk_n = B_fifo_40_full_n;
    end else begin
        B_fifo_40_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_40_write_local = 1'b1;
    end else begin
        B_fifo_40_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_48_blk_n = B_fifo_48_full_n;
    end else begin
        B_fifo_48_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_48_write_local = 1'b1;
    end else begin
        B_fifo_48_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_56_blk_n = B_fifo_56_full_n;
    end else begin
        B_fifo_56_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_56_write_local = 1'b1;
    end else begin
        B_fifo_56_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_64_blk_n = B_fifo_64_full_n;
    end else begin
        B_fifo_64_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_64_write_local = 1'b1;
    end else begin
        B_fifo_64_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_72_blk_n = B_fifo_72_full_n;
    end else begin
        B_fifo_72_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_72_write_local = 1'b1;
    end else begin
        B_fifo_72_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_80_blk_n = B_fifo_80_full_n;
    end else begin
        B_fifo_80_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_80_write_local = 1'b1;
    end else begin
        B_fifo_80_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_88_blk_n = B_fifo_88_full_n;
    end else begin
        B_fifo_88_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_88_write_local = 1'b1;
    end else begin
        B_fifo_88_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_8_blk_n = B_fifo_8_full_n;
    end else begin
        B_fifo_8_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_8_write_local = 1'b1;
    end else begin
        B_fifo_8_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_96_blk_n = B_fifo_96_full_n;
    end else begin
        B_fifo_96_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_96_write_local = 1'b1;
    end else begin
        B_fifo_96_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_blk_n = B_fifo_full_n;
    end else begin
        B_fifo_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        B_fifo_write_local = 1'b1;
    end else begin
        B_fifo_write_local = 1'b0;
    end
end
always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end
always @ (*) begin
    if (((icmp_ln2255_fu_718_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end
always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end
always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end
always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_k1_load = 11'd0;
    end else begin
        ap_sig_allocacmp_k1_load = k1_fu_158;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        block_A_loader_blk_n = block_A_loader_empty_n;
    end else begin
        block_A_loader_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        block_A_loader_read_local = 1'b1;
    end else begin
        block_A_loader_read_local = 1'b0;
    end
end
always @ (*) begin
    if ((~((ap_start_int == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        block_B_loader_blk_n = block_B_loader_empty_n;
    end else begin
        block_B_loader_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        block_B_loader_read_local = 1'b1;
    end else begin
        block_B_loader_read_local = 1'b0;
    end
end
always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end
always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign A_fifo_112_din = {{block_A_loader_dout[63:56]}};
assign A_fifo_112_write = A_fifo_112_write_local;
assign A_fifo_16_din = {{block_A_loader_dout[15:8]}};
assign A_fifo_16_write = A_fifo_16_write_local;
assign A_fifo_32_din = {{block_A_loader_dout[23:16]}};
assign A_fifo_32_write = A_fifo_32_write_local;
assign A_fifo_48_din = {{block_A_loader_dout[31:24]}};
assign A_fifo_48_write = A_fifo_48_write_local;
assign A_fifo_64_din = {{block_A_loader_dout[39:32]}};
assign A_fifo_64_write = A_fifo_64_write_local;
assign A_fifo_80_din = {{block_A_loader_dout[47:40]}};
assign A_fifo_80_write = A_fifo_80_write_local;
assign A_fifo_96_din = {{block_A_loader_dout[55:48]}};
assign A_fifo_96_write = A_fifo_96_write_local;
assign A_fifo_din = trunc_ln2260_fu_370_p1;
assign A_fifo_write = A_fifo_write_local;
assign B_fifo_104_din = {{block_B_loader_dout[111:104]}};
assign B_fifo_104_write = B_fifo_104_write_local;
assign B_fifo_112_din = {{block_B_loader_dout[119:112]}};
assign B_fifo_112_write = B_fifo_112_write_local;
assign B_fifo_120_din = {{block_B_loader_dout[127:120]}};
assign B_fifo_120_write = B_fifo_120_write_local;
assign B_fifo_16_din = {{block_B_loader_dout[23:16]}};
assign B_fifo_16_write = B_fifo_16_write_local;
assign B_fifo_24_din = {{block_B_loader_dout[31:24]}};
assign B_fifo_24_write = B_fifo_24_write_local;
assign B_fifo_32_din = {{block_B_loader_dout[39:32]}};
assign B_fifo_32_write = B_fifo_32_write_local;
assign B_fifo_40_din = {{block_B_loader_dout[47:40]}};
assign B_fifo_40_write = B_fifo_40_write_local;
assign B_fifo_48_din = {{block_B_loader_dout[55:48]}};
assign B_fifo_48_write = B_fifo_48_write_local;
assign B_fifo_56_din = {{block_B_loader_dout[63:56]}};
assign B_fifo_56_write = B_fifo_56_write_local;
assign B_fifo_64_din = {{block_B_loader_dout[71:64]}};
assign B_fifo_64_write = B_fifo_64_write_local;
assign B_fifo_72_din = {{block_B_loader_dout[79:72]}};
assign B_fifo_72_write = B_fifo_72_write_local;
assign B_fifo_80_din = {{block_B_loader_dout[87:80]}};
assign B_fifo_80_write = B_fifo_80_write_local;
assign B_fifo_88_din = {{block_B_loader_dout[95:88]}};
assign B_fifo_88_write = B_fifo_88_write_local;
assign B_fifo_8_din = {{block_B_loader_dout[15:8]}};
assign B_fifo_8_write = B_fifo_8_write_local;
assign B_fifo_96_din = {{block_B_loader_dout[103:96]}};
assign B_fifo_96_write = B_fifo_96_write_local;
assign B_fifo_din = trunc_ln2263_fu_484_p1;
assign B_fifo_write = B_fifo_write_local;
assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];
always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start_int == 1'b0) | (block_B_loader_empty_n == 1'b0) | (block_A_loader_empty_n == 1'b0) | (1'b0 == A_fifo_96_full_n) | (1'b0 == A_fifo_80_full_n) | (1'b0 == A_fifo_64_full_n) | (1'b0 == A_fifo_48_full_n) | (1'b0 == A_fifo_32_full_n) | (1'b0 == A_fifo_16_full_n) | (1'b0 == A_fifo_full_n) | (1'b0 == B_fifo_120_full_n) | (1'b0 == B_fifo_112_full_n) | (1'b0 == B_fifo_104_full_n) | (1'b0 == B_fifo_96_full_n) | (1'b0 == B_fifo_88_full_n) | (1'b0 == B_fifo_80_full_n) | (1'b0 == B_fifo_72_full_n) | (1'b0 == B_fifo_64_full_n) | (1'b0 == B_fifo_56_full_n) | (1'b0 == B_fifo_48_full_n) | (1'b0 == B_fifo_40_full_n) | (1'b0 == B_fifo_32_full_n) | (1'b0 == B_fifo_24_full_n) | (1'b0 == B_fifo_16_full_n) | (1'b0 == B_fifo_8_full_n) | (1'b0 == B_fifo_full_n) | (1'b0 == A_fifo_112_full_n) | (ap_done_reg == 1'b1));
end
assign ap_done = ap_done_sig;
assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;
assign ap_ready = internal_ap_ready;
assign block_A_loader_read = block_A_loader_read_local;
assign block_B_loader_read = block_B_loader_read_local;
assign icmp_ln2255_fu_718_p2 = ((ap_sig_allocacmp_k1_load == 11'd2047) ? 1'b1 : 1'b0);
assign k_fu_360_p2 = (ap_sig_allocacmp_k1_load + 11'd1);
assign start_out = real_start;
assign trunc_ln2260_fu_370_p1 = block_A_loader_dout[7:0];
assign trunc_ln2263_fu_484_p1 = block_B_loader_dout[7:0];
endmodule