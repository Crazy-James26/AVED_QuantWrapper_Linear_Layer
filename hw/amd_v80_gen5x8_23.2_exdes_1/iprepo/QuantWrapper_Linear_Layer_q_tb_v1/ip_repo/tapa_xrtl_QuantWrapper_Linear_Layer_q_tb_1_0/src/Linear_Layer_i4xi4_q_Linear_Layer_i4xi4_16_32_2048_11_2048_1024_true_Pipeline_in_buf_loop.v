`timescale 1 ns / 1 ps
// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
 
module Linear_Layer_i4xi4_q_Linear_Layer_i4xi4_16_32_2048_11_2048_1024_true_Pipeline_in_buf_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_stream_s_dout,
        input_stream_s_empty_n,
        input_stream_s_read,
        A_15_address1,
        A_15_ce1,
        A_15_we1,
        A_15_d1,
        A_14_address1,
        A_14_ce1,
        A_14_we1,
        A_14_d1,
        A_13_address1,
        A_13_ce1,
        A_13_we1,
        A_13_d1,
        A_12_address1,
        A_12_ce1,
        A_12_we1,
        A_12_d1,
        A_11_address1,
        A_11_ce1,
        A_11_we1,
        A_11_d1,
        A_10_address1,
        A_10_ce1,
        A_10_we1,
        A_10_d1,
        A_9_address1,
        A_9_ce1,
        A_9_we1,
        A_9_d1,
        A_8_address1,
        A_8_ce1,
        A_8_we1,
        A_8_d1,
        A_7_address1,
        A_7_ce1,
        A_7_we1,
        A_7_d1,
        A_6_address1,
        A_6_ce1,
        A_6_we1,
        A_6_d1,
        A_5_address1,
        A_5_ce1,
        A_5_we1,
        A_5_d1,
        A_4_address1,
        A_4_ce1,
        A_4_we1,
        A_4_d1,
        A_3_address1,
        A_3_ce1,
        A_3_we1,
        A_3_d1,
        A_2_address1,
        A_2_ce1,
        A_2_we1,
        A_2_d1,
        A_1_address1,
        A_1_ce1,
        A_1_we1,
        A_1_d1,
        A_address1,
        A_ce1,
        A_we1,
        A_d1
);
parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [64:0] input_stream_s_dout;
input   input_stream_s_empty_n;
output   input_stream_s_read;
output  [10:0] A_15_address1;
output   A_15_ce1;
output   A_15_we1;
output  [3:0] A_15_d1;
output  [10:0] A_14_address1;
output   A_14_ce1;
output   A_14_we1;
output  [3:0] A_14_d1;
output  [10:0] A_13_address1;
output   A_13_ce1;
output   A_13_we1;
output  [3:0] A_13_d1;
output  [10:0] A_12_address1;
output   A_12_ce1;
output   A_12_we1;
output  [3:0] A_12_d1;
output  [10:0] A_11_address1;
output   A_11_ce1;
output   A_11_we1;
output  [3:0] A_11_d1;
output  [10:0] A_10_address1;
output   A_10_ce1;
output   A_10_we1;
output  [3:0] A_10_d1;
output  [10:0] A_9_address1;
output   A_9_ce1;
output   A_9_we1;
output  [3:0] A_9_d1;
output  [10:0] A_8_address1;
output   A_8_ce1;
output   A_8_we1;
output  [3:0] A_8_d1;
output  [10:0] A_7_address1;
output   A_7_ce1;
output   A_7_we1;
output  [3:0] A_7_d1;
output  [10:0] A_6_address1;
output   A_6_ce1;
output   A_6_we1;
output  [3:0] A_6_d1;
output  [10:0] A_5_address1;
output   A_5_ce1;
output   A_5_we1;
output  [3:0] A_5_d1;
output  [10:0] A_4_address1;
output   A_4_ce1;
output   A_4_we1;
output  [3:0] A_4_d1;
output  [10:0] A_3_address1;
output   A_3_ce1;
output   A_3_we1;
output  [3:0] A_3_d1;
output  [10:0] A_2_address1;
output   A_2_ce1;
output   A_2_we1;
output  [3:0] A_2_d1;
output  [10:0] A_1_address1;
output   A_1_ce1;
output   A_1_we1;
output  [3:0] A_1_d1;
output  [10:0] A_address1;
output   A_ce1;
output   A_we1;
output  [3:0] A_d1;
reg ap_idle;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln2600_fu_442_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    input_stream_s_blk_n;
wire    ap_block_pp0_stage0;
reg   [11:0] k_1_reg_789;
reg    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln2600_fu_460_p1;
reg   [11:0] k_fu_136;
wire   [11:0] add_ln2600_fu_436_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_k_1;
reg    input_stream_s_read_local;
reg    A_we1_local;
wire   [3:0] trunc_ln91_fu_481_p1;
reg    A_ce1_local;
reg    A_1_we1_local;
reg    A_1_ce1_local;
reg    A_2_we1_local;
reg    A_2_ce1_local;
reg    A_3_we1_local;
reg    A_3_ce1_local;
reg    A_4_we1_local;
reg    A_4_ce1_local;
reg    A_5_we1_local;
reg    A_5_ce1_local;
reg    A_6_we1_local;
reg    A_6_ce1_local;
reg    A_7_we1_local;
reg    A_7_ce1_local;
reg    A_8_we1_local;
reg    A_8_ce1_local;
reg    A_9_we1_local;
reg    A_9_ce1_local;
reg    A_10_we1_local;
reg    A_10_ce1_local;
reg    A_11_we1_local;
reg    A_11_ce1_local;
reg    A_12_we1_local;
reg    A_12_ce1_local;
reg    A_13_we1_local;
reg    A_13_ce1_local;
reg    A_14_we1_local;
reg    A_14_ce1_local;
reg    A_15_we1_local;
reg    A_15_ce1_local;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 k_fu_136 = 12'd0;
#0 ap_done_reg = 1'b0;
end
Linear_Layer_i4xi4_q_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln2600_fu_442_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            k_fu_136 <= add_ln2600_fu_436_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_136 <= 12'd0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_1_reg_789 <= ap_sig_allocacmp_k_1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_10_ce1_local = 1'b1;
    end else begin
        A_10_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_10_we1_local = 1'b1;
    end else begin
        A_10_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_11_ce1_local = 1'b1;
    end else begin
        A_11_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_11_we1_local = 1'b1;
    end else begin
        A_11_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_12_ce1_local = 1'b1;
    end else begin
        A_12_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_12_we1_local = 1'b1;
    end else begin
        A_12_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_13_ce1_local = 1'b1;
    end else begin
        A_13_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_13_we1_local = 1'b1;
    end else begin
        A_13_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_14_ce1_local = 1'b1;
    end else begin
        A_14_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_14_we1_local = 1'b1;
    end else begin
        A_14_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_15_ce1_local = 1'b1;
    end else begin
        A_15_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_15_we1_local = 1'b1;
    end else begin
        A_15_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_1_ce1_local = 1'b1;
    end else begin
        A_1_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_1_we1_local = 1'b1;
    end else begin
        A_1_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_2_ce1_local = 1'b1;
    end else begin
        A_2_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_2_we1_local = 1'b1;
    end else begin
        A_2_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_3_ce1_local = 1'b1;
    end else begin
        A_3_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_3_we1_local = 1'b1;
    end else begin
        A_3_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_4_ce1_local = 1'b1;
    end else begin
        A_4_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_4_we1_local = 1'b1;
    end else begin
        A_4_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_5_ce1_local = 1'b1;
    end else begin
        A_5_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_5_we1_local = 1'b1;
    end else begin
        A_5_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_6_ce1_local = 1'b1;
    end else begin
        A_6_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_6_we1_local = 1'b1;
    end else begin
        A_6_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_7_ce1_local = 1'b1;
    end else begin
        A_7_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_7_we1_local = 1'b1;
    end else begin
        A_7_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_8_ce1_local = 1'b1;
    end else begin
        A_8_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_8_we1_local = 1'b1;
    end else begin
        A_8_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_9_ce1_local = 1'b1;
    end else begin
        A_9_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_9_we1_local = 1'b1;
    end else begin
        A_9_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_ce1_local = 1'b1;
    end else begin
        A_ce1_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_we1_local = 1'b1;
    end else begin
        A_we1_local = 1'b0;
    end
end
always @ (*) begin
    if (((icmp_ln2600_fu_442_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end
always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end
always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_k_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_k_1 = k_fu_136;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_stream_s_blk_n = input_stream_s_empty_n;
    end else begin
        input_stream_s_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_stream_s_read_local = 1'b1;
    end else begin
        input_stream_s_read_local = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign A_10_address1 = zext_ln2600_fu_460_p1;
assign A_10_ce1 = A_10_ce1_local;
assign A_10_d1 = {{input_stream_s_dout[43:40]}};
assign A_10_we1 = A_10_we1_local;
assign A_11_address1 = zext_ln2600_fu_460_p1;
assign A_11_ce1 = A_11_ce1_local;
assign A_11_d1 = {{input_stream_s_dout[47:44]}};
assign A_11_we1 = A_11_we1_local;
assign A_12_address1 = zext_ln2600_fu_460_p1;
assign A_12_ce1 = A_12_ce1_local;
assign A_12_d1 = {{input_stream_s_dout[51:48]}};
assign A_12_we1 = A_12_we1_local;
assign A_13_address1 = zext_ln2600_fu_460_p1;
assign A_13_ce1 = A_13_ce1_local;
assign A_13_d1 = {{input_stream_s_dout[55:52]}};
assign A_13_we1 = A_13_we1_local;
assign A_14_address1 = zext_ln2600_fu_460_p1;
assign A_14_ce1 = A_14_ce1_local;
assign A_14_d1 = {{input_stream_s_dout[59:56]}};
assign A_14_we1 = A_14_we1_local;
assign A_15_address1 = zext_ln2600_fu_460_p1;
assign A_15_ce1 = A_15_ce1_local;
assign A_15_d1 = {{input_stream_s_dout[63:60]}};
assign A_15_we1 = A_15_we1_local;
assign A_1_address1 = zext_ln2600_fu_460_p1;
assign A_1_ce1 = A_1_ce1_local;
assign A_1_d1 = {{input_stream_s_dout[7:4]}};
assign A_1_we1 = A_1_we1_local;
assign A_2_address1 = zext_ln2600_fu_460_p1;
assign A_2_ce1 = A_2_ce1_local;
assign A_2_d1 = {{input_stream_s_dout[11:8]}};
assign A_2_we1 = A_2_we1_local;
assign A_3_address1 = zext_ln2600_fu_460_p1;
assign A_3_ce1 = A_3_ce1_local;
assign A_3_d1 = {{input_stream_s_dout[15:12]}};
assign A_3_we1 = A_3_we1_local;
assign A_4_address1 = zext_ln2600_fu_460_p1;
assign A_4_ce1 = A_4_ce1_local;
assign A_4_d1 = {{input_stream_s_dout[19:16]}};
assign A_4_we1 = A_4_we1_local;
assign A_5_address1 = zext_ln2600_fu_460_p1;
assign A_5_ce1 = A_5_ce1_local;
assign A_5_d1 = {{input_stream_s_dout[23:20]}};
assign A_5_we1 = A_5_we1_local;
assign A_6_address1 = zext_ln2600_fu_460_p1;
assign A_6_ce1 = A_6_ce1_local;
assign A_6_d1 = {{input_stream_s_dout[27:24]}};
assign A_6_we1 = A_6_we1_local;
assign A_7_address1 = zext_ln2600_fu_460_p1;
assign A_7_ce1 = A_7_ce1_local;
assign A_7_d1 = {{input_stream_s_dout[31:28]}};
assign A_7_we1 = A_7_we1_local;
assign A_8_address1 = zext_ln2600_fu_460_p1;
assign A_8_ce1 = A_8_ce1_local;
assign A_8_d1 = {{input_stream_s_dout[35:32]}};
assign A_8_we1 = A_8_we1_local;
assign A_9_address1 = zext_ln2600_fu_460_p1;
assign A_9_ce1 = A_9_ce1_local;
assign A_9_d1 = {{input_stream_s_dout[39:36]}};
assign A_9_we1 = A_9_we1_local;
assign A_address1 = zext_ln2600_fu_460_p1;
assign A_ce1 = A_ce1_local;
assign A_d1 = trunc_ln91_fu_481_p1;
assign A_we1 = A_we1_local;
assign add_ln2600_fu_436_p2 = (ap_sig_allocacmp_k_1 + 12'd1);
assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];
assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);
always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end
always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1));
end
always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (input_stream_s_empty_n == 1'b0);
end
assign ap_done = ap_done_sig;
assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);
assign ap_enable_reg_pp0_iter0 = ap_start_int;
assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;
assign ap_ready = ap_ready_sig;
assign icmp_ln2600_fu_442_p2 = ((ap_sig_allocacmp_k_1 == 12'd2048) ? 1'b1 : 1'b0);
assign input_stream_s_read = input_stream_s_read_local;
assign trunc_ln91_fu_481_p1 = input_stream_s_dout[3:0];
assign zext_ln2600_fu_460_p1 = k_1_reg_789;
endmodule