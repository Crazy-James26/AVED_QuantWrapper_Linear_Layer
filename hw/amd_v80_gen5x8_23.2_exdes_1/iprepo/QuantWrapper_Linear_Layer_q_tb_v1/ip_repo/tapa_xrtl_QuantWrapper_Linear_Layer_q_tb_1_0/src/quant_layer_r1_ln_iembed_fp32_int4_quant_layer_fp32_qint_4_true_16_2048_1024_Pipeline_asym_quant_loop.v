`timescale 1 ns / 1 ps
// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
 
module quant_layer_r1_ln_iembed_fp32_int4_quant_layer_fp32_qint_4_true_16_2048_1024_Pipeline_asym_quant_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_stream_s_din,
        output_stream_s_full_n,
        output_stream_s_write,
        input_buffer_address0,
        input_buffer_ce0,
        input_buffer_q0,
        b_load,
        s_load,
        input_buffer_1_address0,
        input_buffer_1_ce0,
        input_buffer_1_q0,
        b_load_1,
        s_load_1,
        input_buffer_2_address0,
        input_buffer_2_ce0,
        input_buffer_2_q0,
        b_load_2,
        s_load_2,
        input_buffer_3_address0,
        input_buffer_3_ce0,
        input_buffer_3_q0,
        b_load_3,
        s_load_3,
        input_buffer_4_address0,
        input_buffer_4_ce0,
        input_buffer_4_q0,
        b_load_4,
        s_load_4,
        input_buffer_5_address0,
        input_buffer_5_ce0,
        input_buffer_5_q0,
        b_load_5,
        s_load_5,
        input_buffer_6_address0,
        input_buffer_6_ce0,
        input_buffer_6_q0,
        b_load_6,
        s_load_6,
        input_buffer_7_address0,
        input_buffer_7_ce0,
        input_buffer_7_q0,
        b_load_7,
        s_load_7,
        input_buffer_8_address0,
        input_buffer_8_ce0,
        input_buffer_8_q0,
        b_load_8,
        s_load_8,
        input_buffer_9_address0,
        input_buffer_9_ce0,
        input_buffer_9_q0,
        b_load_9,
        s_load_9,
        input_buffer_10_address0,
        input_buffer_10_ce0,
        input_buffer_10_q0,
        b_load_10,
        s_load_10,
        input_buffer_11_address0,
        input_buffer_11_ce0,
        input_buffer_11_q0,
        b_load_11,
        s_load_11,
        input_buffer_12_address0,
        input_buffer_12_ce0,
        input_buffer_12_q0,
        b_load_12,
        s_load_12,
        input_buffer_13_address0,
        input_buffer_13_ce0,
        input_buffer_13_q0,
        b_load_13,
        s_load_13,
        input_buffer_14_address0,
        input_buffer_14_ce0,
        input_buffer_14_q0,
        b_load_14,
        s_load_14,
        input_buffer_15_address0,
        input_buffer_15_ce0,
        input_buffer_15_q0,
        b_load_15,
        s_load_15,
        grp_fu_1831_p_din0,
        grp_fu_1831_p_din1,
        grp_fu_1831_p_opcode,
        grp_fu_1831_p_dout0,
        grp_fu_1831_p_ce,
        grp_fu_1835_p_din0,
        grp_fu_1835_p_din1,
        grp_fu_1835_p_dout0,
        grp_fu_1835_p_ce
);
parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [64:0] output_stream_s_din;
input   output_stream_s_full_n;
output   output_stream_s_write;
output  [10:0] input_buffer_address0;
output   input_buffer_ce0;
input  [31:0] input_buffer_q0;
input  [31:0] b_load;
input  [31:0] s_load;
output  [10:0] input_buffer_1_address0;
output   input_buffer_1_ce0;
input  [31:0] input_buffer_1_q0;
input  [31:0] b_load_1;
input  [31:0] s_load_1;
output  [10:0] input_buffer_2_address0;
output   input_buffer_2_ce0;
input  [31:0] input_buffer_2_q0;
input  [31:0] b_load_2;
input  [31:0] s_load_2;
output  [10:0] input_buffer_3_address0;
output   input_buffer_3_ce0;
input  [31:0] input_buffer_3_q0;
input  [31:0] b_load_3;
input  [31:0] s_load_3;
output  [10:0] input_buffer_4_address0;
output   input_buffer_4_ce0;
input  [31:0] input_buffer_4_q0;
input  [31:0] b_load_4;
input  [31:0] s_load_4;
output  [10:0] input_buffer_5_address0;
output   input_buffer_5_ce0;
input  [31:0] input_buffer_5_q0;
input  [31:0] b_load_5;
input  [31:0] s_load_5;
output  [10:0] input_buffer_6_address0;
output   input_buffer_6_ce0;
input  [31:0] input_buffer_6_q0;
input  [31:0] b_load_6;
input  [31:0] s_load_6;
output  [10:0] input_buffer_7_address0;
output   input_buffer_7_ce0;
input  [31:0] input_buffer_7_q0;
input  [31:0] b_load_7;
input  [31:0] s_load_7;
output  [10:0] input_buffer_8_address0;
output   input_buffer_8_ce0;
input  [31:0] input_buffer_8_q0;
input  [31:0] b_load_8;
input  [31:0] s_load_8;
output  [10:0] input_buffer_9_address0;
output   input_buffer_9_ce0;
input  [31:0] input_buffer_9_q0;
input  [31:0] b_load_9;
input  [31:0] s_load_9;
output  [10:0] input_buffer_10_address0;
output   input_buffer_10_ce0;
input  [31:0] input_buffer_10_q0;
input  [31:0] b_load_10;
input  [31:0] s_load_10;
output  [10:0] input_buffer_11_address0;
output   input_buffer_11_ce0;
input  [31:0] input_buffer_11_q0;
input  [31:0] b_load_11;
input  [31:0] s_load_11;
output  [10:0] input_buffer_12_address0;
output   input_buffer_12_ce0;
input  [31:0] input_buffer_12_q0;
input  [31:0] b_load_12;
input  [31:0] s_load_12;
output  [10:0] input_buffer_13_address0;
output   input_buffer_13_ce0;
input  [31:0] input_buffer_13_q0;
input  [31:0] b_load_13;
input  [31:0] s_load_13;
output  [10:0] input_buffer_14_address0;
output   input_buffer_14_ce0;
input  [31:0] input_buffer_14_q0;
input  [31:0] b_load_14;
input  [31:0] s_load_14;
output  [10:0] input_buffer_15_address0;
output   input_buffer_15_ce0;
input  [31:0] input_buffer_15_q0;
input  [31:0] b_load_15;
input  [31:0] s_load_15;
output  [31:0] grp_fu_1831_p_din0;
output  [31:0] grp_fu_1831_p_din1;
output  [1:0] grp_fu_1831_p_opcode;
input  [31:0] grp_fu_1831_p_dout0;
output   grp_fu_1831_p_ce;
output  [31:0] grp_fu_1835_p_din0;
output  [31:0] grp_fu_1835_p_din1;
input  [31:0] grp_fu_1835_p_dout0;
output   grp_fu_1835_p_ce;
reg ap_idle;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_idle_pp0;
reg    ap_block_state38_pp0_stage0_iter37;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln823_fu_983_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    output_stream_s_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln823_reg_5060;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter1_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter2_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter3_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter4_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter5_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter6_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter7_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter8_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter9_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter10_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter11_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter12_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter13_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter14_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter15_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter16_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter17_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter18_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter19_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter20_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter21_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter22_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter23_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter24_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter25_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter26_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter27_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter28_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter29_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter30_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter31_reg;
reg   [0:0] icmp_ln823_reg_5060_pp0_iter32_reg;
reg   [31:0] input_buffer_load_reg_5144;
reg   [31:0] input_buffer_1_load_reg_5150;
reg   [31:0] input_buffer_2_load_reg_5156;
reg   [31:0] input_buffer_3_load_reg_5162;
reg   [31:0] input_buffer_4_load_reg_5168;
reg   [31:0] input_buffer_5_load_reg_5174;
reg   [31:0] input_buffer_6_load_reg_5180;
reg   [31:0] input_buffer_7_load_reg_5186;
reg   [31:0] input_buffer_8_load_reg_5192;
reg   [31:0] input_buffer_9_load_reg_5198;
reg   [31:0] input_buffer_10_load_reg_5204;
reg   [31:0] input_buffer_11_load_reg_5210;
reg   [31:0] input_buffer_12_load_reg_5216;
reg   [31:0] input_buffer_13_load_reg_5222;
reg   [31:0] input_buffer_14_load_reg_5228;
reg   [31:0] input_buffer_15_load_reg_5234;
reg   [31:0] grp_fu_755_p2;
reg   [31:0] grp_fu_759_p2;
reg   [31:0] grp_fu_763_p2;
reg   [31:0] grp_fu_767_p2;
reg   [31:0] grp_fu_771_p2;
reg   [31:0] grp_fu_775_p2;
reg   [31:0] grp_fu_779_p2;
reg   [31:0] grp_fu_783_p2;
reg   [31:0] grp_fu_787_p2;
reg   [31:0] grp_fu_791_p2;
reg   [31:0] grp_fu_795_p2;
reg   [31:0] grp_fu_799_p2;
reg   [31:0] grp_fu_803_p2;
reg   [31:0] grp_fu_807_p2;
reg   [31:0] grp_fu_811_p2;
wire   [31:0] grp_generic_round_float_s_fu_607_ap_return;
reg   [31:0] val_reg_5336;
wire   [31:0] grp_generic_round_float_s_fu_616_ap_return;
reg   [31:0] val_1_reg_5341;
wire   [31:0] grp_generic_round_float_s_fu_625_ap_return;
reg   [31:0] val_2_reg_5346;
wire   [31:0] grp_generic_round_float_s_fu_634_ap_return;
reg   [31:0] val_3_reg_5351;
wire   [31:0] grp_generic_round_float_s_fu_643_ap_return;
reg   [31:0] val_4_reg_5356;
wire   [31:0] grp_generic_round_float_s_fu_652_ap_return;
reg   [31:0] val_5_reg_5361;
wire   [31:0] grp_generic_round_float_s_fu_661_ap_return;
reg   [31:0] val_6_reg_5366;
wire   [31:0] grp_generic_round_float_s_fu_670_ap_return;
reg   [31:0] val_7_reg_5371;
wire   [31:0] grp_generic_round_float_s_fu_679_ap_return;
reg   [31:0] val_8_reg_5376;
wire   [31:0] grp_generic_round_float_s_fu_688_ap_return;
reg   [31:0] val_9_reg_5381;
wire   [31:0] grp_generic_round_float_s_fu_697_ap_return;
reg   [31:0] val_10_reg_5386;
wire   [31:0] grp_generic_round_float_s_fu_706_ap_return;
reg   [31:0] val_11_reg_5391;
wire   [31:0] grp_generic_round_float_s_fu_715_ap_return;
reg   [31:0] val_12_reg_5396;
wire   [31:0] grp_generic_round_float_s_fu_724_ap_return;
reg   [31:0] val_13_reg_5401;
wire   [31:0] grp_generic_round_float_s_fu_733_ap_return;
reg   [31:0] val_14_reg_5406;
wire   [31:0] grp_generic_round_float_s_fu_742_ap_return;
reg   [31:0] val_15_reg_5411;
reg   [0:0] tmp_reg_5416;
reg   [0:0] tmp_reg_5416_pp0_iter36_reg;
wire   [3:0] trunc_ln295_2_fu_1326_p1;
reg   [3:0] trunc_ln295_2_reg_5421;
wire   [0:0] icmp_ln295_fu_1338_p2;
reg   [0:0] icmp_ln295_reg_5427;
wire   [0:0] icmp_ln295_1_fu_1354_p2;
reg   [0:0] icmp_ln295_1_reg_5433;
wire   [0:0] icmp_ln295_2_fu_1360_p2;
reg   [0:0] icmp_ln295_2_reg_5439;
wire   [0:0] icmp_ln295_3_fu_1366_p2;
reg   [0:0] icmp_ln295_3_reg_5445;
wire  signed [8:0] sub_ln295_1_fu_1372_p2;
reg  signed [8:0] sub_ln295_1_reg_5450;
reg   [6:0] tmp_1_reg_5455;
wire   [3:0] trunc_ln295_3_fu_1398_p1;
reg   [3:0] trunc_ln295_3_reg_5460;
reg   [0:0] tmp_2_reg_5465;
reg   [0:0] tmp_2_reg_5465_pp0_iter36_reg;
wire   [3:0] trunc_ln295_7_fu_1435_p1;
reg   [3:0] trunc_ln295_7_reg_5470;
wire   [0:0] icmp_ln295_5_fu_1447_p2;
reg   [0:0] icmp_ln295_5_reg_5476;
wire   [0:0] icmp_ln295_6_fu_1463_p2;
reg   [0:0] icmp_ln295_6_reg_5482;
wire   [0:0] icmp_ln295_7_fu_1469_p2;
reg   [0:0] icmp_ln295_7_reg_5488;
wire   [0:0] icmp_ln295_8_fu_1475_p2;
reg   [0:0] icmp_ln295_8_reg_5494;
wire  signed [8:0] sub_ln295_4_fu_1481_p2;
reg  signed [8:0] sub_ln295_4_reg_5499;
reg   [6:0] tmp_3_reg_5504;
wire   [3:0] trunc_ln295_8_fu_1507_p1;
reg   [3:0] trunc_ln295_8_reg_5509;
reg   [0:0] tmp_4_reg_5514;
reg   [0:0] tmp_4_reg_5514_pp0_iter36_reg;
wire   [3:0] trunc_ln295_12_fu_1544_p1;
reg   [3:0] trunc_ln295_12_reg_5519;
wire   [0:0] icmp_ln295_10_fu_1556_p2;
reg   [0:0] icmp_ln295_10_reg_5525;
wire   [0:0] icmp_ln295_11_fu_1572_p2;
reg   [0:0] icmp_ln295_11_reg_5531;
wire   [0:0] icmp_ln295_12_fu_1578_p2;
reg   [0:0] icmp_ln295_12_reg_5537;
wire   [0:0] icmp_ln295_13_fu_1584_p2;
reg   [0:0] icmp_ln295_13_reg_5543;
wire  signed [8:0] sub_ln295_7_fu_1590_p2;
reg  signed [8:0] sub_ln295_7_reg_5548;
reg   [6:0] tmp_5_reg_5553;
wire   [3:0] trunc_ln295_13_fu_1616_p1;
reg   [3:0] trunc_ln295_13_reg_5558;
reg   [0:0] tmp_6_reg_5563;
reg   [0:0] tmp_6_reg_5563_pp0_iter36_reg;
wire   [3:0] trunc_ln295_17_fu_1653_p1;
reg   [3:0] trunc_ln295_17_reg_5568;
wire   [0:0] icmp_ln295_15_fu_1665_p2;
reg   [0:0] icmp_ln295_15_reg_5574;
wire   [0:0] icmp_ln295_16_fu_1681_p2;
reg   [0:0] icmp_ln295_16_reg_5580;
wire   [0:0] icmp_ln295_17_fu_1687_p2;
reg   [0:0] icmp_ln295_17_reg_5586;
wire   [0:0] icmp_ln295_18_fu_1693_p2;
reg   [0:0] icmp_ln295_18_reg_5592;
wire  signed [8:0] sub_ln295_10_fu_1699_p2;
reg  signed [8:0] sub_ln295_10_reg_5597;
reg   [6:0] tmp_7_reg_5602;
wire   [3:0] trunc_ln295_18_fu_1725_p1;
reg   [3:0] trunc_ln295_18_reg_5607;
reg   [0:0] tmp_8_reg_5612;
reg   [0:0] tmp_8_reg_5612_pp0_iter36_reg;
wire   [3:0] trunc_ln295_22_fu_1762_p1;
reg   [3:0] trunc_ln295_22_reg_5617;
wire   [0:0] icmp_ln295_20_fu_1774_p2;
reg   [0:0] icmp_ln295_20_reg_5623;
wire   [0:0] icmp_ln295_21_fu_1790_p2;
reg   [0:0] icmp_ln295_21_reg_5629;
wire   [0:0] icmp_ln295_22_fu_1796_p2;
reg   [0:0] icmp_ln295_22_reg_5635;
wire   [0:0] icmp_ln295_23_fu_1802_p2;
reg   [0:0] icmp_ln295_23_reg_5641;
wire  signed [8:0] sub_ln295_13_fu_1808_p2;
reg  signed [8:0] sub_ln295_13_reg_5646;
reg   [6:0] tmp_9_reg_5651;
wire   [3:0] trunc_ln295_23_fu_1834_p1;
reg   [3:0] trunc_ln295_23_reg_5656;
reg   [0:0] tmp_10_reg_5661;
reg   [0:0] tmp_10_reg_5661_pp0_iter36_reg;
wire   [3:0] trunc_ln295_27_fu_1871_p1;
reg   [3:0] trunc_ln295_27_reg_5666;
wire   [0:0] icmp_ln295_25_fu_1883_p2;
reg   [0:0] icmp_ln295_25_reg_5672;
wire   [0:0] icmp_ln295_26_fu_1899_p2;
reg   [0:0] icmp_ln295_26_reg_5678;
wire   [0:0] icmp_ln295_27_fu_1905_p2;
reg   [0:0] icmp_ln295_27_reg_5684;
wire   [0:0] icmp_ln295_28_fu_1911_p2;
reg   [0:0] icmp_ln295_28_reg_5690;
wire  signed [8:0] sub_ln295_16_fu_1917_p2;
reg  signed [8:0] sub_ln295_16_reg_5695;
reg   [6:0] tmp_11_reg_5700;
wire   [3:0] trunc_ln295_28_fu_1943_p1;
reg   [3:0] trunc_ln295_28_reg_5705;
reg   [0:0] tmp_12_reg_5710;
reg   [0:0] tmp_12_reg_5710_pp0_iter36_reg;
wire   [3:0] trunc_ln295_32_fu_1980_p1;
reg   [3:0] trunc_ln295_32_reg_5715;
wire   [0:0] icmp_ln295_30_fu_1992_p2;
reg   [0:0] icmp_ln295_30_reg_5721;
wire   [0:0] icmp_ln295_31_fu_2008_p2;
reg   [0:0] icmp_ln295_31_reg_5727;
wire   [0:0] icmp_ln295_32_fu_2014_p2;
reg   [0:0] icmp_ln295_32_reg_5733;
wire   [0:0] icmp_ln295_33_fu_2020_p2;
reg   [0:0] icmp_ln295_33_reg_5739;
wire  signed [8:0] sub_ln295_19_fu_2026_p2;
reg  signed [8:0] sub_ln295_19_reg_5744;
reg   [6:0] tmp_13_reg_5749;
wire   [3:0] trunc_ln295_33_fu_2052_p1;
reg   [3:0] trunc_ln295_33_reg_5754;
reg   [0:0] tmp_14_reg_5759;
reg   [0:0] tmp_14_reg_5759_pp0_iter36_reg;
wire   [3:0] trunc_ln295_37_fu_2089_p1;
reg   [3:0] trunc_ln295_37_reg_5764;
wire   [0:0] icmp_ln295_35_fu_2101_p2;
reg   [0:0] icmp_ln295_35_reg_5770;
wire   [0:0] icmp_ln295_36_fu_2117_p2;
reg   [0:0] icmp_ln295_36_reg_5776;
wire   [0:0] icmp_ln295_37_fu_2123_p2;
reg   [0:0] icmp_ln295_37_reg_5782;
wire   [0:0] icmp_ln295_38_fu_2129_p2;
reg   [0:0] icmp_ln295_38_reg_5788;
wire  signed [8:0] sub_ln295_22_fu_2135_p2;
reg  signed [8:0] sub_ln295_22_reg_5793;
reg   [6:0] tmp_15_reg_5798;
wire   [3:0] trunc_ln295_38_fu_2161_p1;
reg   [3:0] trunc_ln295_38_reg_5803;
reg   [0:0] tmp_16_reg_5808;
reg   [0:0] tmp_16_reg_5808_pp0_iter36_reg;
wire   [3:0] trunc_ln295_42_fu_2198_p1;
reg   [3:0] trunc_ln295_42_reg_5813;
wire   [0:0] icmp_ln295_40_fu_2210_p2;
reg   [0:0] icmp_ln295_40_reg_5819;
wire   [0:0] icmp_ln295_41_fu_2226_p2;
reg   [0:0] icmp_ln295_41_reg_5825;
wire   [0:0] icmp_ln295_42_fu_2232_p2;
reg   [0:0] icmp_ln295_42_reg_5831;
wire   [0:0] icmp_ln295_43_fu_2238_p2;
reg   [0:0] icmp_ln295_43_reg_5837;
wire  signed [8:0] sub_ln295_25_fu_2244_p2;
reg  signed [8:0] sub_ln295_25_reg_5842;
reg   [6:0] tmp_17_reg_5847;
wire   [3:0] trunc_ln295_43_fu_2270_p1;
reg   [3:0] trunc_ln295_43_reg_5852;
reg   [0:0] tmp_18_reg_5857;
reg   [0:0] tmp_18_reg_5857_pp0_iter36_reg;
wire   [3:0] trunc_ln295_47_fu_2307_p1;
reg   [3:0] trunc_ln295_47_reg_5862;
wire   [0:0] icmp_ln295_45_fu_2319_p2;
reg   [0:0] icmp_ln295_45_reg_5868;
wire   [0:0] icmp_ln295_46_fu_2335_p2;
reg   [0:0] icmp_ln295_46_reg_5874;
wire   [0:0] icmp_ln295_47_fu_2341_p2;
reg   [0:0] icmp_ln295_47_reg_5880;
wire   [0:0] icmp_ln295_48_fu_2347_p2;
reg   [0:0] icmp_ln295_48_reg_5886;
wire  signed [8:0] sub_ln295_28_fu_2353_p2;
reg  signed [8:0] sub_ln295_28_reg_5891;
reg   [6:0] tmp_19_reg_5896;
wire   [3:0] trunc_ln295_48_fu_2379_p1;
reg   [3:0] trunc_ln295_48_reg_5901;
reg   [0:0] tmp_20_reg_5906;
reg   [0:0] tmp_20_reg_5906_pp0_iter36_reg;
wire   [3:0] trunc_ln295_52_fu_2416_p1;
reg   [3:0] trunc_ln295_52_reg_5911;
wire   [0:0] icmp_ln295_50_fu_2428_p2;
reg   [0:0] icmp_ln295_50_reg_5917;
wire   [0:0] icmp_ln295_51_fu_2444_p2;
reg   [0:0] icmp_ln295_51_reg_5923;
wire   [0:0] icmp_ln295_52_fu_2450_p2;
reg   [0:0] icmp_ln295_52_reg_5929;
wire   [0:0] icmp_ln295_53_fu_2456_p2;
reg   [0:0] icmp_ln295_53_reg_5935;
wire  signed [8:0] sub_ln295_31_fu_2462_p2;
reg  signed [8:0] sub_ln295_31_reg_5940;
reg   [6:0] tmp_21_reg_5945;
wire   [3:0] trunc_ln295_53_fu_2488_p1;
reg   [3:0] trunc_ln295_53_reg_5950;
reg   [0:0] tmp_22_reg_5955;
reg   [0:0] tmp_22_reg_5955_pp0_iter36_reg;
wire   [3:0] trunc_ln295_57_fu_2525_p1;
reg   [3:0] trunc_ln295_57_reg_5960;
wire   [0:0] icmp_ln295_55_fu_2537_p2;
reg   [0:0] icmp_ln295_55_reg_5966;
wire   [0:0] icmp_ln295_56_fu_2553_p2;
reg   [0:0] icmp_ln295_56_reg_5972;
wire   [0:0] icmp_ln295_57_fu_2559_p2;
reg   [0:0] icmp_ln295_57_reg_5978;
wire   [0:0] icmp_ln295_58_fu_2565_p2;
reg   [0:0] icmp_ln295_58_reg_5984;
wire  signed [8:0] sub_ln295_34_fu_2571_p2;
reg  signed [8:0] sub_ln295_34_reg_5989;
reg   [6:0] tmp_23_reg_5994;
wire   [3:0] trunc_ln295_58_fu_2597_p1;
reg   [3:0] trunc_ln295_58_reg_5999;
reg   [0:0] tmp_24_reg_6004;
reg   [0:0] tmp_24_reg_6004_pp0_iter36_reg;
wire   [3:0] trunc_ln295_62_fu_2634_p1;
reg   [3:0] trunc_ln295_62_reg_6009;
wire   [0:0] icmp_ln295_60_fu_2646_p2;
reg   [0:0] icmp_ln295_60_reg_6015;
wire   [0:0] icmp_ln295_61_fu_2662_p2;
reg   [0:0] icmp_ln295_61_reg_6021;
wire   [0:0] icmp_ln295_62_fu_2668_p2;
reg   [0:0] icmp_ln295_62_reg_6027;
wire   [0:0] icmp_ln295_63_fu_2674_p2;
reg   [0:0] icmp_ln295_63_reg_6033;
wire  signed [8:0] sub_ln295_37_fu_2680_p2;
reg  signed [8:0] sub_ln295_37_reg_6038;
reg   [6:0] tmp_25_reg_6043;
wire   [3:0] trunc_ln295_63_fu_2706_p1;
reg   [3:0] trunc_ln295_63_reg_6048;
reg   [0:0] tmp_26_reg_6053;
reg   [0:0] tmp_26_reg_6053_pp0_iter36_reg;
wire   [3:0] trunc_ln295_67_fu_2743_p1;
reg   [3:0] trunc_ln295_67_reg_6058;
wire   [0:0] icmp_ln295_65_fu_2755_p2;
reg   [0:0] icmp_ln295_65_reg_6064;
wire   [0:0] icmp_ln295_66_fu_2771_p2;
reg   [0:0] icmp_ln295_66_reg_6070;
wire   [0:0] icmp_ln295_67_fu_2777_p2;
reg   [0:0] icmp_ln295_67_reg_6076;
wire   [0:0] icmp_ln295_68_fu_2783_p2;
reg   [0:0] icmp_ln295_68_reg_6082;
wire  signed [8:0] sub_ln295_40_fu_2789_p2;
reg  signed [8:0] sub_ln295_40_reg_6087;
reg   [6:0] tmp_27_reg_6092;
wire   [3:0] trunc_ln295_68_fu_2815_p1;
reg   [3:0] trunc_ln295_68_reg_6097;
reg   [0:0] tmp_28_reg_6102;
reg   [0:0] tmp_28_reg_6102_pp0_iter36_reg;
wire   [3:0] trunc_ln295_72_fu_2852_p1;
reg   [3:0] trunc_ln295_72_reg_6107;
wire   [0:0] icmp_ln295_70_fu_2864_p2;
reg   [0:0] icmp_ln295_70_reg_6113;
wire   [0:0] icmp_ln295_71_fu_2880_p2;
reg   [0:0] icmp_ln295_71_reg_6119;
wire   [0:0] icmp_ln295_72_fu_2886_p2;
reg   [0:0] icmp_ln295_72_reg_6125;
wire   [0:0] icmp_ln295_73_fu_2892_p2;
reg   [0:0] icmp_ln295_73_reg_6131;
wire  signed [8:0] sub_ln295_43_fu_2898_p2;
reg  signed [8:0] sub_ln295_43_reg_6136;
reg   [6:0] tmp_29_reg_6141;
wire   [3:0] trunc_ln295_73_fu_2924_p1;
reg   [3:0] trunc_ln295_73_reg_6146;
reg   [0:0] tmp_30_reg_6151;
reg   [0:0] tmp_30_reg_6151_pp0_iter36_reg;
wire   [3:0] trunc_ln295_77_fu_2961_p1;
reg   [3:0] trunc_ln295_77_reg_6156;
wire   [0:0] icmp_ln295_75_fu_2973_p2;
reg   [0:0] icmp_ln295_75_reg_6162;
wire   [0:0] icmp_ln295_76_fu_2989_p2;
reg   [0:0] icmp_ln295_76_reg_6168;
wire   [0:0] icmp_ln295_77_fu_2995_p2;
reg   [0:0] icmp_ln295_77_reg_6174;
wire   [0:0] icmp_ln295_78_fu_3001_p2;
reg   [0:0] icmp_ln295_78_reg_6180;
wire  signed [8:0] sub_ln295_46_fu_3007_p2;
reg  signed [8:0] sub_ln295_46_reg_6185;
reg   [6:0] tmp_31_reg_6190;
wire   [3:0] trunc_ln295_78_fu_3033_p1;
reg   [3:0] trunc_ln295_78_reg_6195;
wire   [3:0] ref_tmp_fu_3115_p11;
reg   [3:0] ref_tmp_reg_6200;
wire   [3:0] ref_tmp99_2_fu_3215_p11;
reg   [3:0] ref_tmp99_2_reg_6206;
wire   [3:0] ref_tmp99_4_fu_3315_p11;
reg   [3:0] ref_tmp99_4_reg_6212;
wire   [3:0] ref_tmp99_6_fu_3415_p11;
reg   [3:0] ref_tmp99_6_reg_6218;
wire   [3:0] ref_tmp99_8_fu_3515_p11;
reg   [3:0] ref_tmp99_8_reg_6224;
wire   [3:0] ref_tmp99_s_fu_3615_p11;
reg   [3:0] ref_tmp99_s_reg_6230;
wire   [3:0] ref_tmp99_1_fu_3715_p11;
reg   [3:0] ref_tmp99_1_reg_6236;
wire   [3:0] ref_tmp99_3_fu_3815_p11;
reg   [3:0] ref_tmp99_3_reg_6242;
wire   [3:0] ref_tmp99_5_fu_3915_p11;
reg   [3:0] ref_tmp99_5_reg_6248;
wire   [3:0] ref_tmp99_7_fu_4015_p11;
reg   [3:0] ref_tmp99_7_reg_6254;
wire   [3:0] ref_tmp99_9_fu_4115_p11;
reg   [3:0] ref_tmp99_9_reg_6260;
wire   [3:0] ref_tmp99_10_fu_4215_p11;
reg   [3:0] ref_tmp99_10_reg_6266;
wire   [3:0] ref_tmp99_11_fu_4315_p11;
reg   [3:0] ref_tmp99_11_reg_6272;
wire   [3:0] ref_tmp99_12_fu_4415_p11;
reg   [3:0] ref_tmp99_12_reg_6278;
wire   [3:0] ref_tmp99_13_fu_4515_p11;
reg   [3:0] ref_tmp99_13_reg_6284;
wire   [3:0] ref_tmp99_14_fu_4615_p11;
reg   [3:0] ref_tmp99_14_reg_6290;
wire    grp_generic_round_float_s_fu_607_ap_start;
wire    grp_generic_round_float_s_fu_607_ap_done;
wire    grp_generic_round_float_s_fu_607_ap_idle;
wire    grp_generic_round_float_s_fu_607_ap_ready;
reg    grp_generic_round_float_s_fu_607_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call13;
reg    ap_block_pp0_stage0_11001_ignoreCallOp809;
wire    grp_generic_round_float_s_fu_616_ap_start;
wire    grp_generic_round_float_s_fu_616_ap_done;
wire    grp_generic_round_float_s_fu_616_ap_idle;
wire    grp_generic_round_float_s_fu_616_ap_ready;
reg    grp_generic_round_float_s_fu_616_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call60;
reg    ap_block_pp0_stage0_11001_ignoreCallOp811;
wire    grp_generic_round_float_s_fu_625_ap_start;
wire    grp_generic_round_float_s_fu_625_ap_done;
wire    grp_generic_round_float_s_fu_625_ap_idle;
wire    grp_generic_round_float_s_fu_625_ap_ready;
reg    grp_generic_round_float_s_fu_625_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call107;
reg    ap_block_pp0_stage0_11001_ignoreCallOp813;
wire    grp_generic_round_float_s_fu_634_ap_start;
wire    grp_generic_round_float_s_fu_634_ap_done;
wire    grp_generic_round_float_s_fu_634_ap_idle;
wire    grp_generic_round_float_s_fu_634_ap_ready;
reg    grp_generic_round_float_s_fu_634_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call154;
reg    ap_block_pp0_stage0_11001_ignoreCallOp815;
wire    grp_generic_round_float_s_fu_643_ap_start;
wire    grp_generic_round_float_s_fu_643_ap_done;
wire    grp_generic_round_float_s_fu_643_ap_idle;
wire    grp_generic_round_float_s_fu_643_ap_ready;
reg    grp_generic_round_float_s_fu_643_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call201;
reg    ap_block_pp0_stage0_11001_ignoreCallOp817;
wire    grp_generic_round_float_s_fu_652_ap_start;
wire    grp_generic_round_float_s_fu_652_ap_done;
wire    grp_generic_round_float_s_fu_652_ap_idle;
wire    grp_generic_round_float_s_fu_652_ap_ready;
reg    grp_generic_round_float_s_fu_652_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call248;
reg    ap_block_pp0_stage0_11001_ignoreCallOp819;
wire    grp_generic_round_float_s_fu_661_ap_start;
wire    grp_generic_round_float_s_fu_661_ap_done;
wire    grp_generic_round_float_s_fu_661_ap_idle;
wire    grp_generic_round_float_s_fu_661_ap_ready;
reg    grp_generic_round_float_s_fu_661_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call295;
reg    ap_block_pp0_stage0_11001_ignoreCallOp821;
wire    grp_generic_round_float_s_fu_670_ap_start;
wire    grp_generic_round_float_s_fu_670_ap_done;
wire    grp_generic_round_float_s_fu_670_ap_idle;
wire    grp_generic_round_float_s_fu_670_ap_ready;
reg    grp_generic_round_float_s_fu_670_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call342;
reg    ap_block_pp0_stage0_11001_ignoreCallOp823;
wire    grp_generic_round_float_s_fu_679_ap_start;
wire    grp_generic_round_float_s_fu_679_ap_done;
wire    grp_generic_round_float_s_fu_679_ap_idle;
wire    grp_generic_round_float_s_fu_679_ap_ready;
reg    grp_generic_round_float_s_fu_679_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call389;
reg    ap_block_pp0_stage0_11001_ignoreCallOp825;
wire    grp_generic_round_float_s_fu_688_ap_start;
wire    grp_generic_round_float_s_fu_688_ap_done;
wire    grp_generic_round_float_s_fu_688_ap_idle;
wire    grp_generic_round_float_s_fu_688_ap_ready;
reg    grp_generic_round_float_s_fu_688_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call436;
reg    ap_block_pp0_stage0_11001_ignoreCallOp827;
wire    grp_generic_round_float_s_fu_697_ap_start;
wire    grp_generic_round_float_s_fu_697_ap_done;
wire    grp_generic_round_float_s_fu_697_ap_idle;
wire    grp_generic_round_float_s_fu_697_ap_ready;
reg    grp_generic_round_float_s_fu_697_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call483;
reg    ap_block_pp0_stage0_11001_ignoreCallOp829;
wire    grp_generic_round_float_s_fu_706_ap_start;
wire    grp_generic_round_float_s_fu_706_ap_done;
wire    grp_generic_round_float_s_fu_706_ap_idle;
wire    grp_generic_round_float_s_fu_706_ap_ready;
reg    grp_generic_round_float_s_fu_706_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call530;
reg    ap_block_pp0_stage0_11001_ignoreCallOp831;
wire    grp_generic_round_float_s_fu_715_ap_start;
wire    grp_generic_round_float_s_fu_715_ap_done;
wire    grp_generic_round_float_s_fu_715_ap_idle;
wire    grp_generic_round_float_s_fu_715_ap_ready;
reg    grp_generic_round_float_s_fu_715_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call577;
reg    ap_block_pp0_stage0_11001_ignoreCallOp833;
wire    grp_generic_round_float_s_fu_724_ap_start;
wire    grp_generic_round_float_s_fu_724_ap_done;
wire    grp_generic_round_float_s_fu_724_ap_idle;
wire    grp_generic_round_float_s_fu_724_ap_ready;
reg    grp_generic_round_float_s_fu_724_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call624;
reg    ap_block_pp0_stage0_11001_ignoreCallOp835;
wire    grp_generic_round_float_s_fu_733_ap_start;
wire    grp_generic_round_float_s_fu_733_ap_done;
wire    grp_generic_round_float_s_fu_733_ap_idle;
wire    grp_generic_round_float_s_fu_733_ap_ready;
reg    grp_generic_round_float_s_fu_733_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call671;
reg    ap_block_pp0_stage0_11001_ignoreCallOp837;
wire    grp_generic_round_float_s_fu_742_ap_start;
wire    grp_generic_round_float_s_fu_742_ap_done;
wire    grp_generic_round_float_s_fu_742_ap_idle;
wire    grp_generic_round_float_s_fu_742_ap_ready;
reg    grp_generic_round_float_s_fu_742_ap_ce;
reg    ap_block_state38_pp0_stage0_iter37_ignore_call718;
reg    ap_block_pp0_stage0_11001_ignoreCallOp839;
reg    grp_generic_round_float_s_fu_607_ap_start_reg;
wire    ap_block_pp0_stage0_ignoreCallOp809;
reg    grp_generic_round_float_s_fu_616_ap_start_reg;
reg   [31:0] grp_fu_820_p2;
wire    ap_block_pp0_stage0_ignoreCallOp811;
reg    grp_generic_round_float_s_fu_625_ap_start_reg;
reg   [31:0] grp_fu_825_p2;
wire    ap_block_pp0_stage0_ignoreCallOp813;
reg    grp_generic_round_float_s_fu_634_ap_start_reg;
reg   [31:0] grp_fu_830_p2;
wire    ap_block_pp0_stage0_ignoreCallOp815;
reg    grp_generic_round_float_s_fu_643_ap_start_reg;
reg   [31:0] grp_fu_835_p2;
wire    ap_block_pp0_stage0_ignoreCallOp817;
reg    grp_generic_round_float_s_fu_652_ap_start_reg;
reg   [31:0] grp_fu_840_p2;
wire    ap_block_pp0_stage0_ignoreCallOp819;
reg    grp_generic_round_float_s_fu_661_ap_start_reg;
reg   [31:0] grp_fu_845_p2;
wire    ap_block_pp0_stage0_ignoreCallOp821;
reg    grp_generic_round_float_s_fu_670_ap_start_reg;
reg   [31:0] grp_fu_850_p2;
wire    ap_block_pp0_stage0_ignoreCallOp823;
reg    grp_generic_round_float_s_fu_679_ap_start_reg;
reg   [31:0] grp_fu_855_p2;
wire    ap_block_pp0_stage0_ignoreCallOp825;
reg    grp_generic_round_float_s_fu_688_ap_start_reg;
reg   [31:0] grp_fu_860_p2;
wire    ap_block_pp0_stage0_ignoreCallOp827;
reg    grp_generic_round_float_s_fu_697_ap_start_reg;
reg   [31:0] grp_fu_865_p2;
wire    ap_block_pp0_stage0_ignoreCallOp829;
reg    grp_generic_round_float_s_fu_706_ap_start_reg;
reg   [31:0] grp_fu_870_p2;
wire    ap_block_pp0_stage0_ignoreCallOp831;
reg    grp_generic_round_float_s_fu_715_ap_start_reg;
reg   [31:0] grp_fu_875_p2;
wire    ap_block_pp0_stage0_ignoreCallOp833;
reg    grp_generic_round_float_s_fu_724_ap_start_reg;
reg   [31:0] grp_fu_880_p2;
wire    ap_block_pp0_stage0_ignoreCallOp835;
reg    grp_generic_round_float_s_fu_733_ap_start_reg;
reg   [31:0] grp_fu_885_p2;
wire    ap_block_pp0_stage0_ignoreCallOp837;
reg    grp_generic_round_float_s_fu_742_ap_start_reg;
reg   [31:0] grp_fu_890_p2;
wire    ap_block_pp0_stage0_ignoreCallOp839;
wire   [63:0] zext_ln823_fu_989_p1;
reg   [11:0] k_1_fu_196;
wire   [11:0] add_ln823_fu_977_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_k;
wire   [64:0] zext_ln150_fu_4849_p1;
reg    ap_block_pp0_stage0_01001;
reg    output_stream_s_write_local;
reg    input_buffer_ce0_local;
reg    input_buffer_1_ce0_local;
reg    input_buffer_2_ce0_local;
reg    input_buffer_3_ce0_local;
reg    input_buffer_4_ce0_local;
reg    input_buffer_5_ce0_local;
reg    input_buffer_6_ce0_local;
reg    input_buffer_7_ce0_local;
reg    input_buffer_8_ce0_local;
reg    input_buffer_9_ce0_local;
reg    input_buffer_10_ce0_local;
reg    input_buffer_11_ce0_local;
reg    input_buffer_12_ce0_local;
reg    input_buffer_13_ce0_local;
reg    input_buffer_14_ce0_local;
reg    input_buffer_15_ce0_local;
reg   [31:0] grp_fu_755_p0;
reg   [31:0] grp_fu_755_p1;
reg   [31:0] grp_fu_759_p0;
reg   [31:0] grp_fu_759_p1;
reg   [31:0] grp_fu_763_p0;
reg   [31:0] grp_fu_763_p1;
reg   [31:0] grp_fu_767_p0;
reg   [31:0] grp_fu_767_p1;
reg   [31:0] grp_fu_771_p0;
reg   [31:0] grp_fu_771_p1;
reg   [31:0] grp_fu_775_p0;
reg   [31:0] grp_fu_775_p1;
reg   [31:0] grp_fu_779_p0;
reg   [31:0] grp_fu_779_p1;
reg   [31:0] grp_fu_783_p0;
reg   [31:0] grp_fu_783_p1;
reg   [31:0] grp_fu_787_p0;
reg   [31:0] grp_fu_787_p1;
reg   [31:0] grp_fu_791_p0;
reg   [31:0] grp_fu_791_p1;
reg   [31:0] grp_fu_795_p0;
reg   [31:0] grp_fu_795_p1;
reg   [31:0] grp_fu_799_p0;
reg   [31:0] grp_fu_799_p1;
reg   [31:0] grp_fu_803_p0;
reg   [31:0] grp_fu_803_p1;
reg   [31:0] grp_fu_807_p0;
reg   [31:0] grp_fu_807_p1;
reg   [31:0] grp_fu_811_p0;
reg   [31:0] grp_fu_811_p1;
reg   [31:0] grp_fu_820_p0;
reg   [31:0] grp_fu_820_p1;
reg   [31:0] grp_fu_825_p0;
reg   [31:0] grp_fu_825_p1;
reg   [31:0] grp_fu_830_p0;
reg   [31:0] grp_fu_830_p1;
reg   [31:0] grp_fu_835_p0;
reg   [31:0] grp_fu_835_p1;
reg   [31:0] grp_fu_840_p0;
reg   [31:0] grp_fu_840_p1;
reg   [31:0] grp_fu_845_p0;
reg   [31:0] grp_fu_845_p1;
reg   [31:0] grp_fu_850_p0;
reg   [31:0] grp_fu_850_p1;
reg   [31:0] grp_fu_855_p0;
reg   [31:0] grp_fu_855_p1;
reg   [31:0] grp_fu_860_p0;
reg   [31:0] grp_fu_860_p1;
reg   [31:0] grp_fu_865_p0;
reg   [31:0] grp_fu_865_p1;
reg   [31:0] grp_fu_870_p0;
reg   [31:0] grp_fu_870_p1;
reg   [31:0] grp_fu_875_p0;
reg   [31:0] grp_fu_875_p1;
reg   [31:0] grp_fu_880_p0;
reg   [31:0] grp_fu_880_p1;
reg   [31:0] grp_fu_885_p0;
reg   [31:0] grp_fu_885_p1;
reg   [31:0] grp_fu_890_p0;
reg   [31:0] grp_fu_890_p1;
wire   [31:0] bitcast_ln725_fu_1293_p1;
wire   [7:0] tmp_s_fu_1308_p4;
wire   [22:0] trunc_ln295_1_fu_1322_p1;
wire   [30:0] trunc_ln295_fu_1296_p1;
wire   [8:0] zext_ln295_fu_1318_p1;
wire  signed [8:0] sub_ln295_fu_1344_p2;
wire   [23:0] zext_ln295_1_cast_fu_1330_p3;
wire   [31:0] zext_ln295_1_fu_1388_p1;
wire  signed [31:0] sext_ln295_fu_1350_p1;
wire   [31:0] lshr_ln295_fu_1392_p2;
wire   [31:0] bitcast_ln725_1_fu_1402_p1;
wire   [7:0] tmp_79_fu_1417_p4;
wire   [22:0] trunc_ln295_6_fu_1431_p1;
wire   [30:0] trunc_ln295_5_fu_1405_p1;
wire   [8:0] zext_ln295_3_fu_1427_p1;
wire  signed [8:0] sub_ln295_3_fu_1453_p2;
wire   [23:0] zext_ln295_4_cast_fu_1439_p3;
wire   [31:0] zext_ln295_4_fu_1497_p1;
wire  signed [31:0] sext_ln295_2_fu_1459_p1;
wire   [31:0] lshr_ln295_1_fu_1501_p2;
wire   [31:0] bitcast_ln725_2_fu_1511_p1;
wire   [7:0] tmp_80_fu_1526_p4;
wire   [22:0] trunc_ln295_11_fu_1540_p1;
wire   [30:0] trunc_ln295_10_fu_1514_p1;
wire   [8:0] zext_ln295_6_fu_1536_p1;
wire  signed [8:0] sub_ln295_6_fu_1562_p2;
wire   [23:0] zext_ln295_7_cast_fu_1548_p3;
wire   [31:0] zext_ln295_7_fu_1606_p1;
wire  signed [31:0] sext_ln295_4_fu_1568_p1;
wire   [31:0] lshr_ln295_2_fu_1610_p2;
wire   [31:0] bitcast_ln725_3_fu_1620_p1;
wire   [7:0] tmp_81_fu_1635_p4;
wire   [22:0] trunc_ln295_16_fu_1649_p1;
wire   [30:0] trunc_ln295_15_fu_1623_p1;
wire   [8:0] zext_ln295_9_fu_1645_p1;
wire  signed [8:0] sub_ln295_9_fu_1671_p2;
wire   [23:0] zext_ln295_10_cast_fu_1657_p3;
wire   [31:0] zext_ln295_10_fu_1715_p1;
wire  signed [31:0] sext_ln295_6_fu_1677_p1;
wire   [31:0] lshr_ln295_3_fu_1719_p2;
wire   [31:0] bitcast_ln725_4_fu_1729_p1;
wire   [7:0] tmp_82_fu_1744_p4;
wire   [22:0] trunc_ln295_21_fu_1758_p1;
wire   [30:0] trunc_ln295_20_fu_1732_p1;
wire   [8:0] zext_ln295_12_fu_1754_p1;
wire  signed [8:0] sub_ln295_12_fu_1780_p2;
wire   [23:0] zext_ln295_13_cast_fu_1766_p3;
wire   [31:0] zext_ln295_13_fu_1824_p1;
wire  signed [31:0] sext_ln295_8_fu_1786_p1;
wire   [31:0] lshr_ln295_4_fu_1828_p2;
wire   [31:0] bitcast_ln725_5_fu_1838_p1;
wire   [7:0] tmp_83_fu_1853_p4;
wire   [22:0] trunc_ln295_26_fu_1867_p1;
wire   [30:0] trunc_ln295_25_fu_1841_p1;
wire   [8:0] zext_ln295_15_fu_1863_p1;
wire  signed [8:0] sub_ln295_15_fu_1889_p2;
wire   [23:0] zext_ln295_16_cast_fu_1875_p3;
wire   [31:0] zext_ln295_16_fu_1933_p1;
wire  signed [31:0] sext_ln295_10_fu_1895_p1;
wire   [31:0] lshr_ln295_5_fu_1937_p2;
wire   [31:0] bitcast_ln725_6_fu_1947_p1;
wire   [7:0] tmp_84_fu_1962_p4;
wire   [22:0] trunc_ln295_31_fu_1976_p1;
wire   [30:0] trunc_ln295_30_fu_1950_p1;
wire   [8:0] zext_ln295_18_fu_1972_p1;
wire  signed [8:0] sub_ln295_18_fu_1998_p2;
wire   [23:0] zext_ln295_19_cast_fu_1984_p3;
wire   [31:0] zext_ln295_19_fu_2042_p1;
wire  signed [31:0] sext_ln295_12_fu_2004_p1;
wire   [31:0] lshr_ln295_6_fu_2046_p2;
wire   [31:0] bitcast_ln725_7_fu_2056_p1;
wire   [7:0] tmp_85_fu_2071_p4;
wire   [22:0] trunc_ln295_36_fu_2085_p1;
wire   [30:0] trunc_ln295_35_fu_2059_p1;
wire   [8:0] zext_ln295_21_fu_2081_p1;
wire  signed [8:0] sub_ln295_21_fu_2107_p2;
wire   [23:0] zext_ln295_22_cast_fu_2093_p3;
wire   [31:0] zext_ln295_22_fu_2151_p1;
wire  signed [31:0] sext_ln295_14_fu_2113_p1;
wire   [31:0] lshr_ln295_7_fu_2155_p2;
wire   [31:0] bitcast_ln725_8_fu_2165_p1;
wire   [7:0] tmp_86_fu_2180_p4;
wire   [22:0] trunc_ln295_41_fu_2194_p1;
wire   [30:0] trunc_ln295_40_fu_2168_p1;
wire   [8:0] zext_ln295_24_fu_2190_p1;
wire  signed [8:0] sub_ln295_24_fu_2216_p2;
wire   [23:0] zext_ln295_25_cast_fu_2202_p3;
wire   [31:0] zext_ln295_25_fu_2260_p1;
wire  signed [31:0] sext_ln295_16_fu_2222_p1;
wire   [31:0] lshr_ln295_8_fu_2264_p2;
wire   [31:0] bitcast_ln725_9_fu_2274_p1;
wire   [7:0] tmp_87_fu_2289_p4;
wire   [22:0] trunc_ln295_46_fu_2303_p1;
wire   [30:0] trunc_ln295_45_fu_2277_p1;
wire   [8:0] zext_ln295_27_fu_2299_p1;
wire  signed [8:0] sub_ln295_27_fu_2325_p2;
wire   [23:0] zext_ln295_28_cast_fu_2311_p3;
wire   [31:0] zext_ln295_28_fu_2369_p1;
wire  signed [31:0] sext_ln295_18_fu_2331_p1;
wire   [31:0] lshr_ln295_9_fu_2373_p2;
wire   [31:0] bitcast_ln725_10_fu_2383_p1;
wire   [7:0] tmp_88_fu_2398_p4;
wire   [22:0] trunc_ln295_51_fu_2412_p1;
wire   [30:0] trunc_ln295_50_fu_2386_p1;
wire   [8:0] zext_ln295_30_fu_2408_p1;
wire  signed [8:0] sub_ln295_30_fu_2434_p2;
wire   [23:0] zext_ln295_31_cast_fu_2420_p3;
wire   [31:0] zext_ln295_31_fu_2478_p1;
wire  signed [31:0] sext_ln295_20_fu_2440_p1;
wire   [31:0] lshr_ln295_10_fu_2482_p2;
wire   [31:0] bitcast_ln725_11_fu_2492_p1;
wire   [7:0] tmp_89_fu_2507_p4;
wire   [22:0] trunc_ln295_56_fu_2521_p1;
wire   [30:0] trunc_ln295_55_fu_2495_p1;
wire   [8:0] zext_ln295_33_fu_2517_p1;
wire  signed [8:0] sub_ln295_33_fu_2543_p2;
wire   [23:0] zext_ln295_34_cast_fu_2529_p3;
wire   [31:0] zext_ln295_34_fu_2587_p1;
wire  signed [31:0] sext_ln295_22_fu_2549_p1;
wire   [31:0] lshr_ln295_11_fu_2591_p2;
wire   [31:0] bitcast_ln725_12_fu_2601_p1;
wire   [7:0] tmp_90_fu_2616_p4;
wire   [22:0] trunc_ln295_61_fu_2630_p1;
wire   [30:0] trunc_ln295_60_fu_2604_p1;
wire   [8:0] zext_ln295_36_fu_2626_p1;
wire  signed [8:0] sub_ln295_36_fu_2652_p2;
wire   [23:0] zext_ln295_37_cast_fu_2638_p3;
wire   [31:0] zext_ln295_37_fu_2696_p1;
wire  signed [31:0] sext_ln295_24_fu_2658_p1;
wire   [31:0] lshr_ln295_12_fu_2700_p2;
wire   [31:0] bitcast_ln725_13_fu_2710_p1;
wire   [7:0] tmp_91_fu_2725_p4;
wire   [22:0] trunc_ln295_66_fu_2739_p1;
wire   [30:0] trunc_ln295_65_fu_2713_p1;
wire   [8:0] zext_ln295_39_fu_2735_p1;
wire  signed [8:0] sub_ln295_39_fu_2761_p2;
wire   [23:0] zext_ln295_40_cast_fu_2747_p3;
wire   [31:0] zext_ln295_40_fu_2805_p1;
wire  signed [31:0] sext_ln295_26_fu_2767_p1;
wire   [31:0] lshr_ln295_13_fu_2809_p2;
wire   [31:0] bitcast_ln725_14_fu_2819_p1;
wire   [7:0] tmp_92_fu_2834_p4;
wire   [22:0] trunc_ln295_71_fu_2848_p1;
wire   [30:0] trunc_ln295_70_fu_2822_p1;
wire   [8:0] zext_ln295_42_fu_2844_p1;
wire  signed [8:0] sub_ln295_42_fu_2870_p2;
wire   [23:0] zext_ln295_43_cast_fu_2856_p3;
wire   [31:0] zext_ln295_43_fu_2914_p1;
wire  signed [31:0] sext_ln295_28_fu_2876_p1;
wire   [31:0] lshr_ln295_14_fu_2918_p2;
wire   [31:0] bitcast_ln725_15_fu_2928_p1;
wire   [7:0] tmp_93_fu_2943_p4;
wire   [22:0] trunc_ln295_76_fu_2957_p1;
wire   [30:0] trunc_ln295_75_fu_2931_p1;
wire   [8:0] zext_ln295_45_fu_2953_p1;
wire  signed [8:0] sub_ln295_45_fu_2979_p2;
wire   [23:0] zext_ln295_46_cast_fu_2965_p3;
wire   [31:0] zext_ln295_46_fu_3023_p1;
wire  signed [31:0] sext_ln295_30_fu_2985_p1;
wire   [31:0] lshr_ln295_15_fu_3027_p2;
wire   [31:0] zext_ln295_2_fu_3045_p1;
wire  signed [31:0] sext_ln295_1_fu_3037_p1;
wire   [31:0] shl_ln295_fu_3048_p2;
wire   [0:0] xor_ln295_fu_3058_p2;
wire   [0:0] or_ln295_fu_3068_p2;
wire   [0:0] xor_ln295_1_fu_3072_p2;
wire   [0:0] and_ln295_1_fu_3078_p2;
wire   [0:0] or_ln295_1_fu_3088_p2;
wire   [0:0] icmp_ln295_4_fu_3040_p2;
wire   [0:0] xor_ln295_2_fu_3093_p2;
wire   [0:0] and_ln295_fu_3063_p2;
wire   [0:0] and_ln295_2_fu_3083_p2;
wire   [0:0] and_ln295_3_fu_3099_p2;
wire   [3:0] ref_tmp_fu_3115_p6;
wire   [3:0] ref_tmp_fu_3115_p9;
wire   [2:0] ref_tmp_fu_3115_p10;
wire   [31:0] zext_ln295_5_fu_3145_p1;
wire  signed [31:0] sext_ln295_3_fu_3137_p1;
wire   [31:0] shl_ln295_1_fu_3148_p2;
wire   [0:0] xor_ln295_3_fu_3158_p2;
wire   [0:0] or_ln295_2_fu_3168_p2;
wire   [0:0] xor_ln295_4_fu_3172_p2;
wire   [0:0] and_ln295_5_fu_3178_p2;
wire   [0:0] or_ln295_3_fu_3188_p2;
wire   [0:0] icmp_ln295_9_fu_3140_p2;
wire   [0:0] xor_ln295_5_fu_3193_p2;
wire   [0:0] and_ln295_4_fu_3163_p2;
wire   [0:0] and_ln295_6_fu_3183_p2;
wire   [0:0] and_ln295_7_fu_3199_p2;
wire   [3:0] ref_tmp99_2_fu_3215_p6;
wire   [3:0] ref_tmp99_2_fu_3215_p9;
wire   [2:0] ref_tmp99_2_fu_3215_p10;
wire   [31:0] zext_ln295_8_fu_3245_p1;
wire  signed [31:0] sext_ln295_5_fu_3237_p1;
wire   [31:0] shl_ln295_2_fu_3248_p2;
wire   [0:0] xor_ln295_6_fu_3258_p2;
wire   [0:0] or_ln295_4_fu_3268_p2;
wire   [0:0] xor_ln295_7_fu_3272_p2;
wire   [0:0] and_ln295_9_fu_3278_p2;
wire   [0:0] or_ln295_5_fu_3288_p2;
wire   [0:0] icmp_ln295_14_fu_3240_p2;
wire   [0:0] xor_ln295_8_fu_3293_p2;
wire   [0:0] and_ln295_8_fu_3263_p2;
wire   [0:0] and_ln295_10_fu_3283_p2;
wire   [0:0] and_ln295_11_fu_3299_p2;
wire   [3:0] ref_tmp99_4_fu_3315_p6;
wire   [3:0] ref_tmp99_4_fu_3315_p9;
wire   [2:0] ref_tmp99_4_fu_3315_p10;
wire   [31:0] zext_ln295_11_fu_3345_p1;
wire  signed [31:0] sext_ln295_7_fu_3337_p1;
wire   [31:0] shl_ln295_3_fu_3348_p2;
wire   [0:0] xor_ln295_9_fu_3358_p2;
wire   [0:0] or_ln295_6_fu_3368_p2;
wire   [0:0] xor_ln295_10_fu_3372_p2;
wire   [0:0] and_ln295_13_fu_3378_p2;
wire   [0:0] or_ln295_7_fu_3388_p2;
wire   [0:0] icmp_ln295_19_fu_3340_p2;
wire   [0:0] xor_ln295_11_fu_3393_p2;
wire   [0:0] and_ln295_12_fu_3363_p2;
wire   [0:0] and_ln295_14_fu_3383_p2;
wire   [0:0] and_ln295_15_fu_3399_p2;
wire   [3:0] ref_tmp99_6_fu_3415_p6;
wire   [3:0] ref_tmp99_6_fu_3415_p9;
wire   [2:0] ref_tmp99_6_fu_3415_p10;
wire   [31:0] zext_ln295_14_fu_3445_p1;
wire  signed [31:0] sext_ln295_9_fu_3437_p1;
wire   [31:0] shl_ln295_4_fu_3448_p2;
wire   [0:0] xor_ln295_12_fu_3458_p2;
wire   [0:0] or_ln295_8_fu_3468_p2;
wire   [0:0] xor_ln295_13_fu_3472_p2;
wire   [0:0] and_ln295_17_fu_3478_p2;
wire   [0:0] or_ln295_9_fu_3488_p2;
wire   [0:0] icmp_ln295_24_fu_3440_p2;
wire   [0:0] xor_ln295_14_fu_3493_p2;
wire   [0:0] and_ln295_16_fu_3463_p2;
wire   [0:0] and_ln295_18_fu_3483_p2;
wire   [0:0] and_ln295_19_fu_3499_p2;
wire   [3:0] ref_tmp99_8_fu_3515_p6;
wire   [3:0] ref_tmp99_8_fu_3515_p9;
wire   [2:0] ref_tmp99_8_fu_3515_p10;
wire   [31:0] zext_ln295_17_fu_3545_p1;
wire  signed [31:0] sext_ln295_11_fu_3537_p1;
wire   [31:0] shl_ln295_5_fu_3548_p2;
wire   [0:0] xor_ln295_15_fu_3558_p2;
wire   [0:0] or_ln295_10_fu_3568_p2;
wire   [0:0] xor_ln295_16_fu_3572_p2;
wire   [0:0] and_ln295_21_fu_3578_p2;
wire   [0:0] or_ln295_11_fu_3588_p2;
wire   [0:0] icmp_ln295_29_fu_3540_p2;
wire   [0:0] xor_ln295_17_fu_3593_p2;
wire   [0:0] and_ln295_20_fu_3563_p2;
wire   [0:0] and_ln295_22_fu_3583_p2;
wire   [0:0] and_ln295_23_fu_3599_p2;
wire   [3:0] ref_tmp99_s_fu_3615_p6;
wire   [3:0] ref_tmp99_s_fu_3615_p9;
wire   [2:0] ref_tmp99_s_fu_3615_p10;
wire   [31:0] zext_ln295_20_fu_3645_p1;
wire  signed [31:0] sext_ln295_13_fu_3637_p1;
wire   [31:0] shl_ln295_6_fu_3648_p2;
wire   [0:0] xor_ln295_18_fu_3658_p2;
wire   [0:0] or_ln295_12_fu_3668_p2;
wire   [0:0] xor_ln295_19_fu_3672_p2;
wire   [0:0] and_ln295_25_fu_3678_p2;
wire   [0:0] or_ln295_13_fu_3688_p2;
wire   [0:0] icmp_ln295_34_fu_3640_p2;
wire   [0:0] xor_ln295_20_fu_3693_p2;
wire   [0:0] and_ln295_24_fu_3663_p2;
wire   [0:0] and_ln295_26_fu_3683_p2;
wire   [0:0] and_ln295_27_fu_3699_p2;
wire   [3:0] ref_tmp99_1_fu_3715_p6;
wire   [3:0] ref_tmp99_1_fu_3715_p9;
wire   [2:0] ref_tmp99_1_fu_3715_p10;
wire   [31:0] zext_ln295_23_fu_3745_p1;
wire  signed [31:0] sext_ln295_15_fu_3737_p1;
wire   [31:0] shl_ln295_7_fu_3748_p2;
wire   [0:0] xor_ln295_21_fu_3758_p2;
wire   [0:0] or_ln295_14_fu_3768_p2;
wire   [0:0] xor_ln295_22_fu_3772_p2;
wire   [0:0] and_ln295_29_fu_3778_p2;
wire   [0:0] or_ln295_15_fu_3788_p2;
wire   [0:0] icmp_ln295_39_fu_3740_p2;
wire   [0:0] xor_ln295_23_fu_3793_p2;
wire   [0:0] and_ln295_28_fu_3763_p2;
wire   [0:0] and_ln295_30_fu_3783_p2;
wire   [0:0] and_ln295_31_fu_3799_p2;
wire   [3:0] ref_tmp99_3_fu_3815_p6;
wire   [3:0] ref_tmp99_3_fu_3815_p9;
wire   [2:0] ref_tmp99_3_fu_3815_p10;
wire   [31:0] zext_ln295_26_fu_3845_p1;
wire  signed [31:0] sext_ln295_17_fu_3837_p1;
wire   [31:0] shl_ln295_8_fu_3848_p2;
wire   [0:0] xor_ln295_24_fu_3858_p2;
wire   [0:0] or_ln295_16_fu_3868_p2;
wire   [0:0] xor_ln295_25_fu_3872_p2;
wire   [0:0] and_ln295_33_fu_3878_p2;
wire   [0:0] or_ln295_17_fu_3888_p2;
wire   [0:0] icmp_ln295_44_fu_3840_p2;
wire   [0:0] xor_ln295_26_fu_3893_p2;
wire   [0:0] and_ln295_32_fu_3863_p2;
wire   [0:0] and_ln295_34_fu_3883_p2;
wire   [0:0] and_ln295_35_fu_3899_p2;
wire   [3:0] ref_tmp99_5_fu_3915_p6;
wire   [3:0] ref_tmp99_5_fu_3915_p9;
wire   [2:0] ref_tmp99_5_fu_3915_p10;
wire   [31:0] zext_ln295_29_fu_3945_p1;
wire  signed [31:0] sext_ln295_19_fu_3937_p1;
wire   [31:0] shl_ln295_9_fu_3948_p2;
wire   [0:0] xor_ln295_27_fu_3958_p2;
wire   [0:0] or_ln295_18_fu_3968_p2;
wire   [0:0] xor_ln295_28_fu_3972_p2;
wire   [0:0] and_ln295_37_fu_3978_p2;
wire   [0:0] or_ln295_19_fu_3988_p2;
wire   [0:0] icmp_ln295_49_fu_3940_p2;
wire   [0:0] xor_ln295_29_fu_3993_p2;
wire   [0:0] and_ln295_36_fu_3963_p2;
wire   [0:0] and_ln295_38_fu_3983_p2;
wire   [0:0] and_ln295_39_fu_3999_p2;
wire   [3:0] ref_tmp99_7_fu_4015_p6;
wire   [3:0] ref_tmp99_7_fu_4015_p9;
wire   [2:0] ref_tmp99_7_fu_4015_p10;
wire   [31:0] zext_ln295_32_fu_4045_p1;
wire  signed [31:0] sext_ln295_21_fu_4037_p1;
wire   [31:0] shl_ln295_10_fu_4048_p2;
wire   [0:0] xor_ln295_30_fu_4058_p2;
wire   [0:0] or_ln295_20_fu_4068_p2;
wire   [0:0] xor_ln295_31_fu_4072_p2;
wire   [0:0] and_ln295_41_fu_4078_p2;
wire   [0:0] or_ln295_21_fu_4088_p2;
wire   [0:0] icmp_ln295_54_fu_4040_p2;
wire   [0:0] xor_ln295_32_fu_4093_p2;
wire   [0:0] and_ln295_40_fu_4063_p2;
wire   [0:0] and_ln295_42_fu_4083_p2;
wire   [0:0] and_ln295_43_fu_4099_p2;
wire   [3:0] ref_tmp99_9_fu_4115_p6;
wire   [3:0] ref_tmp99_9_fu_4115_p9;
wire   [2:0] ref_tmp99_9_fu_4115_p10;
wire   [31:0] zext_ln295_35_fu_4145_p1;
wire  signed [31:0] sext_ln295_23_fu_4137_p1;
wire   [31:0] shl_ln295_11_fu_4148_p2;
wire   [0:0] xor_ln295_33_fu_4158_p2;
wire   [0:0] or_ln295_22_fu_4168_p2;
wire   [0:0] xor_ln295_34_fu_4172_p2;
wire   [0:0] and_ln295_45_fu_4178_p2;
wire   [0:0] or_ln295_23_fu_4188_p2;
wire   [0:0] icmp_ln295_59_fu_4140_p2;
wire   [0:0] xor_ln295_35_fu_4193_p2;
wire   [0:0] and_ln295_44_fu_4163_p2;
wire   [0:0] and_ln295_46_fu_4183_p2;
wire   [0:0] and_ln295_47_fu_4199_p2;
wire   [3:0] ref_tmp99_10_fu_4215_p6;
wire   [3:0] ref_tmp99_10_fu_4215_p9;
wire   [2:0] ref_tmp99_10_fu_4215_p10;
wire   [31:0] zext_ln295_38_fu_4245_p1;
wire  signed [31:0] sext_ln295_25_fu_4237_p1;
wire   [31:0] shl_ln295_12_fu_4248_p2;
wire   [0:0] xor_ln295_36_fu_4258_p2;
wire   [0:0] or_ln295_24_fu_4268_p2;
wire   [0:0] xor_ln295_37_fu_4272_p2;
wire   [0:0] and_ln295_49_fu_4278_p2;
wire   [0:0] or_ln295_25_fu_4288_p2;
wire   [0:0] icmp_ln295_64_fu_4240_p2;
wire   [0:0] xor_ln295_38_fu_4293_p2;
wire   [0:0] and_ln295_48_fu_4263_p2;
wire   [0:0] and_ln295_50_fu_4283_p2;
wire   [0:0] and_ln295_51_fu_4299_p2;
wire   [3:0] ref_tmp99_11_fu_4315_p6;
wire   [3:0] ref_tmp99_11_fu_4315_p9;
wire   [2:0] ref_tmp99_11_fu_4315_p10;
wire   [31:0] zext_ln295_41_fu_4345_p1;
wire  signed [31:0] sext_ln295_27_fu_4337_p1;
wire   [31:0] shl_ln295_13_fu_4348_p2;
wire   [0:0] xor_ln295_39_fu_4358_p2;
wire   [0:0] or_ln295_26_fu_4368_p2;
wire   [0:0] xor_ln295_40_fu_4372_p2;
wire   [0:0] and_ln295_53_fu_4378_p2;
wire   [0:0] or_ln295_27_fu_4388_p2;
wire   [0:0] icmp_ln295_69_fu_4340_p2;
wire   [0:0] xor_ln295_41_fu_4393_p2;
wire   [0:0] and_ln295_52_fu_4363_p2;
wire   [0:0] and_ln295_54_fu_4383_p2;
wire   [0:0] and_ln295_55_fu_4399_p2;
wire   [3:0] ref_tmp99_12_fu_4415_p6;
wire   [3:0] ref_tmp99_12_fu_4415_p9;
wire   [2:0] ref_tmp99_12_fu_4415_p10;
wire   [31:0] zext_ln295_44_fu_4445_p1;
wire  signed [31:0] sext_ln295_29_fu_4437_p1;
wire   [31:0] shl_ln295_14_fu_4448_p2;
wire   [0:0] xor_ln295_42_fu_4458_p2;
wire   [0:0] or_ln295_28_fu_4468_p2;
wire   [0:0] xor_ln295_43_fu_4472_p2;
wire   [0:0] and_ln295_57_fu_4478_p2;
wire   [0:0] or_ln295_29_fu_4488_p2;
wire   [0:0] icmp_ln295_74_fu_4440_p2;
wire   [0:0] xor_ln295_44_fu_4493_p2;
wire   [0:0] and_ln295_56_fu_4463_p2;
wire   [0:0] and_ln295_58_fu_4483_p2;
wire   [0:0] and_ln295_59_fu_4499_p2;
wire   [3:0] ref_tmp99_13_fu_4515_p6;
wire   [3:0] ref_tmp99_13_fu_4515_p9;
wire   [2:0] ref_tmp99_13_fu_4515_p10;
wire   [31:0] zext_ln295_47_fu_4545_p1;
wire  signed [31:0] sext_ln295_31_fu_4537_p1;
wire   [31:0] shl_ln295_15_fu_4548_p2;
wire   [0:0] xor_ln295_45_fu_4558_p2;
wire   [0:0] or_ln295_30_fu_4568_p2;
wire   [0:0] xor_ln295_46_fu_4572_p2;
wire   [0:0] and_ln295_61_fu_4578_p2;
wire   [0:0] or_ln295_31_fu_4588_p2;
wire   [0:0] icmp_ln295_79_fu_4540_p2;
wire   [0:0] xor_ln295_47_fu_4593_p2;
wire   [0:0] and_ln295_60_fu_4563_p2;
wire   [0:0] and_ln295_62_fu_4583_p2;
wire   [0:0] and_ln295_63_fu_4599_p2;
wire   [3:0] ref_tmp99_14_fu_4615_p6;
wire   [3:0] ref_tmp99_14_fu_4615_p9;
wire   [2:0] ref_tmp99_14_fu_4615_p10;
wire   [3:0] sub_ln295_2_fu_4637_p2;
wire   [3:0] sub_ln295_5_fu_4648_p2;
wire   [3:0] sub_ln295_8_fu_4659_p2;
wire   [3:0] sub_ln295_11_fu_4670_p2;
wire   [3:0] sub_ln295_14_fu_4681_p2;
wire   [3:0] sub_ln295_17_fu_4692_p2;
wire   [3:0] sub_ln295_20_fu_4703_p2;
wire   [3:0] sub_ln295_23_fu_4714_p2;
wire   [3:0] sub_ln295_26_fu_4725_p2;
wire   [3:0] sub_ln295_29_fu_4736_p2;
wire   [3:0] sub_ln295_32_fu_4747_p2;
wire   [3:0] sub_ln295_35_fu_4758_p2;
wire   [3:0] sub_ln295_38_fu_4769_p2;
wire   [3:0] sub_ln295_41_fu_4780_p2;
wire   [3:0] sub_ln295_44_fu_4791_p2;
wire   [3:0] sub_ln295_47_fu_4802_p2;
wire   [3:0] select_ln295_15_fu_4807_p3;
wire   [3:0] select_ln295_14_fu_4796_p3;
wire   [3:0] select_ln295_13_fu_4785_p3;
wire   [3:0] select_ln295_12_fu_4774_p3;
wire   [3:0] select_ln295_11_fu_4763_p3;
wire   [3:0] select_ln295_10_fu_4752_p3;
wire   [3:0] select_ln295_9_fu_4741_p3;
wire   [3:0] select_ln295_8_fu_4730_p3;
wire   [3:0] select_ln295_7_fu_4719_p3;
wire   [3:0] select_ln295_6_fu_4708_p3;
wire   [3:0] select_ln295_5_fu_4697_p3;
wire   [3:0] select_ln295_4_fu_4686_p3;
wire   [3:0] select_ln295_3_fu_4675_p3;
wire   [3:0] select_ln295_2_fu_4664_p3;
wire   [3:0] select_ln295_1_fu_4653_p3;
wire   [3:0] select_ln295_fu_4642_p3;
wire   [63:0] or_ln150_s_fu_4813_p17;
reg    grp_fu_751_ce;
reg    grp_fu_755_ce;
wire   [31:0] pre_grp_fu_755_p2;
reg   [31:0] pre_grp_fu_755_p2_reg;
reg    grp_fu_759_ce;
wire   [31:0] pre_grp_fu_759_p2;
reg   [31:0] pre_grp_fu_759_p2_reg;
reg    grp_fu_763_ce;
wire   [31:0] pre_grp_fu_763_p2;
reg   [31:0] pre_grp_fu_763_p2_reg;
reg    grp_fu_767_ce;
wire   [31:0] pre_grp_fu_767_p2;
reg   [31:0] pre_grp_fu_767_p2_reg;
reg    grp_fu_771_ce;
wire   [31:0] pre_grp_fu_771_p2;
reg   [31:0] pre_grp_fu_771_p2_reg;
reg    grp_fu_775_ce;
wire   [31:0] pre_grp_fu_775_p2;
reg   [31:0] pre_grp_fu_775_p2_reg;
reg    grp_fu_779_ce;
wire   [31:0] pre_grp_fu_779_p2;
reg   [31:0] pre_grp_fu_779_p2_reg;
reg    grp_fu_783_ce;
wire   [31:0] pre_grp_fu_783_p2;
reg   [31:0] pre_grp_fu_783_p2_reg;
reg    grp_fu_787_ce;
wire   [31:0] pre_grp_fu_787_p2;
reg   [31:0] pre_grp_fu_787_p2_reg;
reg    grp_fu_791_ce;
wire   [31:0] pre_grp_fu_791_p2;
reg   [31:0] pre_grp_fu_791_p2_reg;
reg    grp_fu_795_ce;
wire   [31:0] pre_grp_fu_795_p2;
reg   [31:0] pre_grp_fu_795_p2_reg;
reg    grp_fu_799_ce;
wire   [31:0] pre_grp_fu_799_p2;
reg   [31:0] pre_grp_fu_799_p2_reg;
reg    grp_fu_803_ce;
wire   [31:0] pre_grp_fu_803_p2;
reg   [31:0] pre_grp_fu_803_p2_reg;
reg    grp_fu_807_ce;
wire   [31:0] pre_grp_fu_807_p2;
reg   [31:0] pre_grp_fu_807_p2_reg;
reg    grp_fu_811_ce;
wire   [31:0] pre_grp_fu_811_p2;
reg   [31:0] pre_grp_fu_811_p2_reg;
reg    grp_fu_815_ce;
reg    grp_fu_820_ce;
wire   [31:0] pre_grp_fu_820_p2;
reg   [31:0] pre_grp_fu_820_p2_reg;
reg    grp_fu_825_ce;
wire   [31:0] pre_grp_fu_825_p2;
reg   [31:0] pre_grp_fu_825_p2_reg;
reg    grp_fu_830_ce;
wire   [31:0] pre_grp_fu_830_p2;
reg   [31:0] pre_grp_fu_830_p2_reg;
reg    grp_fu_835_ce;
wire   [31:0] pre_grp_fu_835_p2;
reg   [31:0] pre_grp_fu_835_p2_reg;
reg    grp_fu_840_ce;
wire   [31:0] pre_grp_fu_840_p2;
reg   [31:0] pre_grp_fu_840_p2_reg;
reg    grp_fu_845_ce;
wire   [31:0] pre_grp_fu_845_p2;
reg   [31:0] pre_grp_fu_845_p2_reg;
reg    grp_fu_850_ce;
wire   [31:0] pre_grp_fu_850_p2;
reg   [31:0] pre_grp_fu_850_p2_reg;
reg    grp_fu_855_ce;
wire   [31:0] pre_grp_fu_855_p2;
reg   [31:0] pre_grp_fu_855_p2_reg;
reg    grp_fu_860_ce;
wire   [31:0] pre_grp_fu_860_p2;
reg   [31:0] pre_grp_fu_860_p2_reg;
reg    grp_fu_865_ce;
wire   [31:0] pre_grp_fu_865_p2;
reg   [31:0] pre_grp_fu_865_p2_reg;
reg    grp_fu_870_ce;
wire   [31:0] pre_grp_fu_870_p2;
reg   [31:0] pre_grp_fu_870_p2_reg;
reg    grp_fu_875_ce;
wire   [31:0] pre_grp_fu_875_p2;
reg   [31:0] pre_grp_fu_875_p2_reg;
reg    grp_fu_880_ce;
wire   [31:0] pre_grp_fu_880_p2;
reg   [31:0] pre_grp_fu_880_p2_reg;
reg    grp_fu_885_ce;
wire   [31:0] pre_grp_fu_885_p2;
reg   [31:0] pre_grp_fu_885_p2_reg;
reg    grp_fu_890_ce;
wire   [31:0] pre_grp_fu_890_p2;
reg   [31:0] pre_grp_fu_890_p2_reg;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_block_pp0_stage0_00001;
wire  signed [2:0] ref_tmp_fu_3115_p1;
wire   [2:0] ref_tmp_fu_3115_p3;
wire   [2:0] ref_tmp_fu_3115_p5;
wire   [2:0] ref_tmp_fu_3115_p7;
wire  signed [2:0] ref_tmp99_2_fu_3215_p1;
wire   [2:0] ref_tmp99_2_fu_3215_p3;
wire   [2:0] ref_tmp99_2_fu_3215_p5;
wire   [2:0] ref_tmp99_2_fu_3215_p7;
wire  signed [2:0] ref_tmp99_4_fu_3315_p1;
wire   [2:0] ref_tmp99_4_fu_3315_p3;
wire   [2:0] ref_tmp99_4_fu_3315_p5;
wire   [2:0] ref_tmp99_4_fu_3315_p7;
wire  signed [2:0] ref_tmp99_6_fu_3415_p1;
wire   [2:0] ref_tmp99_6_fu_3415_p3;
wire   [2:0] ref_tmp99_6_fu_3415_p5;
wire   [2:0] ref_tmp99_6_fu_3415_p7;
wire  signed [2:0] ref_tmp99_8_fu_3515_p1;
wire   [2:0] ref_tmp99_8_fu_3515_p3;
wire   [2:0] ref_tmp99_8_fu_3515_p5;
wire   [2:0] ref_tmp99_8_fu_3515_p7;
wire  signed [2:0] ref_tmp99_s_fu_3615_p1;
wire   [2:0] ref_tmp99_s_fu_3615_p3;
wire   [2:0] ref_tmp99_s_fu_3615_p5;
wire   [2:0] ref_tmp99_s_fu_3615_p7;
wire  signed [2:0] ref_tmp99_1_fu_3715_p1;
wire   [2:0] ref_tmp99_1_fu_3715_p3;
wire   [2:0] ref_tmp99_1_fu_3715_p5;
wire   [2:0] ref_tmp99_1_fu_3715_p7;
wire  signed [2:0] ref_tmp99_3_fu_3815_p1;
wire   [2:0] ref_tmp99_3_fu_3815_p3;
wire   [2:0] ref_tmp99_3_fu_3815_p5;
wire   [2:0] ref_tmp99_3_fu_3815_p7;
wire  signed [2:0] ref_tmp99_5_fu_3915_p1;
wire   [2:0] ref_tmp99_5_fu_3915_p3;
wire   [2:0] ref_tmp99_5_fu_3915_p5;
wire   [2:0] ref_tmp99_5_fu_3915_p7;
wire  signed [2:0] ref_tmp99_7_fu_4015_p1;
wire   [2:0] ref_tmp99_7_fu_4015_p3;
wire   [2:0] ref_tmp99_7_fu_4015_p5;
wire   [2:0] ref_tmp99_7_fu_4015_p7;
wire  signed [2:0] ref_tmp99_9_fu_4115_p1;
wire   [2:0] ref_tmp99_9_fu_4115_p3;
wire   [2:0] ref_tmp99_9_fu_4115_p5;
wire   [2:0] ref_tmp99_9_fu_4115_p7;
wire  signed [2:0] ref_tmp99_10_fu_4215_p1;
wire   [2:0] ref_tmp99_10_fu_4215_p3;
wire   [2:0] ref_tmp99_10_fu_4215_p5;
wire   [2:0] ref_tmp99_10_fu_4215_p7;
wire  signed [2:0] ref_tmp99_11_fu_4315_p1;
wire   [2:0] ref_tmp99_11_fu_4315_p3;
wire   [2:0] ref_tmp99_11_fu_4315_p5;
wire   [2:0] ref_tmp99_11_fu_4315_p7;
wire  signed [2:0] ref_tmp99_12_fu_4415_p1;
wire   [2:0] ref_tmp99_12_fu_4415_p3;
wire   [2:0] ref_tmp99_12_fu_4415_p5;
wire   [2:0] ref_tmp99_12_fu_4415_p7;
wire  signed [2:0] ref_tmp99_13_fu_4515_p1;
wire   [2:0] ref_tmp99_13_fu_4515_p3;
wire   [2:0] ref_tmp99_13_fu_4515_p5;
wire   [2:0] ref_tmp99_13_fu_4515_p7;
wire  signed [2:0] ref_tmp99_14_fu_4615_p1;
wire   [2:0] ref_tmp99_14_fu_4615_p3;
wire   [2:0] ref_tmp99_14_fu_4615_p5;
wire   [2:0] ref_tmp99_14_fu_4615_p7;
wire    ap_ce_reg;
// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 grp_generic_round_float_s_fu_607_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_616_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_625_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_634_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_643_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_652_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_661_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_670_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_679_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_688_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_697_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_706_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_715_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_724_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_733_ap_start_reg = 1'b0;
#0 grp_generic_round_float_s_fu_742_ap_start_reg = 1'b0;
#0 k_1_fu_196 = 12'd0;
#0 ap_done_reg = 1'b0;
end
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_607(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_607_ap_start),
    .ap_done(grp_generic_round_float_s_fu_607_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_607_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_607_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_607_ap_ce),
    .x(grp_fu_1835_p_dout0),
    .ap_return(grp_generic_round_float_s_fu_607_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_616(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_616_ap_start),
    .ap_done(grp_generic_round_float_s_fu_616_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_616_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_616_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_616_ap_ce),
    .x(grp_fu_820_p2),
    .ap_return(grp_generic_round_float_s_fu_616_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_625(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_625_ap_start),
    .ap_done(grp_generic_round_float_s_fu_625_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_625_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_625_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_625_ap_ce),
    .x(grp_fu_825_p2),
    .ap_return(grp_generic_round_float_s_fu_625_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_634(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_634_ap_start),
    .ap_done(grp_generic_round_float_s_fu_634_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_634_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_634_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_634_ap_ce),
    .x(grp_fu_830_p2),
    .ap_return(grp_generic_round_float_s_fu_634_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_643(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_643_ap_start),
    .ap_done(grp_generic_round_float_s_fu_643_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_643_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_643_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_643_ap_ce),
    .x(grp_fu_835_p2),
    .ap_return(grp_generic_round_float_s_fu_643_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_652(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_652_ap_start),
    .ap_done(grp_generic_round_float_s_fu_652_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_652_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_652_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_652_ap_ce),
    .x(grp_fu_840_p2),
    .ap_return(grp_generic_round_float_s_fu_652_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_661(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_661_ap_start),
    .ap_done(grp_generic_round_float_s_fu_661_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_661_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_661_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_661_ap_ce),
    .x(grp_fu_845_p2),
    .ap_return(grp_generic_round_float_s_fu_661_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_670(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_670_ap_start),
    .ap_done(grp_generic_round_float_s_fu_670_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_670_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_670_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_670_ap_ce),
    .x(grp_fu_850_p2),
    .ap_return(grp_generic_round_float_s_fu_670_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_679(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_679_ap_start),
    .ap_done(grp_generic_round_float_s_fu_679_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_679_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_679_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_679_ap_ce),
    .x(grp_fu_855_p2),
    .ap_return(grp_generic_round_float_s_fu_679_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_688(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_688_ap_start),
    .ap_done(grp_generic_round_float_s_fu_688_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_688_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_688_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_688_ap_ce),
    .x(grp_fu_860_p2),
    .ap_return(grp_generic_round_float_s_fu_688_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_697(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_697_ap_start),
    .ap_done(grp_generic_round_float_s_fu_697_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_697_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_697_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_697_ap_ce),
    .x(grp_fu_865_p2),
    .ap_return(grp_generic_round_float_s_fu_697_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_706(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_706_ap_start),
    .ap_done(grp_generic_round_float_s_fu_706_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_706_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_706_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_706_ap_ce),
    .x(grp_fu_870_p2),
    .ap_return(grp_generic_round_float_s_fu_706_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_715(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_715_ap_start),
    .ap_done(grp_generic_round_float_s_fu_715_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_715_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_715_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_715_ap_ce),
    .x(grp_fu_875_p2),
    .ap_return(grp_generic_round_float_s_fu_715_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_724(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_724_ap_start),
    .ap_done(grp_generic_round_float_s_fu_724_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_724_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_724_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_724_ap_ce),
    .x(grp_fu_880_p2),
    .ap_return(grp_generic_round_float_s_fu_724_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_733(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_733_ap_start),
    .ap_done(grp_generic_round_float_s_fu_733_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_733_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_733_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_733_ap_ce),
    .x(grp_fu_885_p2),
    .ap_return(grp_generic_round_float_s_fu_733_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_generic_round_float_s grp_generic_round_float_s_fu_742(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_round_float_s_fu_742_ap_start),
    .ap_done(grp_generic_round_float_s_fu_742_ap_done),
    .ap_idle(grp_generic_round_float_s_fu_742_ap_idle),
    .ap_ready(grp_generic_round_float_s_fu_742_ap_ready),
    .ap_ce(grp_generic_round_float_s_fu_742_ap_ce),
    .x(grp_fu_890_p2),
    .ap_return(grp_generic_round_float_s_fu_742_ap_return)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U130(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_755_p0),
    .din1(grp_fu_755_p1),
    .ce(grp_fu_755_ce),
    .dout(pre_grp_fu_755_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U131(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_759_p0),
    .din1(grp_fu_759_p1),
    .ce(grp_fu_759_ce),
    .dout(pre_grp_fu_759_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U132(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_763_p0),
    .din1(grp_fu_763_p1),
    .ce(grp_fu_763_ce),
    .dout(pre_grp_fu_763_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U133(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_767_p0),
    .din1(grp_fu_767_p1),
    .ce(grp_fu_767_ce),
    .dout(pre_grp_fu_767_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U134(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_771_p0),
    .din1(grp_fu_771_p1),
    .ce(grp_fu_771_ce),
    .dout(pre_grp_fu_771_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U135(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_775_p0),
    .din1(grp_fu_775_p1),
    .ce(grp_fu_775_ce),
    .dout(pre_grp_fu_775_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U136(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_779_p0),
    .din1(grp_fu_779_p1),
    .ce(grp_fu_779_ce),
    .dout(pre_grp_fu_779_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U137(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_783_p0),
    .din1(grp_fu_783_p1),
    .ce(grp_fu_783_ce),
    .dout(pre_grp_fu_783_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U138(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_787_p0),
    .din1(grp_fu_787_p1),
    .ce(grp_fu_787_ce),
    .dout(pre_grp_fu_787_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U139(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_791_p0),
    .din1(grp_fu_791_p1),
    .ce(grp_fu_791_ce),
    .dout(pre_grp_fu_791_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U140(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_795_p0),
    .din1(grp_fu_795_p1),
    .ce(grp_fu_795_ce),
    .dout(pre_grp_fu_795_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U141(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_799_p0),
    .din1(grp_fu_799_p1),
    .ce(grp_fu_799_ce),
    .dout(pre_grp_fu_799_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U142(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_803_p0),
    .din1(grp_fu_803_p1),
    .ce(grp_fu_803_ce),
    .dout(pre_grp_fu_803_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U143(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_807_p0),
    .din1(grp_fu_807_p1),
    .ce(grp_fu_807_ce),
    .dout(pre_grp_fu_807_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fsub_32ns_32ns_32_2_primitive_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_2_primitive_dsp_1_U144(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_811_p0),
    .din1(grp_fu_811_p1),
    .ce(grp_fu_811_ce),
    .dout(pre_grp_fu_811_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U146(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_820_p0),
    .din1(grp_fu_820_p1),
    .ce(grp_fu_820_ce),
    .dout(pre_grp_fu_820_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U147(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_825_p0),
    .din1(grp_fu_825_p1),
    .ce(grp_fu_825_ce),
    .dout(pre_grp_fu_825_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U148(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_830_p0),
    .din1(grp_fu_830_p1),
    .ce(grp_fu_830_ce),
    .dout(pre_grp_fu_830_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U149(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_835_p0),
    .din1(grp_fu_835_p1),
    .ce(grp_fu_835_ce),
    .dout(pre_grp_fu_835_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_840_p0),
    .din1(grp_fu_840_p1),
    .ce(grp_fu_840_ce),
    .dout(pre_grp_fu_840_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U151(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_845_p0),
    .din1(grp_fu_845_p1),
    .ce(grp_fu_845_ce),
    .dout(pre_grp_fu_845_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U152(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_850_p0),
    .din1(grp_fu_850_p1),
    .ce(grp_fu_850_ce),
    .dout(pre_grp_fu_850_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U153(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_855_p0),
    .din1(grp_fu_855_p1),
    .ce(grp_fu_855_ce),
    .dout(pre_grp_fu_855_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U154(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_860_p0),
    .din1(grp_fu_860_p1),
    .ce(grp_fu_860_ce),
    .dout(pre_grp_fu_860_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U155(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_865_p0),
    .din1(grp_fu_865_p1),
    .ce(grp_fu_865_ce),
    .dout(pre_grp_fu_865_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U156(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_870_p0),
    .din1(grp_fu_870_p1),
    .ce(grp_fu_870_ce),
    .dout(pre_grp_fu_870_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U157(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_875_p0),
    .din1(grp_fu_875_p1),
    .ce(grp_fu_875_ce),
    .dout(pre_grp_fu_875_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U158(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_880_p0),
    .din1(grp_fu_880_p1),
    .ce(grp_fu_880_ce),
    .dout(pre_grp_fu_880_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_885_p0),
    .din1(grp_fu_885_p1),
    .ce(grp_fu_885_ce),
    .dout(pre_grp_fu_885_p2)
);
quant_layer_r1_ln_iembed_fp32_int4_fdiv_32ns_32ns_32_29_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 29 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_29_no_dsp_1_U160(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_890_p0),
    .din1(grp_fu_890_p1),
    .ce(grp_fu_890_ce),
    .dout(pre_grp_fu_890_p2)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U161(
    .din0(trunc_ln295_2_reg_5421),
    .din1(trunc_ln295_3_reg_5460),
    .din2(ref_tmp_fu_3115_p6),
    .din3(4'd0),
    .def(ref_tmp_fu_3115_p9),
    .sel(ref_tmp_fu_3115_p10),
    .dout(ref_tmp_fu_3115_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U162(
    .din0(trunc_ln295_7_reg_5470),
    .din1(trunc_ln295_8_reg_5509),
    .din2(ref_tmp99_2_fu_3215_p6),
    .din3(4'd0),
    .def(ref_tmp99_2_fu_3215_p9),
    .sel(ref_tmp99_2_fu_3215_p10),
    .dout(ref_tmp99_2_fu_3215_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U163(
    .din0(trunc_ln295_12_reg_5519),
    .din1(trunc_ln295_13_reg_5558),
    .din2(ref_tmp99_4_fu_3315_p6),
    .din3(4'd0),
    .def(ref_tmp99_4_fu_3315_p9),
    .sel(ref_tmp99_4_fu_3315_p10),
    .dout(ref_tmp99_4_fu_3315_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U164(
    .din0(trunc_ln295_17_reg_5568),
    .din1(trunc_ln295_18_reg_5607),
    .din2(ref_tmp99_6_fu_3415_p6),
    .din3(4'd0),
    .def(ref_tmp99_6_fu_3415_p9),
    .sel(ref_tmp99_6_fu_3415_p10),
    .dout(ref_tmp99_6_fu_3415_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U165(
    .din0(trunc_ln295_22_reg_5617),
    .din1(trunc_ln295_23_reg_5656),
    .din2(ref_tmp99_8_fu_3515_p6),
    .din3(4'd0),
    .def(ref_tmp99_8_fu_3515_p9),
    .sel(ref_tmp99_8_fu_3515_p10),
    .dout(ref_tmp99_8_fu_3515_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U166(
    .din0(trunc_ln295_27_reg_5666),
    .din1(trunc_ln295_28_reg_5705),
    .din2(ref_tmp99_s_fu_3615_p6),
    .din3(4'd0),
    .def(ref_tmp99_s_fu_3615_p9),
    .sel(ref_tmp99_s_fu_3615_p10),
    .dout(ref_tmp99_s_fu_3615_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U167(
    .din0(trunc_ln295_32_reg_5715),
    .din1(trunc_ln295_33_reg_5754),
    .din2(ref_tmp99_1_fu_3715_p6),
    .din3(4'd0),
    .def(ref_tmp99_1_fu_3715_p9),
    .sel(ref_tmp99_1_fu_3715_p10),
    .dout(ref_tmp99_1_fu_3715_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U168(
    .din0(trunc_ln295_37_reg_5764),
    .din1(trunc_ln295_38_reg_5803),
    .din2(ref_tmp99_3_fu_3815_p6),
    .din3(4'd0),
    .def(ref_tmp99_3_fu_3815_p9),
    .sel(ref_tmp99_3_fu_3815_p10),
    .dout(ref_tmp99_3_fu_3815_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U169(
    .din0(trunc_ln295_42_reg_5813),
    .din1(trunc_ln295_43_reg_5852),
    .din2(ref_tmp99_5_fu_3915_p6),
    .din3(4'd0),
    .def(ref_tmp99_5_fu_3915_p9),
    .sel(ref_tmp99_5_fu_3915_p10),
    .dout(ref_tmp99_5_fu_3915_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U170(
    .din0(trunc_ln295_47_reg_5862),
    .din1(trunc_ln295_48_reg_5901),
    .din2(ref_tmp99_7_fu_4015_p6),
    .din3(4'd0),
    .def(ref_tmp99_7_fu_4015_p9),
    .sel(ref_tmp99_7_fu_4015_p10),
    .dout(ref_tmp99_7_fu_4015_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U171(
    .din0(trunc_ln295_52_reg_5911),
    .din1(trunc_ln295_53_reg_5950),
    .din2(ref_tmp99_9_fu_4115_p6),
    .din3(4'd0),
    .def(ref_tmp99_9_fu_4115_p9),
    .sel(ref_tmp99_9_fu_4115_p10),
    .dout(ref_tmp99_9_fu_4115_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U172(
    .din0(trunc_ln295_57_reg_5960),
    .din1(trunc_ln295_58_reg_5999),
    .din2(ref_tmp99_10_fu_4215_p6),
    .din3(4'd0),
    .def(ref_tmp99_10_fu_4215_p9),
    .sel(ref_tmp99_10_fu_4215_p10),
    .dout(ref_tmp99_10_fu_4215_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U173(
    .din0(trunc_ln295_62_reg_6009),
    .din1(trunc_ln295_63_reg_6048),
    .din2(ref_tmp99_11_fu_4315_p6),
    .din3(4'd0),
    .def(ref_tmp99_11_fu_4315_p9),
    .sel(ref_tmp99_11_fu_4315_p10),
    .dout(ref_tmp99_11_fu_4315_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U174(
    .din0(trunc_ln295_67_reg_6058),
    .din1(trunc_ln295_68_reg_6097),
    .din2(ref_tmp99_12_fu_4415_p6),
    .din3(4'd0),
    .def(ref_tmp99_12_fu_4415_p9),
    .sel(ref_tmp99_12_fu_4415_p10),
    .dout(ref_tmp99_12_fu_4415_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U175(
    .din0(trunc_ln295_72_reg_6107),
    .din1(trunc_ln295_73_reg_6146),
    .din2(ref_tmp99_13_fu_4515_p6),
    .din3(4'd0),
    .def(ref_tmp99_13_fu_4515_p9),
    .sel(ref_tmp99_13_fu_4515_p10),
    .dout(ref_tmp99_13_fu_4515_p11)
);
(* dissolve_hierarchy = "yes" *) quant_layer_r1_ln_iembed_fp32_int4_sparsemux_9_3_4_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h4 ),
    .din0_WIDTH( 4 ),
    .CASE1( 3'h2 ),
    .din1_WIDTH( 4 ),
    .CASE2( 3'h1 ),
    .din2_WIDTH( 4 ),
    .CASE3( 3'h0 ),
    .din3_WIDTH( 4 ),
    .def_WIDTH( 4 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
sparsemux_9_3_4_1_1_U176(
    .din0(trunc_ln295_77_reg_6156),
    .din1(trunc_ln295_78_reg_6195),
    .din2(ref_tmp99_14_fu_4615_p6),
    .din3(4'd0),
    .def(ref_tmp99_14_fu_4615_p9),
    .sel(ref_tmp99_14_fu_4615_p10),
    .dout(ref_tmp99_14_fu_4615_p11)
);
quant_layer_r1_ln_iembed_fp32_int4_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter36_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_607_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_607_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_607_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_607_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_616_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_616_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_616_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_616_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_625_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_625_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_625_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_625_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_634_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_634_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_634_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_634_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_643_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_643_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_643_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_643_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_652_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_652_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_652_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_652_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_661_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_661_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_661_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_661_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_670_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_670_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_670_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_670_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_679_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_679_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_679_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_679_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_688_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_688_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_688_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_688_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_697_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_697_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_697_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_697_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_706_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_706_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_706_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_706_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_715_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_715_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_715_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_715_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_724_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_724_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_724_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_724_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_733_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_733_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_733_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_733_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_round_float_s_fu_742_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln823_reg_5060_pp0_iter31_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
            grp_generic_round_float_s_fu_742_ap_start_reg <= 1'b1;
        end else if ((grp_generic_round_float_s_fu_742_ap_ready == 1'b1)) begin
            grp_generic_round_float_s_fu_742_ap_start_reg <= 1'b0;
        end
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_755_ce <= 1'b1;
    end else begin
        grp_fu_755_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_759_ce <= 1'b1;
    end else begin
        grp_fu_759_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_763_ce <= 1'b1;
    end else begin
        grp_fu_763_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_767_ce <= 1'b1;
    end else begin
        grp_fu_767_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_771_ce <= 1'b1;
    end else begin
        grp_fu_771_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_775_ce <= 1'b1;
    end else begin
        grp_fu_775_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_779_ce <= 1'b1;
    end else begin
        grp_fu_779_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_783_ce <= 1'b1;
    end else begin
        grp_fu_783_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_787_ce <= 1'b1;
    end else begin
        grp_fu_787_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_791_ce <= 1'b1;
    end else begin
        grp_fu_791_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_795_ce <= 1'b1;
    end else begin
        grp_fu_795_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_799_ce <= 1'b1;
    end else begin
        grp_fu_799_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_803_ce <= 1'b1;
    end else begin
        grp_fu_803_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_807_ce <= 1'b1;
    end else begin
        grp_fu_807_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_811_ce <= 1'b1;
    end else begin
        grp_fu_811_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_820_ce <= 1'b1;
    end else begin
        grp_fu_820_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_825_ce <= 1'b1;
    end else begin
        grp_fu_825_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_830_ce <= 1'b1;
    end else begin
        grp_fu_830_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_835_ce <= 1'b1;
    end else begin
        grp_fu_835_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_840_ce <= 1'b1;
    end else begin
        grp_fu_840_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_845_ce <= 1'b1;
    end else begin
        grp_fu_845_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_850_ce <= 1'b1;
    end else begin
        grp_fu_850_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_855_ce <= 1'b1;
    end else begin
        grp_fu_855_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_860_ce <= 1'b1;
    end else begin
        grp_fu_860_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_865_ce <= 1'b1;
    end else begin
        grp_fu_865_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_870_ce <= 1'b1;
    end else begin
        grp_fu_870_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_875_ce <= 1'b1;
    end else begin
        grp_fu_875_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_880_ce <= 1'b1;
    end else begin
        grp_fu_880_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_885_ce <= 1'b1;
    end else begin
        grp_fu_885_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_890_ce <= 1'b1;
    end else begin
        grp_fu_890_ce <= 1'b0;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln823_fu_983_p2 == 1'd0))) begin
            k_1_fu_196 <= add_ln823_fu_977_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_1_fu_196 <= 12'd0;
        end
    end
end
always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln295_10_reg_5525 <= icmp_ln295_10_fu_1556_p2;
        icmp_ln295_11_reg_5531 <= icmp_ln295_11_fu_1572_p2;
        icmp_ln295_12_reg_5537 <= icmp_ln295_12_fu_1578_p2;
        icmp_ln295_13_reg_5543 <= icmp_ln295_13_fu_1584_p2;
        icmp_ln295_15_reg_5574 <= icmp_ln295_15_fu_1665_p2;
        icmp_ln295_16_reg_5580 <= icmp_ln295_16_fu_1681_p2;
        icmp_ln295_17_reg_5586 <= icmp_ln295_17_fu_1687_p2;
        icmp_ln295_18_reg_5592 <= icmp_ln295_18_fu_1693_p2;
        icmp_ln295_1_reg_5433 <= icmp_ln295_1_fu_1354_p2;
        icmp_ln295_20_reg_5623 <= icmp_ln295_20_fu_1774_p2;
        icmp_ln295_21_reg_5629 <= icmp_ln295_21_fu_1790_p2;
        icmp_ln295_22_reg_5635 <= icmp_ln295_22_fu_1796_p2;
        icmp_ln295_23_reg_5641 <= icmp_ln295_23_fu_1802_p2;
        icmp_ln295_25_reg_5672 <= icmp_ln295_25_fu_1883_p2;
        icmp_ln295_26_reg_5678 <= icmp_ln295_26_fu_1899_p2;
        icmp_ln295_27_reg_5684 <= icmp_ln295_27_fu_1905_p2;
        icmp_ln295_28_reg_5690 <= icmp_ln295_28_fu_1911_p2;
        icmp_ln295_2_reg_5439 <= icmp_ln295_2_fu_1360_p2;
        icmp_ln295_30_reg_5721 <= icmp_ln295_30_fu_1992_p2;
        icmp_ln295_31_reg_5727 <= icmp_ln295_31_fu_2008_p2;
        icmp_ln295_32_reg_5733 <= icmp_ln295_32_fu_2014_p2;
        icmp_ln295_33_reg_5739 <= icmp_ln295_33_fu_2020_p2;
        icmp_ln295_35_reg_5770 <= icmp_ln295_35_fu_2101_p2;
        icmp_ln295_36_reg_5776 <= icmp_ln295_36_fu_2117_p2;
        icmp_ln295_37_reg_5782 <= icmp_ln295_37_fu_2123_p2;
        icmp_ln295_38_reg_5788 <= icmp_ln295_38_fu_2129_p2;
        icmp_ln295_3_reg_5445 <= icmp_ln295_3_fu_1366_p2;
        icmp_ln295_40_reg_5819 <= icmp_ln295_40_fu_2210_p2;
        icmp_ln295_41_reg_5825 <= icmp_ln295_41_fu_2226_p2;
        icmp_ln295_42_reg_5831 <= icmp_ln295_42_fu_2232_p2;
        icmp_ln295_43_reg_5837 <= icmp_ln295_43_fu_2238_p2;
        icmp_ln295_45_reg_5868 <= icmp_ln295_45_fu_2319_p2;
        icmp_ln295_46_reg_5874 <= icmp_ln295_46_fu_2335_p2;
        icmp_ln295_47_reg_5880 <= icmp_ln295_47_fu_2341_p2;
        icmp_ln295_48_reg_5886 <= icmp_ln295_48_fu_2347_p2;
        icmp_ln295_50_reg_5917 <= icmp_ln295_50_fu_2428_p2;
        icmp_ln295_51_reg_5923 <= icmp_ln295_51_fu_2444_p2;
        icmp_ln295_52_reg_5929 <= icmp_ln295_52_fu_2450_p2;
        icmp_ln295_53_reg_5935 <= icmp_ln295_53_fu_2456_p2;
        icmp_ln295_55_reg_5966 <= icmp_ln295_55_fu_2537_p2;
        icmp_ln295_56_reg_5972 <= icmp_ln295_56_fu_2553_p2;
        icmp_ln295_57_reg_5978 <= icmp_ln295_57_fu_2559_p2;
        icmp_ln295_58_reg_5984 <= icmp_ln295_58_fu_2565_p2;
        icmp_ln295_5_reg_5476 <= icmp_ln295_5_fu_1447_p2;
        icmp_ln295_60_reg_6015 <= icmp_ln295_60_fu_2646_p2;
        icmp_ln295_61_reg_6021 <= icmp_ln295_61_fu_2662_p2;
        icmp_ln295_62_reg_6027 <= icmp_ln295_62_fu_2668_p2;
        icmp_ln295_63_reg_6033 <= icmp_ln295_63_fu_2674_p2;
        icmp_ln295_65_reg_6064 <= icmp_ln295_65_fu_2755_p2;
        icmp_ln295_66_reg_6070 <= icmp_ln295_66_fu_2771_p2;
        icmp_ln295_67_reg_6076 <= icmp_ln295_67_fu_2777_p2;
        icmp_ln295_68_reg_6082 <= icmp_ln295_68_fu_2783_p2;
        icmp_ln295_6_reg_5482 <= icmp_ln295_6_fu_1463_p2;
        icmp_ln295_70_reg_6113 <= icmp_ln295_70_fu_2864_p2;
        icmp_ln295_71_reg_6119 <= icmp_ln295_71_fu_2880_p2;
        icmp_ln295_72_reg_6125 <= icmp_ln295_72_fu_2886_p2;
        icmp_ln295_73_reg_6131 <= icmp_ln295_73_fu_2892_p2;
        icmp_ln295_75_reg_6162 <= icmp_ln295_75_fu_2973_p2;
        icmp_ln295_76_reg_6168 <= icmp_ln295_76_fu_2989_p2;
        icmp_ln295_77_reg_6174 <= icmp_ln295_77_fu_2995_p2;
        icmp_ln295_78_reg_6180 <= icmp_ln295_78_fu_3001_p2;
        icmp_ln295_7_reg_5488 <= icmp_ln295_7_fu_1469_p2;
        icmp_ln295_8_reg_5494 <= icmp_ln295_8_fu_1475_p2;
        icmp_ln295_reg_5427 <= icmp_ln295_fu_1338_p2;
        icmp_ln823_reg_5060_pp0_iter10_reg <= icmp_ln823_reg_5060_pp0_iter9_reg;
        icmp_ln823_reg_5060_pp0_iter11_reg <= icmp_ln823_reg_5060_pp0_iter10_reg;
        icmp_ln823_reg_5060_pp0_iter12_reg <= icmp_ln823_reg_5060_pp0_iter11_reg;
        icmp_ln823_reg_5060_pp0_iter13_reg <= icmp_ln823_reg_5060_pp0_iter12_reg;
        icmp_ln823_reg_5060_pp0_iter14_reg <= icmp_ln823_reg_5060_pp0_iter13_reg;
        icmp_ln823_reg_5060_pp0_iter15_reg <= icmp_ln823_reg_5060_pp0_iter14_reg;
        icmp_ln823_reg_5060_pp0_iter16_reg <= icmp_ln823_reg_5060_pp0_iter15_reg;
        icmp_ln823_reg_5060_pp0_iter17_reg <= icmp_ln823_reg_5060_pp0_iter16_reg;
        icmp_ln823_reg_5060_pp0_iter18_reg <= icmp_ln823_reg_5060_pp0_iter17_reg;
        icmp_ln823_reg_5060_pp0_iter19_reg <= icmp_ln823_reg_5060_pp0_iter18_reg;
        icmp_ln823_reg_5060_pp0_iter20_reg <= icmp_ln823_reg_5060_pp0_iter19_reg;
        icmp_ln823_reg_5060_pp0_iter21_reg <= icmp_ln823_reg_5060_pp0_iter20_reg;
        icmp_ln823_reg_5060_pp0_iter22_reg <= icmp_ln823_reg_5060_pp0_iter21_reg;
        icmp_ln823_reg_5060_pp0_iter23_reg <= icmp_ln823_reg_5060_pp0_iter22_reg;
        icmp_ln823_reg_5060_pp0_iter24_reg <= icmp_ln823_reg_5060_pp0_iter23_reg;
        icmp_ln823_reg_5060_pp0_iter25_reg <= icmp_ln823_reg_5060_pp0_iter24_reg;
        icmp_ln823_reg_5060_pp0_iter26_reg <= icmp_ln823_reg_5060_pp0_iter25_reg;
        icmp_ln823_reg_5060_pp0_iter27_reg <= icmp_ln823_reg_5060_pp0_iter26_reg;
        icmp_ln823_reg_5060_pp0_iter28_reg <= icmp_ln823_reg_5060_pp0_iter27_reg;
        icmp_ln823_reg_5060_pp0_iter29_reg <= icmp_ln823_reg_5060_pp0_iter28_reg;
        icmp_ln823_reg_5060_pp0_iter2_reg <= icmp_ln823_reg_5060_pp0_iter1_reg;
        icmp_ln823_reg_5060_pp0_iter30_reg <= icmp_ln823_reg_5060_pp0_iter29_reg;
        icmp_ln823_reg_5060_pp0_iter31_reg <= icmp_ln823_reg_5060_pp0_iter30_reg;
        icmp_ln823_reg_5060_pp0_iter32_reg <= icmp_ln823_reg_5060_pp0_iter31_reg;
        icmp_ln823_reg_5060_pp0_iter3_reg <= icmp_ln823_reg_5060_pp0_iter2_reg;
        icmp_ln823_reg_5060_pp0_iter4_reg <= icmp_ln823_reg_5060_pp0_iter3_reg;
        icmp_ln823_reg_5060_pp0_iter5_reg <= icmp_ln823_reg_5060_pp0_iter4_reg;
        icmp_ln823_reg_5060_pp0_iter6_reg <= icmp_ln823_reg_5060_pp0_iter5_reg;
        icmp_ln823_reg_5060_pp0_iter7_reg <= icmp_ln823_reg_5060_pp0_iter6_reg;
        icmp_ln823_reg_5060_pp0_iter8_reg <= icmp_ln823_reg_5060_pp0_iter7_reg;
        icmp_ln823_reg_5060_pp0_iter9_reg <= icmp_ln823_reg_5060_pp0_iter8_reg;
        ref_tmp99_10_reg_6266 <= ref_tmp99_10_fu_4215_p11;
        ref_tmp99_11_reg_6272 <= ref_tmp99_11_fu_4315_p11;
        ref_tmp99_12_reg_6278 <= ref_tmp99_12_fu_4415_p11;
        ref_tmp99_13_reg_6284 <= ref_tmp99_13_fu_4515_p11;
        ref_tmp99_14_reg_6290 <= ref_tmp99_14_fu_4615_p11;
        ref_tmp99_1_reg_6236 <= ref_tmp99_1_fu_3715_p11;
        ref_tmp99_2_reg_6206 <= ref_tmp99_2_fu_3215_p11;
        ref_tmp99_3_reg_6242 <= ref_tmp99_3_fu_3815_p11;
        ref_tmp99_4_reg_6212 <= ref_tmp99_4_fu_3315_p11;
        ref_tmp99_5_reg_6248 <= ref_tmp99_5_fu_3915_p11;
        ref_tmp99_6_reg_6218 <= ref_tmp99_6_fu_3415_p11;
        ref_tmp99_7_reg_6254 <= ref_tmp99_7_fu_4015_p11;
        ref_tmp99_8_reg_6224 <= ref_tmp99_8_fu_3515_p11;
        ref_tmp99_9_reg_6260 <= ref_tmp99_9_fu_4115_p11;
        ref_tmp99_s_reg_6230 <= ref_tmp99_s_fu_3615_p11;
        ref_tmp_reg_6200 <= ref_tmp_fu_3115_p11;
        sub_ln295_10_reg_5597 <= sub_ln295_10_fu_1699_p2;
        sub_ln295_13_reg_5646 <= sub_ln295_13_fu_1808_p2;
        sub_ln295_16_reg_5695 <= sub_ln295_16_fu_1917_p2;
        sub_ln295_19_reg_5744 <= sub_ln295_19_fu_2026_p2;
        sub_ln295_1_reg_5450 <= sub_ln295_1_fu_1372_p2;
        sub_ln295_22_reg_5793 <= sub_ln295_22_fu_2135_p2;
        sub_ln295_25_reg_5842 <= sub_ln295_25_fu_2244_p2;
        sub_ln295_28_reg_5891 <= sub_ln295_28_fu_2353_p2;
        sub_ln295_31_reg_5940 <= sub_ln295_31_fu_2462_p2;
        sub_ln295_34_reg_5989 <= sub_ln295_34_fu_2571_p2;
        sub_ln295_37_reg_6038 <= sub_ln295_37_fu_2680_p2;
        sub_ln295_40_reg_6087 <= sub_ln295_40_fu_2789_p2;
        sub_ln295_43_reg_6136 <= sub_ln295_43_fu_2898_p2;
        sub_ln295_46_reg_6185 <= sub_ln295_46_fu_3007_p2;
        sub_ln295_4_reg_5499 <= sub_ln295_4_fu_1481_p2;
        sub_ln295_7_reg_5548 <= sub_ln295_7_fu_1590_p2;
        tmp_10_reg_5661 <= bitcast_ln725_5_fu_1838_p1[32'd31];
        tmp_10_reg_5661_pp0_iter36_reg <= tmp_10_reg_5661;
        tmp_11_reg_5700 <= {{sub_ln295_16_fu_1917_p2[8:2]}};
        tmp_12_reg_5710 <= bitcast_ln725_6_fu_1947_p1[32'd31];
        tmp_12_reg_5710_pp0_iter36_reg <= tmp_12_reg_5710;
        tmp_13_reg_5749 <= {{sub_ln295_19_fu_2026_p2[8:2]}};
        tmp_14_reg_5759 <= bitcast_ln725_7_fu_2056_p1[32'd31];
        tmp_14_reg_5759_pp0_iter36_reg <= tmp_14_reg_5759;
        tmp_15_reg_5798 <= {{sub_ln295_22_fu_2135_p2[8:2]}};
        tmp_16_reg_5808 <= bitcast_ln725_8_fu_2165_p1[32'd31];
        tmp_16_reg_5808_pp0_iter36_reg <= tmp_16_reg_5808;
        tmp_17_reg_5847 <= {{sub_ln295_25_fu_2244_p2[8:2]}};
        tmp_18_reg_5857 <= bitcast_ln725_9_fu_2274_p1[32'd31];
        tmp_18_reg_5857_pp0_iter36_reg <= tmp_18_reg_5857;
        tmp_19_reg_5896 <= {{sub_ln295_28_fu_2353_p2[8:2]}};
        tmp_1_reg_5455 <= {{sub_ln295_1_fu_1372_p2[8:2]}};
        tmp_20_reg_5906 <= bitcast_ln725_10_fu_2383_p1[32'd31];
        tmp_20_reg_5906_pp0_iter36_reg <= tmp_20_reg_5906;
        tmp_21_reg_5945 <= {{sub_ln295_31_fu_2462_p2[8:2]}};
        tmp_22_reg_5955 <= bitcast_ln725_11_fu_2492_p1[32'd31];
        tmp_22_reg_5955_pp0_iter36_reg <= tmp_22_reg_5955;
        tmp_23_reg_5994 <= {{sub_ln295_34_fu_2571_p2[8:2]}};
        tmp_24_reg_6004 <= bitcast_ln725_12_fu_2601_p1[32'd31];
        tmp_24_reg_6004_pp0_iter36_reg <= tmp_24_reg_6004;
        tmp_25_reg_6043 <= {{sub_ln295_37_fu_2680_p2[8:2]}};
        tmp_26_reg_6053 <= bitcast_ln725_13_fu_2710_p1[32'd31];
        tmp_26_reg_6053_pp0_iter36_reg <= tmp_26_reg_6053;
        tmp_27_reg_6092 <= {{sub_ln295_40_fu_2789_p2[8:2]}};
        tmp_28_reg_6102 <= bitcast_ln725_14_fu_2819_p1[32'd31];
        tmp_28_reg_6102_pp0_iter36_reg <= tmp_28_reg_6102;
        tmp_29_reg_6141 <= {{sub_ln295_43_fu_2898_p2[8:2]}};
        tmp_2_reg_5465 <= bitcast_ln725_1_fu_1402_p1[32'd31];
        tmp_2_reg_5465_pp0_iter36_reg <= tmp_2_reg_5465;
        tmp_30_reg_6151 <= bitcast_ln725_15_fu_2928_p1[32'd31];
        tmp_30_reg_6151_pp0_iter36_reg <= tmp_30_reg_6151;
        tmp_31_reg_6190 <= {{sub_ln295_46_fu_3007_p2[8:2]}};
        tmp_3_reg_5504 <= {{sub_ln295_4_fu_1481_p2[8:2]}};
        tmp_4_reg_5514 <= bitcast_ln725_2_fu_1511_p1[32'd31];
        tmp_4_reg_5514_pp0_iter36_reg <= tmp_4_reg_5514;
        tmp_5_reg_5553 <= {{sub_ln295_7_fu_1590_p2[8:2]}};
        tmp_6_reg_5563 <= bitcast_ln725_3_fu_1620_p1[32'd31];
        tmp_6_reg_5563_pp0_iter36_reg <= tmp_6_reg_5563;
        tmp_7_reg_5602 <= {{sub_ln295_10_fu_1699_p2[8:2]}};
        tmp_8_reg_5612 <= bitcast_ln725_4_fu_1729_p1[32'd31];
        tmp_8_reg_5612_pp0_iter36_reg <= tmp_8_reg_5612;
        tmp_9_reg_5651 <= {{sub_ln295_13_fu_1808_p2[8:2]}};
        tmp_reg_5416 <= bitcast_ln725_fu_1293_p1[32'd31];
        tmp_reg_5416_pp0_iter36_reg <= tmp_reg_5416;
        trunc_ln295_12_reg_5519 <= trunc_ln295_12_fu_1544_p1;
        trunc_ln295_13_reg_5558 <= trunc_ln295_13_fu_1616_p1;
        trunc_ln295_17_reg_5568 <= trunc_ln295_17_fu_1653_p1;
        trunc_ln295_18_reg_5607 <= trunc_ln295_18_fu_1725_p1;
        trunc_ln295_22_reg_5617 <= trunc_ln295_22_fu_1762_p1;
        trunc_ln295_23_reg_5656 <= trunc_ln295_23_fu_1834_p1;
        trunc_ln295_27_reg_5666 <= trunc_ln295_27_fu_1871_p1;
        trunc_ln295_28_reg_5705 <= trunc_ln295_28_fu_1943_p1;
        trunc_ln295_2_reg_5421 <= trunc_ln295_2_fu_1326_p1;
        trunc_ln295_32_reg_5715 <= trunc_ln295_32_fu_1980_p1;
        trunc_ln295_33_reg_5754 <= trunc_ln295_33_fu_2052_p1;
        trunc_ln295_37_reg_5764 <= trunc_ln295_37_fu_2089_p1;
        trunc_ln295_38_reg_5803 <= trunc_ln295_38_fu_2161_p1;
        trunc_ln295_3_reg_5460 <= trunc_ln295_3_fu_1398_p1;
        trunc_ln295_42_reg_5813 <= trunc_ln295_42_fu_2198_p1;
        trunc_ln295_43_reg_5852 <= trunc_ln295_43_fu_2270_p1;
        trunc_ln295_47_reg_5862 <= trunc_ln295_47_fu_2307_p1;
        trunc_ln295_48_reg_5901 <= trunc_ln295_48_fu_2379_p1;
        trunc_ln295_52_reg_5911 <= trunc_ln295_52_fu_2416_p1;
        trunc_ln295_53_reg_5950 <= trunc_ln295_53_fu_2488_p1;
        trunc_ln295_57_reg_5960 <= trunc_ln295_57_fu_2525_p1;
        trunc_ln295_58_reg_5999 <= trunc_ln295_58_fu_2597_p1;
        trunc_ln295_62_reg_6009 <= trunc_ln295_62_fu_2634_p1;
        trunc_ln295_63_reg_6048 <= trunc_ln295_63_fu_2706_p1;
        trunc_ln295_67_reg_6058 <= trunc_ln295_67_fu_2743_p1;
        trunc_ln295_68_reg_6097 <= trunc_ln295_68_fu_2815_p1;
        trunc_ln295_72_reg_6107 <= trunc_ln295_72_fu_2852_p1;
        trunc_ln295_73_reg_6146 <= trunc_ln295_73_fu_2924_p1;
        trunc_ln295_77_reg_6156 <= trunc_ln295_77_fu_2961_p1;
        trunc_ln295_78_reg_6195 <= trunc_ln295_78_fu_3033_p1;
        trunc_ln295_7_reg_5470 <= trunc_ln295_7_fu_1435_p1;
        trunc_ln295_8_reg_5509 <= trunc_ln295_8_fu_1507_p1;
        val_10_reg_5386 <= grp_generic_round_float_s_fu_697_ap_return;
        val_11_reg_5391 <= grp_generic_round_float_s_fu_706_ap_return;
        val_12_reg_5396 <= grp_generic_round_float_s_fu_715_ap_return;
        val_13_reg_5401 <= grp_generic_round_float_s_fu_724_ap_return;
        val_14_reg_5406 <= grp_generic_round_float_s_fu_733_ap_return;
        val_15_reg_5411 <= grp_generic_round_float_s_fu_742_ap_return;
        val_1_reg_5341 <= grp_generic_round_float_s_fu_616_ap_return;
        val_2_reg_5346 <= grp_generic_round_float_s_fu_625_ap_return;
        val_3_reg_5351 <= grp_generic_round_float_s_fu_634_ap_return;
        val_4_reg_5356 <= grp_generic_round_float_s_fu_643_ap_return;
        val_5_reg_5361 <= grp_generic_round_float_s_fu_652_ap_return;
        val_6_reg_5366 <= grp_generic_round_float_s_fu_661_ap_return;
        val_7_reg_5371 <= grp_generic_round_float_s_fu_670_ap_return;
        val_8_reg_5376 <= grp_generic_round_float_s_fu_679_ap_return;
        val_9_reg_5381 <= grp_generic_round_float_s_fu_688_ap_return;
        val_reg_5336 <= grp_generic_round_float_s_fu_607_ap_return;
    end
end
always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln823_reg_5060 <= icmp_ln823_fu_983_p2;
        icmp_ln823_reg_5060_pp0_iter1_reg <= icmp_ln823_reg_5060;
        input_buffer_10_load_reg_5204 <= input_buffer_10_q0;
        input_buffer_11_load_reg_5210 <= input_buffer_11_q0;
        input_buffer_12_load_reg_5216 <= input_buffer_12_q0;
        input_buffer_13_load_reg_5222 <= input_buffer_13_q0;
        input_buffer_14_load_reg_5228 <= input_buffer_14_q0;
        input_buffer_15_load_reg_5234 <= input_buffer_15_q0;
        input_buffer_1_load_reg_5150 <= input_buffer_1_q0;
        input_buffer_2_load_reg_5156 <= input_buffer_2_q0;
        input_buffer_3_load_reg_5162 <= input_buffer_3_q0;
        input_buffer_4_load_reg_5168 <= input_buffer_4_q0;
        input_buffer_5_load_reg_5174 <= input_buffer_5_q0;
        input_buffer_6_load_reg_5180 <= input_buffer_6_q0;
        input_buffer_7_load_reg_5186 <= input_buffer_7_q0;
        input_buffer_8_load_reg_5192 <= input_buffer_8_q0;
        input_buffer_9_load_reg_5198 <= input_buffer_9_q0;
        input_buffer_load_reg_5144 <= input_buffer_q0;
    end
end
always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_755_p0 <= input_buffer_1_load_reg_5150;
        grp_fu_755_p1 <= b_load_1;
        grp_fu_759_p0 <= input_buffer_2_load_reg_5156;
        grp_fu_759_p1 <= b_load_2;
        grp_fu_763_p0 <= input_buffer_3_load_reg_5162;
        grp_fu_763_p1 <= b_load_3;
        grp_fu_767_p0 <= input_buffer_4_load_reg_5168;
        grp_fu_767_p1 <= b_load_4;
        grp_fu_771_p0 <= input_buffer_5_load_reg_5174;
        grp_fu_771_p1 <= b_load_5;
        grp_fu_775_p0 <= input_buffer_6_load_reg_5180;
        grp_fu_775_p1 <= b_load_6;
        grp_fu_779_p0 <= input_buffer_7_load_reg_5186;
        grp_fu_779_p1 <= b_load_7;
        grp_fu_783_p0 <= input_buffer_8_load_reg_5192;
        grp_fu_783_p1 <= b_load_8;
        grp_fu_787_p0 <= input_buffer_9_load_reg_5198;
        grp_fu_787_p1 <= b_load_9;
        grp_fu_791_p0 <= input_buffer_10_load_reg_5204;
        grp_fu_791_p1 <= b_load_10;
        grp_fu_795_p0 <= input_buffer_11_load_reg_5210;
        grp_fu_795_p1 <= b_load_11;
        grp_fu_799_p0 <= input_buffer_12_load_reg_5216;
        grp_fu_799_p1 <= b_load_12;
        grp_fu_803_p0 <= input_buffer_13_load_reg_5222;
        grp_fu_803_p1 <= b_load_13;
        grp_fu_807_p0 <= input_buffer_14_load_reg_5228;
        grp_fu_807_p1 <= b_load_14;
        grp_fu_811_p0 <= input_buffer_15_load_reg_5234;
        grp_fu_811_p1 <= b_load_15;
    end
end
always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_820_p0 <= grp_fu_755_p2;
        grp_fu_820_p1 <= s_load_1;
        grp_fu_825_p0 <= grp_fu_759_p2;
        grp_fu_825_p1 <= s_load_2;
        grp_fu_830_p0 <= grp_fu_763_p2;
        grp_fu_830_p1 <= s_load_3;
        grp_fu_835_p0 <= grp_fu_767_p2;
        grp_fu_835_p1 <= s_load_4;
        grp_fu_840_p0 <= grp_fu_771_p2;
        grp_fu_840_p1 <= s_load_5;
        grp_fu_845_p0 <= grp_fu_775_p2;
        grp_fu_845_p1 <= s_load_6;
        grp_fu_850_p0 <= grp_fu_779_p2;
        grp_fu_850_p1 <= s_load_7;
        grp_fu_855_p0 <= grp_fu_783_p2;
        grp_fu_855_p1 <= s_load_8;
        grp_fu_860_p0 <= grp_fu_787_p2;
        grp_fu_860_p1 <= s_load_9;
        grp_fu_865_p0 <= grp_fu_791_p2;
        grp_fu_865_p1 <= s_load_10;
        grp_fu_870_p0 <= grp_fu_795_p2;
        grp_fu_870_p1 <= s_load_11;
        grp_fu_875_p0 <= grp_fu_799_p2;
        grp_fu_875_p1 <= s_load_12;
        grp_fu_880_p0 <= grp_fu_803_p2;
        grp_fu_880_p1 <= s_load_13;
        grp_fu_885_p0 <= grp_fu_807_p2;
        grp_fu_885_p1 <= s_load_14;
        grp_fu_890_p0 <= grp_fu_811_p2;
        grp_fu_890_p1 <= s_load_15;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_755_ce == 1'b1)) begin
        pre_grp_fu_755_p2_reg <= pre_grp_fu_755_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_759_ce == 1'b1)) begin
        pre_grp_fu_759_p2_reg <= pre_grp_fu_759_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_763_ce == 1'b1)) begin
        pre_grp_fu_763_p2_reg <= pre_grp_fu_763_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_767_ce == 1'b1)) begin
        pre_grp_fu_767_p2_reg <= pre_grp_fu_767_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_771_ce == 1'b1)) begin
        pre_grp_fu_771_p2_reg <= pre_grp_fu_771_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_775_ce == 1'b1)) begin
        pre_grp_fu_775_p2_reg <= pre_grp_fu_775_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_779_ce == 1'b1)) begin
        pre_grp_fu_779_p2_reg <= pre_grp_fu_779_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_783_ce == 1'b1)) begin
        pre_grp_fu_783_p2_reg <= pre_grp_fu_783_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_787_ce == 1'b1)) begin
        pre_grp_fu_787_p2_reg <= pre_grp_fu_787_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_791_ce == 1'b1)) begin
        pre_grp_fu_791_p2_reg <= pre_grp_fu_791_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_795_ce == 1'b1)) begin
        pre_grp_fu_795_p2_reg <= pre_grp_fu_795_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_799_ce == 1'b1)) begin
        pre_grp_fu_799_p2_reg <= pre_grp_fu_799_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_803_ce == 1'b1)) begin
        pre_grp_fu_803_p2_reg <= pre_grp_fu_803_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_807_ce == 1'b1)) begin
        pre_grp_fu_807_p2_reg <= pre_grp_fu_807_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_811_ce == 1'b1)) begin
        pre_grp_fu_811_p2_reg <= pre_grp_fu_811_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_820_ce == 1'b1)) begin
        pre_grp_fu_820_p2_reg <= pre_grp_fu_820_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_825_ce == 1'b1)) begin
        pre_grp_fu_825_p2_reg <= pre_grp_fu_825_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_830_ce == 1'b1)) begin
        pre_grp_fu_830_p2_reg <= pre_grp_fu_830_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_835_ce == 1'b1)) begin
        pre_grp_fu_835_p2_reg <= pre_grp_fu_835_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_840_ce == 1'b1)) begin
        pre_grp_fu_840_p2_reg <= pre_grp_fu_840_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_845_ce == 1'b1)) begin
        pre_grp_fu_845_p2_reg <= pre_grp_fu_845_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_850_ce == 1'b1)) begin
        pre_grp_fu_850_p2_reg <= pre_grp_fu_850_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_855_ce == 1'b1)) begin
        pre_grp_fu_855_p2_reg <= pre_grp_fu_855_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_860_ce == 1'b1)) begin
        pre_grp_fu_860_p2_reg <= pre_grp_fu_860_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_865_ce == 1'b1)) begin
        pre_grp_fu_865_p2_reg <= pre_grp_fu_865_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_870_ce == 1'b1)) begin
        pre_grp_fu_870_p2_reg <= pre_grp_fu_870_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_875_ce == 1'b1)) begin
        pre_grp_fu_875_p2_reg <= pre_grp_fu_875_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_880_ce == 1'b1)) begin
        pre_grp_fu_880_p2_reg <= pre_grp_fu_880_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_885_ce == 1'b1)) begin
        pre_grp_fu_885_p2_reg <= pre_grp_fu_885_p2;
    end
end
always @ (posedge ap_clk) begin
    if ((grp_fu_890_ce == 1'b1)) begin
        pre_grp_fu_890_p2_reg <= pre_grp_fu_890_p2;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln823_fu_983_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end
always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter36_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end
always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) 
    & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end
always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_k = 12'd0;
    end else begin
        ap_sig_allocacmp_k = k_1_fu_196;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_751_ce = 1'b1;
    end else begin
        grp_fu_751_ce = 1'b0;
    end
end
always @ (*) begin
    if ((grp_fu_755_ce == 1'b1)) begin
        grp_fu_755_p2 = pre_grp_fu_755_p2;
    end else begin
        grp_fu_755_p2 = pre_grp_fu_755_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_759_ce == 1'b1)) begin
        grp_fu_759_p2 = pre_grp_fu_759_p2;
    end else begin
        grp_fu_759_p2 = pre_grp_fu_759_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_763_ce == 1'b1)) begin
        grp_fu_763_p2 = pre_grp_fu_763_p2;
    end else begin
        grp_fu_763_p2 = pre_grp_fu_763_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_767_ce == 1'b1)) begin
        grp_fu_767_p2 = pre_grp_fu_767_p2;
    end else begin
        grp_fu_767_p2 = pre_grp_fu_767_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_771_ce == 1'b1)) begin
        grp_fu_771_p2 = pre_grp_fu_771_p2;
    end else begin
        grp_fu_771_p2 = pre_grp_fu_771_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_775_ce == 1'b1)) begin
        grp_fu_775_p2 = pre_grp_fu_775_p2;
    end else begin
        grp_fu_775_p2 = pre_grp_fu_775_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_779_ce == 1'b1)) begin
        grp_fu_779_p2 = pre_grp_fu_779_p2;
    end else begin
        grp_fu_779_p2 = pre_grp_fu_779_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_783_ce == 1'b1)) begin
        grp_fu_783_p2 = pre_grp_fu_783_p2;
    end else begin
        grp_fu_783_p2 = pre_grp_fu_783_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_787_ce == 1'b1)) begin
        grp_fu_787_p2 = pre_grp_fu_787_p2;
    end else begin
        grp_fu_787_p2 = pre_grp_fu_787_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_791_ce == 1'b1)) begin
        grp_fu_791_p2 = pre_grp_fu_791_p2;
    end else begin
        grp_fu_791_p2 = pre_grp_fu_791_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_795_ce == 1'b1)) begin
        grp_fu_795_p2 = pre_grp_fu_795_p2;
    end else begin
        grp_fu_795_p2 = pre_grp_fu_795_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_799_ce == 1'b1)) begin
        grp_fu_799_p2 = pre_grp_fu_799_p2;
    end else begin
        grp_fu_799_p2 = pre_grp_fu_799_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_803_ce == 1'b1)) begin
        grp_fu_803_p2 = pre_grp_fu_803_p2;
    end else begin
        grp_fu_803_p2 = pre_grp_fu_803_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_807_ce == 1'b1)) begin
        grp_fu_807_p2 = pre_grp_fu_807_p2;
    end else begin
        grp_fu_807_p2 = pre_grp_fu_807_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_811_ce == 1'b1)) begin
        grp_fu_811_p2 = pre_grp_fu_811_p2;
    end else begin
        grp_fu_811_p2 = pre_grp_fu_811_p2_reg;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_815_ce = 1'b1;
    end else begin
        grp_fu_815_ce = 1'b0;
    end
end
always @ (*) begin
    if ((grp_fu_820_ce == 1'b1)) begin
        grp_fu_820_p2 = pre_grp_fu_820_p2;
    end else begin
        grp_fu_820_p2 = pre_grp_fu_820_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_825_ce == 1'b1)) begin
        grp_fu_825_p2 = pre_grp_fu_825_p2;
    end else begin
        grp_fu_825_p2 = pre_grp_fu_825_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_830_ce == 1'b1)) begin
        grp_fu_830_p2 = pre_grp_fu_830_p2;
    end else begin
        grp_fu_830_p2 = pre_grp_fu_830_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_835_ce == 1'b1)) begin
        grp_fu_835_p2 = pre_grp_fu_835_p2;
    end else begin
        grp_fu_835_p2 = pre_grp_fu_835_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_840_ce == 1'b1)) begin
        grp_fu_840_p2 = pre_grp_fu_840_p2;
    end else begin
        grp_fu_840_p2 = pre_grp_fu_840_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_845_ce == 1'b1)) begin
        grp_fu_845_p2 = pre_grp_fu_845_p2;
    end else begin
        grp_fu_845_p2 = pre_grp_fu_845_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_850_ce == 1'b1)) begin
        grp_fu_850_p2 = pre_grp_fu_850_p2;
    end else begin
        grp_fu_850_p2 = pre_grp_fu_850_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_855_ce == 1'b1)) begin
        grp_fu_855_p2 = pre_grp_fu_855_p2;
    end else begin
        grp_fu_855_p2 = pre_grp_fu_855_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_860_ce == 1'b1)) begin
        grp_fu_860_p2 = pre_grp_fu_860_p2;
    end else begin
        grp_fu_860_p2 = pre_grp_fu_860_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_865_ce == 1'b1)) begin
        grp_fu_865_p2 = pre_grp_fu_865_p2;
    end else begin
        grp_fu_865_p2 = pre_grp_fu_865_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_870_ce == 1'b1)) begin
        grp_fu_870_p2 = pre_grp_fu_870_p2;
    end else begin
        grp_fu_870_p2 = pre_grp_fu_870_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_875_ce == 1'b1)) begin
        grp_fu_875_p2 = pre_grp_fu_875_p2;
    end else begin
        grp_fu_875_p2 = pre_grp_fu_875_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_880_ce == 1'b1)) begin
        grp_fu_880_p2 = pre_grp_fu_880_p2;
    end else begin
        grp_fu_880_p2 = pre_grp_fu_880_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_885_ce == 1'b1)) begin
        grp_fu_885_p2 = pre_grp_fu_885_p2;
    end else begin
        grp_fu_885_p2 = pre_grp_fu_885_p2_reg;
    end
end
always @ (*) begin
    if ((grp_fu_890_ce == 1'b1)) begin
        grp_fu_890_p2 = pre_grp_fu_890_p2;
    end else begin
        grp_fu_890_p2 = pre_grp_fu_890_p2_reg;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp809))) begin
        grp_generic_round_float_s_fu_607_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_607_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp811))) begin
        grp_generic_round_float_s_fu_616_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_616_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp813))) begin
        grp_generic_round_float_s_fu_625_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_625_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp815))) begin
        grp_generic_round_float_s_fu_634_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_634_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp817))) begin
        grp_generic_round_float_s_fu_643_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_643_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp819))) begin
        grp_generic_round_float_s_fu_652_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_652_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp821))) begin
        grp_generic_round_float_s_fu_661_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_661_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp823))) begin
        grp_generic_round_float_s_fu_670_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_670_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp825))) begin
        grp_generic_round_float_s_fu_679_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_679_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp827))) begin
        grp_generic_round_float_s_fu_688_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_688_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp829))) begin
        grp_generic_round_float_s_fu_697_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_697_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp831))) begin
        grp_generic_round_float_s_fu_706_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_706_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp833))) begin
        grp_generic_round_float_s_fu_715_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_715_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp835))) begin
        grp_generic_round_float_s_fu_724_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_724_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp837))) begin
        grp_generic_round_float_s_fu_733_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_733_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp839))) begin
        grp_generic_round_float_s_fu_742_ap_ce = 1'b1;
    end else begin
        grp_generic_round_float_s_fu_742_ap_ce = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_10_ce0_local = 1'b1;
    end else begin
        input_buffer_10_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_11_ce0_local = 1'b1;
    end else begin
        input_buffer_11_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_12_ce0_local = 1'b1;
    end else begin
        input_buffer_12_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_13_ce0_local = 1'b1;
    end else begin
        input_buffer_13_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_14_ce0_local = 1'b1;
    end else begin
        input_buffer_14_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_15_ce0_local = 1'b1;
    end else begin
        input_buffer_15_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_1_ce0_local = 1'b1;
    end else begin
        input_buffer_1_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_2_ce0_local = 1'b1;
    end else begin
        input_buffer_2_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_3_ce0_local = 1'b1;
    end else begin
        input_buffer_3_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_4_ce0_local = 1'b1;
    end else begin
        input_buffer_4_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_5_ce0_local = 1'b1;
    end else begin
        input_buffer_5_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_6_ce0_local = 1'b1;
    end else begin
        input_buffer_6_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_7_ce0_local = 1'b1;
    end else begin
        input_buffer_7_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_8_ce0_local = 1'b1;
    end else begin
        input_buffer_8_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_9_ce0_local = 1'b1;
    end else begin
        input_buffer_9_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_buffer_ce0_local = 1'b1;
    end else begin
        input_buffer_ce0_local = 1'b0;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        output_stream_s_blk_n = output_stream_s_full_n;
    end else begin
        output_stream_s_blk_n = 1'b1;
    end
end
always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
        output_stream_s_write_local = 1'b1;
    end else begin
        output_stream_s_write_local = 1'b0;
    end
end
always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end
assign add_ln823_fu_977_p2 = (ap_sig_allocacmp_k + 12'd1);
assign and_ln295_10_fu_3283_p2 = (icmp_ln295_12_reg_5537 & and_ln295_9_fu_3278_p2);
assign and_ln295_11_fu_3299_p2 = (xor_ln295_8_fu_3293_p2 & icmp_ln295_14_fu_3240_p2);
assign and_ln295_12_fu_3363_p2 = (xor_ln295_9_fu_3358_p2 & icmp_ln295_16_reg_5580);
assign and_ln295_13_fu_3378_p2 = (xor_ln295_10_fu_3372_p2 & icmp_ln295_18_reg_5592);
assign and_ln295_14_fu_3383_p2 = (icmp_ln295_17_reg_5586 & and_ln295_13_fu_3378_p2);
assign and_ln295_15_fu_3399_p2 = (xor_ln295_11_fu_3393_p2 & icmp_ln295_19_fu_3340_p2);
assign and_ln295_16_fu_3463_p2 = (xor_ln295_12_fu_3458_p2 & icmp_ln295_21_reg_5629);
assign and_ln295_17_fu_3478_p2 = (xor_ln295_13_fu_3472_p2 & icmp_ln295_23_reg_5641);
assign and_ln295_18_fu_3483_p2 = (icmp_ln295_22_reg_5635 & and_ln295_17_fu_3478_p2);
assign and_ln295_19_fu_3499_p2 = (xor_ln295_14_fu_3493_p2 & icmp_ln295_24_fu_3440_p2);
assign and_ln295_1_fu_3078_p2 = (xor_ln295_1_fu_3072_p2 & icmp_ln295_3_reg_5445);
assign and_ln295_20_fu_3563_p2 = (xor_ln295_15_fu_3558_p2 & icmp_ln295_26_reg_5678);
assign and_ln295_21_fu_3578_p2 = (xor_ln295_16_fu_3572_p2 & icmp_ln295_28_reg_5690);
assign and_ln295_22_fu_3583_p2 = (icmp_ln295_27_reg_5684 & and_ln295_21_fu_3578_p2);
assign and_ln295_23_fu_3599_p2 = (xor_ln295_17_fu_3593_p2 & icmp_ln295_29_fu_3540_p2);
assign and_ln295_24_fu_3663_p2 = (xor_ln295_18_fu_3658_p2 & icmp_ln295_31_reg_5727);
assign and_ln295_25_fu_3678_p2 = (xor_ln295_19_fu_3672_p2 & icmp_ln295_33_reg_5739);
assign and_ln295_26_fu_3683_p2 = (icmp_ln295_32_reg_5733 & and_ln295_25_fu_3678_p2);
assign and_ln295_27_fu_3699_p2 = (xor_ln295_20_fu_3693_p2 & icmp_ln295_34_fu_3640_p2);
assign and_ln295_28_fu_3763_p2 = (xor_ln295_21_fu_3758_p2 & icmp_ln295_36_reg_5776);
assign and_ln295_29_fu_3778_p2 = (xor_ln295_22_fu_3772_p2 & icmp_ln295_38_reg_5788);
assign and_ln295_2_fu_3083_p2 = (icmp_ln295_2_reg_5439 & and_ln295_1_fu_3078_p2);
assign and_ln295_30_fu_3783_p2 = (icmp_ln295_37_reg_5782 & and_ln295_29_fu_3778_p2);
assign and_ln295_31_fu_3799_p2 = (xor_ln295_23_fu_3793_p2 & icmp_ln295_39_fu_3740_p2);
assign and_ln295_32_fu_3863_p2 = (xor_ln295_24_fu_3858_p2 & icmp_ln295_41_reg_5825);
assign and_ln295_33_fu_3878_p2 = (xor_ln295_25_fu_3872_p2 & icmp_ln295_43_reg_5837);
assign and_ln295_34_fu_3883_p2 = (icmp_ln295_42_reg_5831 & and_ln295_33_fu_3878_p2);
assign and_ln295_35_fu_3899_p2 = (xor_ln295_26_fu_3893_p2 & icmp_ln295_44_fu_3840_p2);
assign and_ln295_36_fu_3963_p2 = (xor_ln295_27_fu_3958_p2 & icmp_ln295_46_reg_5874);
assign and_ln295_37_fu_3978_p2 = (xor_ln295_28_fu_3972_p2 & icmp_ln295_48_reg_5886);
assign and_ln295_38_fu_3983_p2 = (icmp_ln295_47_reg_5880 & and_ln295_37_fu_3978_p2);
assign and_ln295_39_fu_3999_p2 = (xor_ln295_29_fu_3993_p2 & icmp_ln295_49_fu_3940_p2);
assign and_ln295_3_fu_3099_p2 = (xor_ln295_2_fu_3093_p2 & icmp_ln295_4_fu_3040_p2);
assign and_ln295_40_fu_4063_p2 = (xor_ln295_30_fu_4058_p2 & icmp_ln295_51_reg_5923);
assign and_ln295_41_fu_4078_p2 = (xor_ln295_31_fu_4072_p2 & icmp_ln295_53_reg_5935);
assign and_ln295_42_fu_4083_p2 = (icmp_ln295_52_reg_5929 & and_ln295_41_fu_4078_p2);
assign and_ln295_43_fu_4099_p2 = (xor_ln295_32_fu_4093_p2 & icmp_ln295_54_fu_4040_p2);
assign and_ln295_44_fu_4163_p2 = (xor_ln295_33_fu_4158_p2 & icmp_ln295_56_reg_5972);
assign and_ln295_45_fu_4178_p2 = (xor_ln295_34_fu_4172_p2 & icmp_ln295_58_reg_5984);
assign and_ln295_46_fu_4183_p2 = (icmp_ln295_57_reg_5978 & and_ln295_45_fu_4178_p2);
assign and_ln295_47_fu_4199_p2 = (xor_ln295_35_fu_4193_p2 & icmp_ln295_59_fu_4140_p2);
assign and_ln295_48_fu_4263_p2 = (xor_ln295_36_fu_4258_p2 & icmp_ln295_61_reg_6021);
assign and_ln295_49_fu_4278_p2 = (xor_ln295_37_fu_4272_p2 & icmp_ln295_63_reg_6033);
assign and_ln295_4_fu_3163_p2 = (xor_ln295_3_fu_3158_p2 & icmp_ln295_6_reg_5482);
assign and_ln295_50_fu_4283_p2 = (icmp_ln295_62_reg_6027 & and_ln295_49_fu_4278_p2);
assign and_ln295_51_fu_4299_p2 = (xor_ln295_38_fu_4293_p2 & icmp_ln295_64_fu_4240_p2);
assign and_ln295_52_fu_4363_p2 = (xor_ln295_39_fu_4358_p2 & icmp_ln295_66_reg_6070);
assign and_ln295_53_fu_4378_p2 = (xor_ln295_40_fu_4372_p2 & icmp_ln295_68_reg_6082);
assign and_ln295_54_fu_4383_p2 = (icmp_ln295_67_reg_6076 & and_ln295_53_fu_4378_p2);
assign and_ln295_55_fu_4399_p2 = (xor_ln295_41_fu_4393_p2 & icmp_ln295_69_fu_4340_p2);
assign and_ln295_56_fu_4463_p2 = (xor_ln295_42_fu_4458_p2 & icmp_ln295_71_reg_6119);
assign and_ln295_57_fu_4478_p2 = (xor_ln295_43_fu_4472_p2 & icmp_ln295_73_reg_6131);
assign and_ln295_58_fu_4483_p2 = (icmp_ln295_72_reg_6125 & and_ln295_57_fu_4478_p2);
assign and_ln295_59_fu_4499_p2 = (xor_ln295_44_fu_4493_p2 & icmp_ln295_74_fu_4440_p2);
assign and_ln295_5_fu_3178_p2 = (xor_ln295_4_fu_3172_p2 & icmp_ln295_8_reg_5494);
assign and_ln295_60_fu_4563_p2 = (xor_ln295_45_fu_4558_p2 & icmp_ln295_76_reg_6168);
assign and_ln295_61_fu_4578_p2 = (xor_ln295_46_fu_4572_p2 & icmp_ln295_78_reg_6180);
assign and_ln295_62_fu_4583_p2 = (icmp_ln295_77_reg_6174 & and_ln295_61_fu_4578_p2);
assign and_ln295_63_fu_4599_p2 = (xor_ln295_47_fu_4593_p2 & icmp_ln295_79_fu_4540_p2);
assign and_ln295_6_fu_3183_p2 = (icmp_ln295_7_reg_5488 & and_ln295_5_fu_3178_p2);
assign and_ln295_7_fu_3199_p2 = (xor_ln295_5_fu_3193_p2 & icmp_ln295_9_fu_3140_p2);
assign and_ln295_8_fu_3263_p2 = (xor_ln295_6_fu_3258_p2 & icmp_ln295_11_reg_5531);
assign and_ln295_9_fu_3278_p2 = (xor_ln295_7_fu_3272_p2 & icmp_ln295_13_reg_5543);
assign and_ln295_fu_3063_p2 = (xor_ln295_fu_3058_p2 & icmp_ln295_1_reg_5433);
assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];
assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);
always @ (*) begin
    ap_block_pp0_stage0_00001 = ((1'b1 == ap_block_state38_pp0_stage0_iter37) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b1 == ap_block_state38_pp0_stage0_iter37) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_block_state38_pp0_stage0_iter37) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp809 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call13) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp811 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call60) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp813 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call107) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp815 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call154) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp817 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call201) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp819 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call248) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp821 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call295) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp823 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call342) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp825 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call389) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp827 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call436) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp829 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call483) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp831 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call530) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp833 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call577) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp835 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call624) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp837 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call671) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp839 = ((1'b1 == ap_block_state38_pp0_stage0_iter37_ignore_call718) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
assign ap_block_pp0_stage0_ignoreCallOp809 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp811 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp813 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp815 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp817 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp819 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp821 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp823 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp825 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp827 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp829 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp831 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp833 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp835 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp837 = ~(1'b1 == 1'b1);
assign ap_block_pp0_stage0_ignoreCallOp839 = ~(1'b1 == 1'b1);
always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_block_state38_pp0_stage0_iter37) & (ap_enable_reg_pp0_iter37 == 1'b1));
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call107 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call13 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call154 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call201 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call248 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call295 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call342 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call389 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call436 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call483 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call530 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call577 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call60 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call624 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call671 = (output_stream_s_full_n == 1'b0);
end
always @ (*) begin
    ap_block_state38_pp0_stage0_iter37_ignore_call718 = (output_stream_s_full_n == 1'b0);
end
assign ap_done = ap_done_sig;
assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);
assign ap_enable_reg_pp0_iter0 = ap_start_int;
assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;
assign ap_ready = ap_ready_sig;
assign bitcast_ln725_10_fu_2383_p1 = val_10_reg_5386;
assign bitcast_ln725_11_fu_2492_p1 = val_11_reg_5391;
assign bitcast_ln725_12_fu_2601_p1 = val_12_reg_5396;
assign bitcast_ln725_13_fu_2710_p1 = val_13_reg_5401;
assign bitcast_ln725_14_fu_2819_p1 = val_14_reg_5406;
assign bitcast_ln725_15_fu_2928_p1 = val_15_reg_5411;
assign bitcast_ln725_1_fu_1402_p1 = val_1_reg_5341;
assign bitcast_ln725_2_fu_1511_p1 = val_2_reg_5346;
assign bitcast_ln725_3_fu_1620_p1 = val_3_reg_5351;
assign bitcast_ln725_4_fu_1729_p1 = val_4_reg_5356;
assign bitcast_ln725_5_fu_1838_p1 = val_5_reg_5361;
assign bitcast_ln725_6_fu_1947_p1 = val_6_reg_5366;
assign bitcast_ln725_7_fu_2056_p1 = val_7_reg_5371;
assign bitcast_ln725_8_fu_2165_p1 = val_8_reg_5376;
assign bitcast_ln725_9_fu_2274_p1 = val_9_reg_5381;
assign bitcast_ln725_fu_1293_p1 = val_reg_5336;
assign grp_fu_1831_p_ce = grp_fu_751_ce;
assign grp_fu_1831_p_din0 = input_buffer_load_reg_5144;
assign grp_fu_1831_p_din1 = b_load;
assign grp_fu_1831_p_opcode = 2'd1;
assign grp_fu_1835_p_ce = grp_fu_815_ce;
assign grp_fu_1835_p_din0 = grp_fu_1831_p_dout0;
assign grp_fu_1835_p_din1 = s_load;
assign grp_generic_round_float_s_fu_607_ap_start = grp_generic_round_float_s_fu_607_ap_start_reg;
assign grp_generic_round_float_s_fu_616_ap_start = grp_generic_round_float_s_fu_616_ap_start_reg;
assign grp_generic_round_float_s_fu_625_ap_start = grp_generic_round_float_s_fu_625_ap_start_reg;
assign grp_generic_round_float_s_fu_634_ap_start = grp_generic_round_float_s_fu_634_ap_start_reg;
assign grp_generic_round_float_s_fu_643_ap_start = grp_generic_round_float_s_fu_643_ap_start_reg;
assign grp_generic_round_float_s_fu_652_ap_start = grp_generic_round_float_s_fu_652_ap_start_reg;
assign grp_generic_round_float_s_fu_661_ap_start = grp_generic_round_float_s_fu_661_ap_start_reg;
assign grp_generic_round_float_s_fu_670_ap_start = grp_generic_round_float_s_fu_670_ap_start_reg;
assign grp_generic_round_float_s_fu_679_ap_start = grp_generic_round_float_s_fu_679_ap_start_reg;
assign grp_generic_round_float_s_fu_688_ap_start = grp_generic_round_float_s_fu_688_ap_start_reg;
assign grp_generic_round_float_s_fu_697_ap_start = grp_generic_round_float_s_fu_697_ap_start_reg;
assign grp_generic_round_float_s_fu_706_ap_start = grp_generic_round_float_s_fu_706_ap_start_reg;
assign grp_generic_round_float_s_fu_715_ap_start = grp_generic_round_float_s_fu_715_ap_start_reg;
assign grp_generic_round_float_s_fu_724_ap_start = grp_generic_round_float_s_fu_724_ap_start_reg;
assign grp_generic_round_float_s_fu_733_ap_start = grp_generic_round_float_s_fu_733_ap_start_reg;
assign grp_generic_round_float_s_fu_742_ap_start = grp_generic_round_float_s_fu_742_ap_start_reg;
assign icmp_ln295_10_fu_1556_p2 = ((trunc_ln295_10_fu_1514_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_11_fu_1572_p2 = ((tmp_80_fu_1526_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_12_fu_1578_p2 = (($signed(sub_ln295_6_fu_1562_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_13_fu_1584_p2 = (($signed(sub_ln295_6_fu_1562_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_14_fu_3240_p2 = (($signed(tmp_5_reg_5553) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_15_fu_1665_p2 = ((trunc_ln295_15_fu_1623_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_16_fu_1681_p2 = ((tmp_81_fu_1635_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_17_fu_1687_p2 = (($signed(sub_ln295_9_fu_1671_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_18_fu_1693_p2 = (($signed(sub_ln295_9_fu_1671_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_19_fu_3340_p2 = (($signed(tmp_7_reg_5602) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_1_fu_1354_p2 = ((tmp_s_fu_1308_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_20_fu_1774_p2 = ((trunc_ln295_20_fu_1732_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_21_fu_1790_p2 = ((tmp_82_fu_1744_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_22_fu_1796_p2 = (($signed(sub_ln295_12_fu_1780_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_23_fu_1802_p2 = (($signed(sub_ln295_12_fu_1780_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_24_fu_3440_p2 = (($signed(tmp_9_reg_5651) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_25_fu_1883_p2 = ((trunc_ln295_25_fu_1841_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_26_fu_1899_p2 = ((tmp_83_fu_1853_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_27_fu_1905_p2 = (($signed(sub_ln295_15_fu_1889_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_28_fu_1911_p2 = (($signed(sub_ln295_15_fu_1889_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_29_fu_3540_p2 = (($signed(tmp_11_reg_5700) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_2_fu_1360_p2 = (($signed(sub_ln295_fu_1344_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_30_fu_1992_p2 = ((trunc_ln295_30_fu_1950_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_31_fu_2008_p2 = ((tmp_84_fu_1962_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_32_fu_2014_p2 = (($signed(sub_ln295_18_fu_1998_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_33_fu_2020_p2 = (($signed(sub_ln295_18_fu_1998_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_34_fu_3640_p2 = (($signed(tmp_13_reg_5749) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_35_fu_2101_p2 = ((trunc_ln295_35_fu_2059_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_36_fu_2117_p2 = ((tmp_85_fu_2071_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_37_fu_2123_p2 = (($signed(sub_ln295_21_fu_2107_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_38_fu_2129_p2 = (($signed(sub_ln295_21_fu_2107_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_39_fu_3740_p2 = (($signed(tmp_15_reg_5798) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_3_fu_1366_p2 = (($signed(sub_ln295_fu_1344_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_40_fu_2210_p2 = ((trunc_ln295_40_fu_2168_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_41_fu_2226_p2 = ((tmp_86_fu_2180_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_42_fu_2232_p2 = (($signed(sub_ln295_24_fu_2216_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_43_fu_2238_p2 = (($signed(sub_ln295_24_fu_2216_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_44_fu_3840_p2 = (($signed(tmp_17_reg_5847) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_45_fu_2319_p2 = ((trunc_ln295_45_fu_2277_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_46_fu_2335_p2 = ((tmp_87_fu_2289_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_47_fu_2341_p2 = (($signed(sub_ln295_27_fu_2325_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_48_fu_2347_p2 = (($signed(sub_ln295_27_fu_2325_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_49_fu_3940_p2 = (($signed(tmp_19_reg_5896) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_4_fu_3040_p2 = (($signed(tmp_1_reg_5455) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_50_fu_2428_p2 = ((trunc_ln295_50_fu_2386_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_51_fu_2444_p2 = ((tmp_88_fu_2398_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_52_fu_2450_p2 = (($signed(sub_ln295_30_fu_2434_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_53_fu_2456_p2 = (($signed(sub_ln295_30_fu_2434_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_54_fu_4040_p2 = (($signed(tmp_21_reg_5945) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_55_fu_2537_p2 = ((trunc_ln295_55_fu_2495_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_56_fu_2553_p2 = ((tmp_89_fu_2507_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_57_fu_2559_p2 = (($signed(sub_ln295_33_fu_2543_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_58_fu_2565_p2 = (($signed(sub_ln295_33_fu_2543_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_59_fu_4140_p2 = (($signed(tmp_23_reg_5994) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_5_fu_1447_p2 = ((trunc_ln295_5_fu_1405_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_60_fu_2646_p2 = ((trunc_ln295_60_fu_2604_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_61_fu_2662_p2 = ((tmp_90_fu_2616_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_62_fu_2668_p2 = (($signed(sub_ln295_36_fu_2652_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_63_fu_2674_p2 = (($signed(sub_ln295_36_fu_2652_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_64_fu_4240_p2 = (($signed(tmp_25_reg_6043) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_65_fu_2755_p2 = ((trunc_ln295_65_fu_2713_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_66_fu_2771_p2 = ((tmp_91_fu_2725_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_67_fu_2777_p2 = (($signed(sub_ln295_39_fu_2761_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_68_fu_2783_p2 = (($signed(sub_ln295_39_fu_2761_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_69_fu_4340_p2 = (($signed(tmp_27_reg_6092) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_6_fu_1463_p2 = ((tmp_79_fu_1417_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_70_fu_2864_p2 = ((trunc_ln295_70_fu_2822_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_71_fu_2880_p2 = ((tmp_92_fu_2834_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_72_fu_2886_p2 = (($signed(sub_ln295_42_fu_2870_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_73_fu_2892_p2 = (($signed(sub_ln295_42_fu_2870_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_74_fu_4440_p2 = (($signed(tmp_29_reg_6141) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_75_fu_2973_p2 = ((trunc_ln295_75_fu_2931_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln295_76_fu_2989_p2 = ((tmp_93_fu_2943_p4 == 8'd150) ? 1'b1 : 1'b0);
assign icmp_ln295_77_fu_2995_p2 = (($signed(sub_ln295_45_fu_2979_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_78_fu_3001_p2 = (($signed(sub_ln295_45_fu_2979_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_79_fu_4540_p2 = (($signed(tmp_31_reg_6190) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_7_fu_1469_p2 = (($signed(sub_ln295_3_fu_1453_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);
assign icmp_ln295_8_fu_1475_p2 = (($signed(sub_ln295_3_fu_1453_p2) < $signed(9'd25)) ? 1'b1 : 1'b0);
assign icmp_ln295_9_fu_3140_p2 = (($signed(tmp_3_reg_5504) < $signed(7'd1)) ? 1'b1 : 1'b0);
assign icmp_ln295_fu_1338_p2 = ((trunc_ln295_fu_1296_p1 == 31'd0) ? 1'b1 : 1'b0);
assign icmp_ln823_fu_983_p2 = ((ap_sig_allocacmp_k == 12'd2048) ? 1'b1 : 1'b0);
assign input_buffer_10_address0 = zext_ln823_fu_989_p1;
assign input_buffer_10_ce0 = input_buffer_10_ce0_local;
assign input_buffer_11_address0 = zext_ln823_fu_989_p1;
assign input_buffer_11_ce0 = input_buffer_11_ce0_local;
assign input_buffer_12_address0 = zext_ln823_fu_989_p1;
assign input_buffer_12_ce0 = input_buffer_12_ce0_local;
assign input_buffer_13_address0 = zext_ln823_fu_989_p1;
assign input_buffer_13_ce0 = input_buffer_13_ce0_local;
assign input_buffer_14_address0 = zext_ln823_fu_989_p1;
assign input_buffer_14_ce0 = input_buffer_14_ce0_local;
assign input_buffer_15_address0 = zext_ln823_fu_989_p1;
assign input_buffer_15_ce0 = input_buffer_15_ce0_local;
assign input_buffer_1_address0 = zext_ln823_fu_989_p1;
assign input_buffer_1_ce0 = input_buffer_1_ce0_local;
assign input_buffer_2_address0 = zext_ln823_fu_989_p1;
assign input_buffer_2_ce0 = input_buffer_2_ce0_local;
assign input_buffer_3_address0 = zext_ln823_fu_989_p1;
assign input_buffer_3_ce0 = input_buffer_3_ce0_local;
assign input_buffer_4_address0 = zext_ln823_fu_989_p1;
assign input_buffer_4_ce0 = input_buffer_4_ce0_local;
assign input_buffer_5_address0 = zext_ln823_fu_989_p1;
assign input_buffer_5_ce0 = input_buffer_5_ce0_local;
assign input_buffer_6_address0 = zext_ln823_fu_989_p1;
assign input_buffer_6_ce0 = input_buffer_6_ce0_local;
assign input_buffer_7_address0 = zext_ln823_fu_989_p1;
assign input_buffer_7_ce0 = input_buffer_7_ce0_local;
assign input_buffer_8_address0 = zext_ln823_fu_989_p1;
assign input_buffer_8_ce0 = input_buffer_8_ce0_local;
assign input_buffer_9_address0 = zext_ln823_fu_989_p1;
assign input_buffer_9_ce0 = input_buffer_9_ce0_local;
assign input_buffer_address0 = zext_ln823_fu_989_p1;
assign input_buffer_ce0 = input_buffer_ce0_local;
assign lshr_ln295_10_fu_2482_p2 = zext_ln295_31_fu_2478_p1 >> sext_ln295_20_fu_2440_p1;
assign lshr_ln295_11_fu_2591_p2 = zext_ln295_34_fu_2587_p1 >> sext_ln295_22_fu_2549_p1;
assign lshr_ln295_12_fu_2700_p2 = zext_ln295_37_fu_2696_p1 >> sext_ln295_24_fu_2658_p1;
assign lshr_ln295_13_fu_2809_p2 = zext_ln295_40_fu_2805_p1 >> sext_ln295_26_fu_2767_p1;
assign lshr_ln295_14_fu_2918_p2 = zext_ln295_43_fu_2914_p1 >> sext_ln295_28_fu_2876_p1;
assign lshr_ln295_15_fu_3027_p2 = zext_ln295_46_fu_3023_p1 >> sext_ln295_30_fu_2985_p1;
assign lshr_ln295_1_fu_1501_p2 = zext_ln295_4_fu_1497_p1 >> sext_ln295_2_fu_1459_p1;
assign lshr_ln295_2_fu_1610_p2 = zext_ln295_7_fu_1606_p1 >> sext_ln295_4_fu_1568_p1;
assign lshr_ln295_3_fu_1719_p2 = zext_ln295_10_fu_1715_p1 >> sext_ln295_6_fu_1677_p1;
assign lshr_ln295_4_fu_1828_p2 = zext_ln295_13_fu_1824_p1 >> sext_ln295_8_fu_1786_p1;
assign lshr_ln295_5_fu_1937_p2 = zext_ln295_16_fu_1933_p1 >> sext_ln295_10_fu_1895_p1;
assign lshr_ln295_6_fu_2046_p2 = zext_ln295_19_fu_2042_p1 >> sext_ln295_12_fu_2004_p1;
assign lshr_ln295_7_fu_2155_p2 = zext_ln295_22_fu_2151_p1 >> sext_ln295_14_fu_2113_p1;
assign lshr_ln295_8_fu_2264_p2 = zext_ln295_25_fu_2260_p1 >> sext_ln295_16_fu_2222_p1;
assign lshr_ln295_9_fu_2373_p2 = zext_ln295_28_fu_2369_p1 >> sext_ln295_18_fu_2331_p1;
assign lshr_ln295_fu_1392_p2 = zext_ln295_1_fu_1388_p1 >> sext_ln295_fu_1350_p1;
assign or_ln150_s_fu_4813_p17 = {{{{{{{{{{{{{{{{select_ln295_15_fu_4807_p3}, {select_ln295_14_fu_4796_p3}}, {select_ln295_13_fu_4785_p3}}, {select_ln295_12_fu_4774_p3}}, {select_ln295_11_fu_4763_p3}}, {select_ln295_10_fu_4752_p3}}, {select_ln295_9_fu_4741_p3}}, {select_ln295_8_fu_4730_p3}}, {select_ln295_7_fu_4719_p3}}, {select_ln295_6_fu_4708_p3}}, {select_ln295_5_fu_4697_p3}}, {select_ln295_4_fu_4686_p3}}, {select_ln295_3_fu_4675_p3}}, {select_ln295_2_fu_4664_p3}}, {select_ln295_1_fu_4653_p3}}, {select_ln295_fu_4642_p3}};
assign or_ln295_10_fu_3568_p2 = (icmp_ln295_26_reg_5678 | icmp_ln295_25_reg_5672);
assign or_ln295_11_fu_3588_p2 = (or_ln295_10_fu_3568_p2 | icmp_ln295_27_reg_5684);
assign or_ln295_12_fu_3668_p2 = (icmp_ln295_31_reg_5727 | icmp_ln295_30_reg_5721);
assign or_ln295_13_fu_3688_p2 = (or_ln295_12_fu_3668_p2 | icmp_ln295_32_reg_5733);
assign or_ln295_14_fu_3768_p2 = (icmp_ln295_36_reg_5776 | icmp_ln295_35_reg_5770);
assign or_ln295_15_fu_3788_p2 = (or_ln295_14_fu_3768_p2 | icmp_ln295_37_reg_5782);
assign or_ln295_16_fu_3868_p2 = (icmp_ln295_41_reg_5825 | icmp_ln295_40_reg_5819);
assign or_ln295_17_fu_3888_p2 = (or_ln295_16_fu_3868_p2 | icmp_ln295_42_reg_5831);
assign or_ln295_18_fu_3968_p2 = (icmp_ln295_46_reg_5874 | icmp_ln295_45_reg_5868);
assign or_ln295_19_fu_3988_p2 = (or_ln295_18_fu_3968_p2 | icmp_ln295_47_reg_5880);
assign or_ln295_1_fu_3088_p2 = (or_ln295_fu_3068_p2 | icmp_ln295_2_reg_5439);
assign or_ln295_20_fu_4068_p2 = (icmp_ln295_51_reg_5923 | icmp_ln295_50_reg_5917);
assign or_ln295_21_fu_4088_p2 = (or_ln295_20_fu_4068_p2 | icmp_ln295_52_reg_5929);
assign or_ln295_22_fu_4168_p2 = (icmp_ln295_56_reg_5972 | icmp_ln295_55_reg_5966);
assign or_ln295_23_fu_4188_p2 = (or_ln295_22_fu_4168_p2 | icmp_ln295_57_reg_5978);
assign or_ln295_24_fu_4268_p2 = (icmp_ln295_61_reg_6021 | icmp_ln295_60_reg_6015);
assign or_ln295_25_fu_4288_p2 = (or_ln295_24_fu_4268_p2 | icmp_ln295_62_reg_6027);
assign or_ln295_26_fu_4368_p2 = (icmp_ln295_66_reg_6070 | icmp_ln295_65_reg_6064);
assign or_ln295_27_fu_4388_p2 = (or_ln295_26_fu_4368_p2 | icmp_ln295_67_reg_6076);
assign or_ln295_28_fu_4468_p2 = (icmp_ln295_71_reg_6119 | icmp_ln295_70_reg_6113);
assign or_ln295_29_fu_4488_p2 = (or_ln295_28_fu_4468_p2 | icmp_ln295_72_reg_6125);
assign or_ln295_2_fu_3168_p2 = (icmp_ln295_6_reg_5482 | icmp_ln295_5_reg_5476);
assign or_ln295_30_fu_4568_p2 = (icmp_ln295_76_reg_6168 | icmp_ln295_75_reg_6162);
assign or_ln295_31_fu_4588_p2 = (or_ln295_30_fu_4568_p2 | icmp_ln295_77_reg_6174);
assign or_ln295_3_fu_3188_p2 = (or_ln295_2_fu_3168_p2 | icmp_ln295_7_reg_5488);
assign or_ln295_4_fu_3268_p2 = (icmp_ln295_11_reg_5531 | icmp_ln295_10_reg_5525);
assign or_ln295_5_fu_3288_p2 = (or_ln295_4_fu_3268_p2 | icmp_ln295_12_reg_5537);
assign or_ln295_6_fu_3368_p2 = (icmp_ln295_16_reg_5580 | icmp_ln295_15_reg_5574);
assign or_ln295_7_fu_3388_p2 = (or_ln295_6_fu_3368_p2 | icmp_ln295_17_reg_5586);
assign or_ln295_8_fu_3468_p2 = (icmp_ln295_21_reg_5629 | icmp_ln295_20_reg_5623);
assign or_ln295_9_fu_3488_p2 = (or_ln295_8_fu_3468_p2 | icmp_ln295_22_reg_5635);
assign or_ln295_fu_3068_p2 = (icmp_ln295_reg_5427 | icmp_ln295_1_reg_5433);
assign output_stream_s_din = zext_ln150_fu_4849_p1;
assign output_stream_s_write = output_stream_s_write_local;
assign ref_tmp99_10_fu_4215_p10 = {{{and_ln295_44_fu_4163_p2}, {and_ln295_46_fu_4183_p2}}, {and_ln295_47_fu_4199_p2}};
assign ref_tmp99_10_fu_4215_p6 = shl_ln295_11_fu_4148_p2[3:0];
assign ref_tmp99_10_fu_4215_p9 = 'bx;
assign ref_tmp99_11_fu_4315_p10 = {{{and_ln295_48_fu_4263_p2}, {and_ln295_50_fu_4283_p2}}, {and_ln295_51_fu_4299_p2}};
assign ref_tmp99_11_fu_4315_p6 = shl_ln295_12_fu_4248_p2[3:0];
assign ref_tmp99_11_fu_4315_p9 = 'bx;
assign ref_tmp99_12_fu_4415_p10 = {{{and_ln295_52_fu_4363_p2}, {and_ln295_54_fu_4383_p2}}, {and_ln295_55_fu_4399_p2}};
assign ref_tmp99_12_fu_4415_p6 = shl_ln295_13_fu_4348_p2[3:0];
assign ref_tmp99_12_fu_4415_p9 = 'bx;
assign ref_tmp99_13_fu_4515_p10 = {{{and_ln295_56_fu_4463_p2}, {and_ln295_58_fu_4483_p2}}, {and_ln295_59_fu_4499_p2}};
assign ref_tmp99_13_fu_4515_p6 = shl_ln295_14_fu_4448_p2[3:0];
assign ref_tmp99_13_fu_4515_p9 = 'bx;
assign ref_tmp99_14_fu_4615_p10 = {{{and_ln295_60_fu_4563_p2}, {and_ln295_62_fu_4583_p2}}, {and_ln295_63_fu_4599_p2}};
assign ref_tmp99_14_fu_4615_p6 = shl_ln295_15_fu_4548_p2[3:0];
assign ref_tmp99_14_fu_4615_p9 = 'bx;
assign ref_tmp99_1_fu_3715_p10 = {{{and_ln295_24_fu_3663_p2}, {and_ln295_26_fu_3683_p2}}, {and_ln295_27_fu_3699_p2}};
assign ref_tmp99_1_fu_3715_p6 = shl_ln295_6_fu_3648_p2[3:0];
assign ref_tmp99_1_fu_3715_p9 = 'bx;
assign ref_tmp99_2_fu_3215_p10 = {{{and_ln295_4_fu_3163_p2}, {and_ln295_6_fu_3183_p2}}, {and_ln295_7_fu_3199_p2}};
assign ref_tmp99_2_fu_3215_p6 = shl_ln295_1_fu_3148_p2[3:0];
assign ref_tmp99_2_fu_3215_p9 = 'bx;
assign ref_tmp99_3_fu_3815_p10 = {{{and_ln295_28_fu_3763_p2}, {and_ln295_30_fu_3783_p2}}, {and_ln295_31_fu_3799_p2}};
assign ref_tmp99_3_fu_3815_p6 = shl_ln295_7_fu_3748_p2[3:0];
assign ref_tmp99_3_fu_3815_p9 = 'bx;
assign ref_tmp99_4_fu_3315_p10 = {{{and_ln295_8_fu_3263_p2}, {and_ln295_10_fu_3283_p2}}, {and_ln295_11_fu_3299_p2}};
assign ref_tmp99_4_fu_3315_p6 = shl_ln295_2_fu_3248_p2[3:0];
assign ref_tmp99_4_fu_3315_p9 = 'bx;
assign ref_tmp99_5_fu_3915_p10 = {{{and_ln295_32_fu_3863_p2}, {and_ln295_34_fu_3883_p2}}, {and_ln295_35_fu_3899_p2}};
assign ref_tmp99_5_fu_3915_p6 = shl_ln295_8_fu_3848_p2[3:0];
assign ref_tmp99_5_fu_3915_p9 = 'bx;
assign ref_tmp99_6_fu_3415_p10 = {{{and_ln295_12_fu_3363_p2}, {and_ln295_14_fu_3383_p2}}, {and_ln295_15_fu_3399_p2}};
assign ref_tmp99_6_fu_3415_p6 = shl_ln295_3_fu_3348_p2[3:0];
assign ref_tmp99_6_fu_3415_p9 = 'bx;
assign ref_tmp99_7_fu_4015_p10 = {{{and_ln295_36_fu_3963_p2}, {and_ln295_38_fu_3983_p2}}, {and_ln295_39_fu_3999_p2}};
assign ref_tmp99_7_fu_4015_p6 = shl_ln295_9_fu_3948_p2[3:0];
assign ref_tmp99_7_fu_4015_p9 = 'bx;
assign ref_tmp99_8_fu_3515_p10 = {{{and_ln295_16_fu_3463_p2}, {and_ln295_18_fu_3483_p2}}, {and_ln295_19_fu_3499_p2}};
assign ref_tmp99_8_fu_3515_p6 = shl_ln295_4_fu_3448_p2[3:0];
assign ref_tmp99_8_fu_3515_p9 = 'bx;
assign ref_tmp99_9_fu_4115_p10 = {{{and_ln295_40_fu_4063_p2}, {and_ln295_42_fu_4083_p2}}, {and_ln295_43_fu_4099_p2}};
assign ref_tmp99_9_fu_4115_p6 = shl_ln295_10_fu_4048_p2[3:0];
assign ref_tmp99_9_fu_4115_p9 = 'bx;
assign ref_tmp99_s_fu_3615_p10 = {{{and_ln295_20_fu_3563_p2}, {and_ln295_22_fu_3583_p2}}, {and_ln295_23_fu_3599_p2}};
assign ref_tmp99_s_fu_3615_p6 = shl_ln295_5_fu_3548_p2[3:0];
assign ref_tmp99_s_fu_3615_p9 = 'bx;
assign ref_tmp_fu_3115_p10 = {{{and_ln295_fu_3063_p2}, {and_ln295_2_fu_3083_p2}}, {and_ln295_3_fu_3099_p2}};
assign ref_tmp_fu_3115_p6 = shl_ln295_fu_3048_p2[3:0];
assign ref_tmp_fu_3115_p9 = 'bx;
assign select_ln295_10_fu_4752_p3 = ((tmp_20_reg_5906_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_32_fu_4747_p2 : ref_tmp99_9_reg_6260);
assign select_ln295_11_fu_4763_p3 = ((tmp_22_reg_5955_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_35_fu_4758_p2 : ref_tmp99_10_reg_6266);
assign select_ln295_12_fu_4774_p3 = ((tmp_24_reg_6004_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_38_fu_4769_p2 : ref_tmp99_11_reg_6272);
assign select_ln295_13_fu_4785_p3 = ((tmp_26_reg_6053_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_41_fu_4780_p2 : ref_tmp99_12_reg_6278);
assign select_ln295_14_fu_4796_p3 = ((tmp_28_reg_6102_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_44_fu_4791_p2 : ref_tmp99_13_reg_6284);
assign select_ln295_15_fu_4807_p3 = ((tmp_30_reg_6151_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_47_fu_4802_p2 : ref_tmp99_14_reg_6290);
assign select_ln295_1_fu_4653_p3 = ((tmp_2_reg_5465_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_5_fu_4648_p2 : ref_tmp99_2_reg_6206);
assign select_ln295_2_fu_4664_p3 = ((tmp_4_reg_5514_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_8_fu_4659_p2 : ref_tmp99_4_reg_6212);
assign select_ln295_3_fu_4675_p3 = ((tmp_6_reg_5563_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_11_fu_4670_p2 : ref_tmp99_6_reg_6218);
assign select_ln295_4_fu_4686_p3 = ((tmp_8_reg_5612_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_14_fu_4681_p2 : ref_tmp99_8_reg_6224);
assign select_ln295_5_fu_4697_p3 = ((tmp_10_reg_5661_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_17_fu_4692_p2 : ref_tmp99_s_reg_6230);
assign select_ln295_6_fu_4708_p3 = ((tmp_12_reg_5710_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_20_fu_4703_p2 : ref_tmp99_1_reg_6236);
assign select_ln295_7_fu_4719_p3 = ((tmp_14_reg_5759_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_23_fu_4714_p2 : ref_tmp99_3_reg_6242);
assign select_ln295_8_fu_4730_p3 = ((tmp_16_reg_5808_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_26_fu_4725_p2 : ref_tmp99_5_reg_6248);
assign select_ln295_9_fu_4741_p3 = ((tmp_18_reg_5857_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_29_fu_4736_p2 : ref_tmp99_7_reg_6254);
assign select_ln295_fu_4642_p3 = ((tmp_reg_5416_pp0_iter36_reg[0:0] == 1'b1) ? sub_ln295_2_fu_4637_p2 : ref_tmp_reg_6200);
assign sext_ln295_10_fu_1895_p1 = sub_ln295_15_fu_1889_p2;
assign sext_ln295_11_fu_3537_p1 = sub_ln295_16_reg_5695;
assign sext_ln295_12_fu_2004_p1 = sub_ln295_18_fu_1998_p2;
assign sext_ln295_13_fu_3637_p1 = sub_ln295_19_reg_5744;
assign sext_ln295_14_fu_2113_p1 = sub_ln295_21_fu_2107_p2;
assign sext_ln295_15_fu_3737_p1 = sub_ln295_22_reg_5793;
assign sext_ln295_16_fu_2222_p1 = sub_ln295_24_fu_2216_p2;
assign sext_ln295_17_fu_3837_p1 = sub_ln295_25_reg_5842;
assign sext_ln295_18_fu_2331_p1 = sub_ln295_27_fu_2325_p2;
assign sext_ln295_19_fu_3937_p1 = sub_ln295_28_reg_5891;
assign sext_ln295_1_fu_3037_p1 = sub_ln295_1_reg_5450;
assign sext_ln295_20_fu_2440_p1 = sub_ln295_30_fu_2434_p2;
assign sext_ln295_21_fu_4037_p1 = sub_ln295_31_reg_5940;
assign sext_ln295_22_fu_2549_p1 = sub_ln295_33_fu_2543_p2;
assign sext_ln295_23_fu_4137_p1 = sub_ln295_34_reg_5989;
assign sext_ln295_24_fu_2658_p1 = sub_ln295_36_fu_2652_p2;
assign sext_ln295_25_fu_4237_p1 = sub_ln295_37_reg_6038;
assign sext_ln295_26_fu_2767_p1 = sub_ln295_39_fu_2761_p2;
assign sext_ln295_27_fu_4337_p1 = sub_ln295_40_reg_6087;
assign sext_ln295_28_fu_2876_p1 = sub_ln295_42_fu_2870_p2;
assign sext_ln295_29_fu_4437_p1 = sub_ln295_43_reg_6136;
assign sext_ln295_2_fu_1459_p1 = sub_ln295_3_fu_1453_p2;
assign sext_ln295_30_fu_2985_p1 = sub_ln295_45_fu_2979_p2;
assign sext_ln295_31_fu_4537_p1 = sub_ln295_46_reg_6185;
assign sext_ln295_3_fu_3137_p1 = sub_ln295_4_reg_5499;
assign sext_ln295_4_fu_1568_p1 = sub_ln295_6_fu_1562_p2;
assign sext_ln295_5_fu_3237_p1 = sub_ln295_7_reg_5548;
assign sext_ln295_6_fu_1677_p1 = sub_ln295_9_fu_1671_p2;
assign sext_ln295_7_fu_3337_p1 = sub_ln295_10_reg_5597;
assign sext_ln295_8_fu_1786_p1 = sub_ln295_12_fu_1780_p2;
assign sext_ln295_9_fu_3437_p1 = sub_ln295_13_reg_5646;
assign sext_ln295_fu_1350_p1 = sub_ln295_fu_1344_p2;
assign shl_ln295_10_fu_4048_p2 = zext_ln295_32_fu_4045_p1 << sext_ln295_21_fu_4037_p1;
assign shl_ln295_11_fu_4148_p2 = zext_ln295_35_fu_4145_p1 << sext_ln295_23_fu_4137_p1;
assign shl_ln295_12_fu_4248_p2 = zext_ln295_38_fu_4245_p1 << sext_ln295_25_fu_4237_p1;
assign shl_ln295_13_fu_4348_p2 = zext_ln295_41_fu_4345_p1 << sext_ln295_27_fu_4337_p1;
assign shl_ln295_14_fu_4448_p2 = zext_ln295_44_fu_4445_p1 << sext_ln295_29_fu_4437_p1;
assign shl_ln295_15_fu_4548_p2 = zext_ln295_47_fu_4545_p1 << sext_ln295_31_fu_4537_p1;
assign shl_ln295_1_fu_3148_p2 = zext_ln295_5_fu_3145_p1 << sext_ln295_3_fu_3137_p1;
assign shl_ln295_2_fu_3248_p2 = zext_ln295_8_fu_3245_p1 << sext_ln295_5_fu_3237_p1;
assign shl_ln295_3_fu_3348_p2 = zext_ln295_11_fu_3345_p1 << sext_ln295_7_fu_3337_p1;
assign shl_ln295_4_fu_3448_p2 = zext_ln295_14_fu_3445_p1 << sext_ln295_9_fu_3437_p1;
assign shl_ln295_5_fu_3548_p2 = zext_ln295_17_fu_3545_p1 << sext_ln295_11_fu_3537_p1;
assign shl_ln295_6_fu_3648_p2 = zext_ln295_20_fu_3645_p1 << sext_ln295_13_fu_3637_p1;
assign shl_ln295_7_fu_3748_p2 = zext_ln295_23_fu_3745_p1 << sext_ln295_15_fu_3737_p1;
assign shl_ln295_8_fu_3848_p2 = zext_ln295_26_fu_3845_p1 << sext_ln295_17_fu_3837_p1;
assign shl_ln295_9_fu_3948_p2 = zext_ln295_29_fu_3945_p1 << sext_ln295_19_fu_3937_p1;
assign shl_ln295_fu_3048_p2 = zext_ln295_2_fu_3045_p1 << sext_ln295_1_fu_3037_p1;
assign sub_ln295_10_fu_1699_p2 = ($signed(9'd0) - $signed(sub_ln295_9_fu_1671_p2));
assign sub_ln295_11_fu_4670_p2 = (4'd0 - ref_tmp99_6_reg_6218);
assign sub_ln295_12_fu_1780_p2 = (9'd150 - zext_ln295_12_fu_1754_p1);
assign sub_ln295_13_fu_1808_p2 = ($signed(9'd0) - $signed(sub_ln295_12_fu_1780_p2));
assign sub_ln295_14_fu_4681_p2 = (4'd0 - ref_tmp99_8_reg_6224);
assign sub_ln295_15_fu_1889_p2 = (9'd150 - zext_ln295_15_fu_1863_p1);
assign sub_ln295_16_fu_1917_p2 = ($signed(9'd0) - $signed(sub_ln295_15_fu_1889_p2));
assign sub_ln295_17_fu_4692_p2 = (4'd0 - ref_tmp99_s_reg_6230);
assign sub_ln295_18_fu_1998_p2 = (9'd150 - zext_ln295_18_fu_1972_p1);
assign sub_ln295_19_fu_2026_p2 = ($signed(9'd0) - $signed(sub_ln295_18_fu_1998_p2));
assign sub_ln295_1_fu_1372_p2 = ($signed(9'd0) - $signed(sub_ln295_fu_1344_p2));
assign sub_ln295_20_fu_4703_p2 = (4'd0 - ref_tmp99_1_reg_6236);
assign sub_ln295_21_fu_2107_p2 = (9'd150 - zext_ln295_21_fu_2081_p1);
assign sub_ln295_22_fu_2135_p2 = ($signed(9'd0) - $signed(sub_ln295_21_fu_2107_p2));
assign sub_ln295_23_fu_4714_p2 = (4'd0 - ref_tmp99_3_reg_6242);
assign sub_ln295_24_fu_2216_p2 = (9'd150 - zext_ln295_24_fu_2190_p1);
assign sub_ln295_25_fu_2244_p2 = ($signed(9'd0) - $signed(sub_ln295_24_fu_2216_p2));
assign sub_ln295_26_fu_4725_p2 = (4'd0 - ref_tmp99_5_reg_6248);
assign sub_ln295_27_fu_2325_p2 = (9'd150 - zext_ln295_27_fu_2299_p1);
assign sub_ln295_28_fu_2353_p2 = ($signed(9'd0) - $signed(sub_ln295_27_fu_2325_p2));
assign sub_ln295_29_fu_4736_p2 = (4'd0 - ref_tmp99_7_reg_6254);
assign sub_ln295_2_fu_4637_p2 = (4'd0 - ref_tmp_reg_6200);
assign sub_ln295_30_fu_2434_p2 = (9'd150 - zext_ln295_30_fu_2408_p1);
assign sub_ln295_31_fu_2462_p2 = ($signed(9'd0) - $signed(sub_ln295_30_fu_2434_p2));
assign sub_ln295_32_fu_4747_p2 = (4'd0 - ref_tmp99_9_reg_6260);
assign sub_ln295_33_fu_2543_p2 = (9'd150 - zext_ln295_33_fu_2517_p1);
assign sub_ln295_34_fu_2571_p2 = ($signed(9'd0) - $signed(sub_ln295_33_fu_2543_p2));
assign sub_ln295_35_fu_4758_p2 = (4'd0 - ref_tmp99_10_reg_6266);
assign sub_ln295_36_fu_2652_p2 = (9'd150 - zext_ln295_36_fu_2626_p1);
assign sub_ln295_37_fu_2680_p2 = ($signed(9'd0) - $signed(sub_ln295_36_fu_2652_p2));
assign sub_ln295_38_fu_4769_p2 = (4'd0 - ref_tmp99_11_reg_6272);
assign sub_ln295_39_fu_2761_p2 = (9'd150 - zext_ln295_39_fu_2735_p1);
assign sub_ln295_3_fu_1453_p2 = (9'd150 - zext_ln295_3_fu_1427_p1);
assign sub_ln295_40_fu_2789_p2 = ($signed(9'd0) - $signed(sub_ln295_39_fu_2761_p2));
assign sub_ln295_41_fu_4780_p2 = (4'd0 - ref_tmp99_12_reg_6278);
assign sub_ln295_42_fu_2870_p2 = (9'd150 - zext_ln295_42_fu_2844_p1);
assign sub_ln295_43_fu_2898_p2 = ($signed(9'd0) - $signed(sub_ln295_42_fu_2870_p2));
assign sub_ln295_44_fu_4791_p2 = (4'd0 - ref_tmp99_13_reg_6284);
assign sub_ln295_45_fu_2979_p2 = (9'd150 - zext_ln295_45_fu_2953_p1);
assign sub_ln295_46_fu_3007_p2 = ($signed(9'd0) - $signed(sub_ln295_45_fu_2979_p2));
assign sub_ln295_47_fu_4802_p2 = (4'd0 - ref_tmp99_14_reg_6290);
assign sub_ln295_4_fu_1481_p2 = ($signed(9'd0) - $signed(sub_ln295_3_fu_1453_p2));
assign sub_ln295_5_fu_4648_p2 = (4'd0 - ref_tmp99_2_reg_6206);
assign sub_ln295_6_fu_1562_p2 = (9'd150 - zext_ln295_6_fu_1536_p1);
assign sub_ln295_7_fu_1590_p2 = ($signed(9'd0) - $signed(sub_ln295_6_fu_1562_p2));
assign sub_ln295_8_fu_4659_p2 = (4'd0 - ref_tmp99_4_reg_6212);
assign sub_ln295_9_fu_1671_p2 = (9'd150 - zext_ln295_9_fu_1645_p1);
assign sub_ln295_fu_1344_p2 = (9'd150 - zext_ln295_fu_1318_p1);
assign tmp_79_fu_1417_p4 = {{bitcast_ln725_1_fu_1402_p1[30:23]}};
assign tmp_80_fu_1526_p4 = {{bitcast_ln725_2_fu_1511_p1[30:23]}};
assign tmp_81_fu_1635_p4 = {{bitcast_ln725_3_fu_1620_p1[30:23]}};
assign tmp_82_fu_1744_p4 = {{bitcast_ln725_4_fu_1729_p1[30:23]}};
assign tmp_83_fu_1853_p4 = {{bitcast_ln725_5_fu_1838_p1[30:23]}};
assign tmp_84_fu_1962_p4 = {{bitcast_ln725_6_fu_1947_p1[30:23]}};
assign tmp_85_fu_2071_p4 = {{bitcast_ln725_7_fu_2056_p1[30:23]}};
assign tmp_86_fu_2180_p4 = {{bitcast_ln725_8_fu_2165_p1[30:23]}};
assign tmp_87_fu_2289_p4 = {{bitcast_ln725_9_fu_2274_p1[30:23]}};
assign tmp_88_fu_2398_p4 = {{bitcast_ln725_10_fu_2383_p1[30:23]}};
assign tmp_89_fu_2507_p4 = {{bitcast_ln725_11_fu_2492_p1[30:23]}};
assign tmp_90_fu_2616_p4 = {{bitcast_ln725_12_fu_2601_p1[30:23]}};
assign tmp_91_fu_2725_p4 = {{bitcast_ln725_13_fu_2710_p1[30:23]}};
assign tmp_92_fu_2834_p4 = {{bitcast_ln725_14_fu_2819_p1[30:23]}};
assign tmp_93_fu_2943_p4 = {{bitcast_ln725_15_fu_2928_p1[30:23]}};
assign tmp_s_fu_1308_p4 = {{bitcast_ln725_fu_1293_p1[30:23]}};
assign trunc_ln295_10_fu_1514_p1 = bitcast_ln725_2_fu_1511_p1[30:0];
assign trunc_ln295_11_fu_1540_p1 = bitcast_ln725_2_fu_1511_p1[22:0];
assign trunc_ln295_12_fu_1544_p1 = bitcast_ln725_2_fu_1511_p1[3:0];
assign trunc_ln295_13_fu_1616_p1 = lshr_ln295_2_fu_1610_p2[3:0];
assign trunc_ln295_15_fu_1623_p1 = bitcast_ln725_3_fu_1620_p1[30:0];
assign trunc_ln295_16_fu_1649_p1 = bitcast_ln725_3_fu_1620_p1[22:0];
assign trunc_ln295_17_fu_1653_p1 = bitcast_ln725_3_fu_1620_p1[3:0];
assign trunc_ln295_18_fu_1725_p1 = lshr_ln295_3_fu_1719_p2[3:0];
assign trunc_ln295_1_fu_1322_p1 = bitcast_ln725_fu_1293_p1[22:0];
assign trunc_ln295_20_fu_1732_p1 = bitcast_ln725_4_fu_1729_p1[30:0];
assign trunc_ln295_21_fu_1758_p1 = bitcast_ln725_4_fu_1729_p1[22:0];
assign trunc_ln295_22_fu_1762_p1 = bitcast_ln725_4_fu_1729_p1[3:0];
assign trunc_ln295_23_fu_1834_p1 = lshr_ln295_4_fu_1828_p2[3:0];
assign trunc_ln295_25_fu_1841_p1 = bitcast_ln725_5_fu_1838_p1[30:0];
assign trunc_ln295_26_fu_1867_p1 = bitcast_ln725_5_fu_1838_p1[22:0];
assign trunc_ln295_27_fu_1871_p1 = bitcast_ln725_5_fu_1838_p1[3:0];
assign trunc_ln295_28_fu_1943_p1 = lshr_ln295_5_fu_1937_p2[3:0];
assign trunc_ln295_2_fu_1326_p1 = bitcast_ln725_fu_1293_p1[3:0];
assign trunc_ln295_30_fu_1950_p1 = bitcast_ln725_6_fu_1947_p1[30:0];
assign trunc_ln295_31_fu_1976_p1 = bitcast_ln725_6_fu_1947_p1[22:0];
assign trunc_ln295_32_fu_1980_p1 = bitcast_ln725_6_fu_1947_p1[3:0];
assign trunc_ln295_33_fu_2052_p1 = lshr_ln295_6_fu_2046_p2[3:0];
assign trunc_ln295_35_fu_2059_p1 = bitcast_ln725_7_fu_2056_p1[30:0];
assign trunc_ln295_36_fu_2085_p1 = bitcast_ln725_7_fu_2056_p1[22:0];
assign trunc_ln295_37_fu_2089_p1 = bitcast_ln725_7_fu_2056_p1[3:0];
assign trunc_ln295_38_fu_2161_p1 = lshr_ln295_7_fu_2155_p2[3:0];
assign trunc_ln295_3_fu_1398_p1 = lshr_ln295_fu_1392_p2[3:0];
assign trunc_ln295_40_fu_2168_p1 = bitcast_ln725_8_fu_2165_p1[30:0];
assign trunc_ln295_41_fu_2194_p1 = bitcast_ln725_8_fu_2165_p1[22:0];
assign trunc_ln295_42_fu_2198_p1 = bitcast_ln725_8_fu_2165_p1[3:0];
assign trunc_ln295_43_fu_2270_p1 = lshr_ln295_8_fu_2264_p2[3:0];
assign trunc_ln295_45_fu_2277_p1 = bitcast_ln725_9_fu_2274_p1[30:0];
assign trunc_ln295_46_fu_2303_p1 = bitcast_ln725_9_fu_2274_p1[22:0];
assign trunc_ln295_47_fu_2307_p1 = bitcast_ln725_9_fu_2274_p1[3:0];
assign trunc_ln295_48_fu_2379_p1 = lshr_ln295_9_fu_2373_p2[3:0];
assign trunc_ln295_50_fu_2386_p1 = bitcast_ln725_10_fu_2383_p1[30:0];
assign trunc_ln295_51_fu_2412_p1 = bitcast_ln725_10_fu_2383_p1[22:0];
assign trunc_ln295_52_fu_2416_p1 = bitcast_ln725_10_fu_2383_p1[3:0];
assign trunc_ln295_53_fu_2488_p1 = lshr_ln295_10_fu_2482_p2[3:0];
assign trunc_ln295_55_fu_2495_p1 = bitcast_ln725_11_fu_2492_p1[30:0];
assign trunc_ln295_56_fu_2521_p1 = bitcast_ln725_11_fu_2492_p1[22:0];
assign trunc_ln295_57_fu_2525_p1 = bitcast_ln725_11_fu_2492_p1[3:0];
assign trunc_ln295_58_fu_2597_p1 = lshr_ln295_11_fu_2591_p2[3:0];
assign trunc_ln295_5_fu_1405_p1 = bitcast_ln725_1_fu_1402_p1[30:0];
assign trunc_ln295_60_fu_2604_p1 = bitcast_ln725_12_fu_2601_p1[30:0];
assign trunc_ln295_61_fu_2630_p1 = bitcast_ln725_12_fu_2601_p1[22:0];
assign trunc_ln295_62_fu_2634_p1 = bitcast_ln725_12_fu_2601_p1[3:0];
assign trunc_ln295_63_fu_2706_p1 = lshr_ln295_12_fu_2700_p2[3:0];
assign trunc_ln295_65_fu_2713_p1 = bitcast_ln725_13_fu_2710_p1[30:0];
assign trunc_ln295_66_fu_2739_p1 = bitcast_ln725_13_fu_2710_p1[22:0];
assign trunc_ln295_67_fu_2743_p1 = bitcast_ln725_13_fu_2710_p1[3:0];
assign trunc_ln295_68_fu_2815_p1 = lshr_ln295_13_fu_2809_p2[3:0];
assign trunc_ln295_6_fu_1431_p1 = bitcast_ln725_1_fu_1402_p1[22:0];
assign trunc_ln295_70_fu_2822_p1 = bitcast_ln725_14_fu_2819_p1[30:0];
assign trunc_ln295_71_fu_2848_p1 = bitcast_ln725_14_fu_2819_p1[22:0];
assign trunc_ln295_72_fu_2852_p1 = bitcast_ln725_14_fu_2819_p1[3:0];
assign trunc_ln295_73_fu_2924_p1 = lshr_ln295_14_fu_2918_p2[3:0];
assign trunc_ln295_75_fu_2931_p1 = bitcast_ln725_15_fu_2928_p1[30:0];
assign trunc_ln295_76_fu_2957_p1 = bitcast_ln725_15_fu_2928_p1[22:0];
assign trunc_ln295_77_fu_2961_p1 = bitcast_ln725_15_fu_2928_p1[3:0];
assign trunc_ln295_78_fu_3033_p1 = lshr_ln295_15_fu_3027_p2[3:0];
assign trunc_ln295_7_fu_1435_p1 = bitcast_ln725_1_fu_1402_p1[3:0];
assign trunc_ln295_8_fu_1507_p1 = lshr_ln295_1_fu_1501_p2[3:0];
assign trunc_ln295_fu_1296_p1 = bitcast_ln725_fu_1293_p1[30:0];
assign xor_ln295_10_fu_3372_p2 = (or_ln295_6_fu_3368_p2 ^ 1'd1);
assign xor_ln295_11_fu_3393_p2 = (or_ln295_7_fu_3388_p2 ^ 1'd1);
assign xor_ln295_12_fu_3458_p2 = (icmp_ln295_20_reg_5623 ^ 1'd1);
assign xor_ln295_13_fu_3472_p2 = (or_ln295_8_fu_3468_p2 ^ 1'd1);
assign xor_ln295_14_fu_3493_p2 = (or_ln295_9_fu_3488_p2 ^ 1'd1);
assign xor_ln295_15_fu_3558_p2 = (icmp_ln295_25_reg_5672 ^ 1'd1);
assign xor_ln295_16_fu_3572_p2 = (or_ln295_10_fu_3568_p2 ^ 1'd1);
assign xor_ln295_17_fu_3593_p2 = (or_ln295_11_fu_3588_p2 ^ 1'd1);
assign xor_ln295_18_fu_3658_p2 = (icmp_ln295_30_reg_5721 ^ 1'd1);
assign xor_ln295_19_fu_3672_p2 = (or_ln295_12_fu_3668_p2 ^ 1'd1);
assign xor_ln295_1_fu_3072_p2 = (or_ln295_fu_3068_p2 ^ 1'd1);
assign xor_ln295_20_fu_3693_p2 = (or_ln295_13_fu_3688_p2 ^ 1'd1);
assign xor_ln295_21_fu_3758_p2 = (icmp_ln295_35_reg_5770 ^ 1'd1);
assign xor_ln295_22_fu_3772_p2 = (or_ln295_14_fu_3768_p2 ^ 1'd1);
assign xor_ln295_23_fu_3793_p2 = (or_ln295_15_fu_3788_p2 ^ 1'd1);
assign xor_ln295_24_fu_3858_p2 = (icmp_ln295_40_reg_5819 ^ 1'd1);
assign xor_ln295_25_fu_3872_p2 = (or_ln295_16_fu_3868_p2 ^ 1'd1);
assign xor_ln295_26_fu_3893_p2 = (or_ln295_17_fu_3888_p2 ^ 1'd1);
assign xor_ln295_27_fu_3958_p2 = (icmp_ln295_45_reg_5868 ^ 1'd1);
assign xor_ln295_28_fu_3972_p2 = (or_ln295_18_fu_3968_p2 ^ 1'd1);
assign xor_ln295_29_fu_3993_p2 = (or_ln295_19_fu_3988_p2 ^ 1'd1);
assign xor_ln295_2_fu_3093_p2 = (or_ln295_1_fu_3088_p2 ^ 1'd1);
assign xor_ln295_30_fu_4058_p2 = (icmp_ln295_50_reg_5917 ^ 1'd1);
assign xor_ln295_31_fu_4072_p2 = (or_ln295_20_fu_4068_p2 ^ 1'd1);
assign xor_ln295_32_fu_4093_p2 = (or_ln295_21_fu_4088_p2 ^ 1'd1);
assign xor_ln295_33_fu_4158_p2 = (icmp_ln295_55_reg_5966 ^ 1'd1);
assign xor_ln295_34_fu_4172_p2 = (or_ln295_22_fu_4168_p2 ^ 1'd1);
assign xor_ln295_35_fu_4193_p2 = (or_ln295_23_fu_4188_p2 ^ 1'd1);
assign xor_ln295_36_fu_4258_p2 = (icmp_ln295_60_reg_6015 ^ 1'd1);
assign xor_ln295_37_fu_4272_p2 = (or_ln295_24_fu_4268_p2 ^ 1'd1);
assign xor_ln295_38_fu_4293_p2 = (or_ln295_25_fu_4288_p2 ^ 1'd1);
assign xor_ln295_39_fu_4358_p2 = (icmp_ln295_65_reg_6064 ^ 1'd1);
assign xor_ln295_3_fu_3158_p2 = (icmp_ln295_5_reg_5476 ^ 1'd1);
assign xor_ln295_40_fu_4372_p2 = (or_ln295_26_fu_4368_p2 ^ 1'd1);
assign xor_ln295_41_fu_4393_p2 = (or_ln295_27_fu_4388_p2 ^ 1'd1);
assign xor_ln295_42_fu_4458_p2 = (icmp_ln295_70_reg_6113 ^ 1'd1);
assign xor_ln295_43_fu_4472_p2 = (or_ln295_28_fu_4468_p2 ^ 1'd1);
assign xor_ln295_44_fu_4493_p2 = (or_ln295_29_fu_4488_p2 ^ 1'd1);
assign xor_ln295_45_fu_4558_p2 = (icmp_ln295_75_reg_6162 ^ 1'd1);
assign xor_ln295_46_fu_4572_p2 = (or_ln295_30_fu_4568_p2 ^ 1'd1);
assign xor_ln295_47_fu_4593_p2 = (or_ln295_31_fu_4588_p2 ^ 1'd1);
assign xor_ln295_4_fu_3172_p2 = (or_ln295_2_fu_3168_p2 ^ 1'd1);
assign xor_ln295_5_fu_3193_p2 = (or_ln295_3_fu_3188_p2 ^ 1'd1);
assign xor_ln295_6_fu_3258_p2 = (icmp_ln295_10_reg_5525 ^ 1'd1);
assign xor_ln295_7_fu_3272_p2 = (or_ln295_4_fu_3268_p2 ^ 1'd1);
assign xor_ln295_8_fu_3293_p2 = (or_ln295_5_fu_3288_p2 ^ 1'd1);
assign xor_ln295_9_fu_3358_p2 = (icmp_ln295_15_reg_5574 ^ 1'd1);
assign xor_ln295_fu_3058_p2 = (icmp_ln295_reg_5427 ^ 1'd1);
assign zext_ln150_fu_4849_p1 = or_ln150_s_fu_4813_p17;
assign zext_ln295_10_cast_fu_1657_p3 = {{1'd1}, {trunc_ln295_16_fu_1649_p1}};
assign zext_ln295_10_fu_1715_p1 = zext_ln295_10_cast_fu_1657_p3;
assign zext_ln295_11_fu_3345_p1 = trunc_ln295_17_reg_5568;
assign zext_ln295_12_fu_1754_p1 = tmp_82_fu_1744_p4;
assign zext_ln295_13_cast_fu_1766_p3 = {{1'd1}, {trunc_ln295_21_fu_1758_p1}};
assign zext_ln295_13_fu_1824_p1 = zext_ln295_13_cast_fu_1766_p3;
assign zext_ln295_14_fu_3445_p1 = trunc_ln295_22_reg_5617;
assign zext_ln295_15_fu_1863_p1 = tmp_83_fu_1853_p4;
assign zext_ln295_16_cast_fu_1875_p3 = {{1'd1}, {trunc_ln295_26_fu_1867_p1}};
assign zext_ln295_16_fu_1933_p1 = zext_ln295_16_cast_fu_1875_p3;
assign zext_ln295_17_fu_3545_p1 = trunc_ln295_27_reg_5666;
assign zext_ln295_18_fu_1972_p1 = tmp_84_fu_1962_p4;
assign zext_ln295_19_cast_fu_1984_p3 = {{1'd1}, {trunc_ln295_31_fu_1976_p1}};
assign zext_ln295_19_fu_2042_p1 = zext_ln295_19_cast_fu_1984_p3;
assign zext_ln295_1_cast_fu_1330_p3 = {{1'd1}, {trunc_ln295_1_fu_1322_p1}};
assign zext_ln295_1_fu_1388_p1 = zext_ln295_1_cast_fu_1330_p3;
assign zext_ln295_20_fu_3645_p1 = trunc_ln295_32_reg_5715;
assign zext_ln295_21_fu_2081_p1 = tmp_85_fu_2071_p4;
assign zext_ln295_22_cast_fu_2093_p3 = {{1'd1}, {trunc_ln295_36_fu_2085_p1}};
assign zext_ln295_22_fu_2151_p1 = zext_ln295_22_cast_fu_2093_p3;
assign zext_ln295_23_fu_3745_p1 = trunc_ln295_37_reg_5764;
assign zext_ln295_24_fu_2190_p1 = tmp_86_fu_2180_p4;
assign zext_ln295_25_cast_fu_2202_p3 = {{1'd1}, {trunc_ln295_41_fu_2194_p1}};
assign zext_ln295_25_fu_2260_p1 = zext_ln295_25_cast_fu_2202_p3;
assign zext_ln295_26_fu_3845_p1 = trunc_ln295_42_reg_5813;
assign zext_ln295_27_fu_2299_p1 = tmp_87_fu_2289_p4;
assign zext_ln295_28_cast_fu_2311_p3 = {{1'd1}, {trunc_ln295_46_fu_2303_p1}};
assign zext_ln295_28_fu_2369_p1 = zext_ln295_28_cast_fu_2311_p3;
assign zext_ln295_29_fu_3945_p1 = trunc_ln295_47_reg_5862;
assign zext_ln295_2_fu_3045_p1 = trunc_ln295_2_reg_5421;
assign zext_ln295_30_fu_2408_p1 = tmp_88_fu_2398_p4;
assign zext_ln295_31_cast_fu_2420_p3 = {{1'd1}, {trunc_ln295_51_fu_2412_p1}};
assign zext_ln295_31_fu_2478_p1 = zext_ln295_31_cast_fu_2420_p3;
assign zext_ln295_32_fu_4045_p1 = trunc_ln295_52_reg_5911;
assign zext_ln295_33_fu_2517_p1 = tmp_89_fu_2507_p4;
assign zext_ln295_34_cast_fu_2529_p3 = {{1'd1}, {trunc_ln295_56_fu_2521_p1}};
assign zext_ln295_34_fu_2587_p1 = zext_ln295_34_cast_fu_2529_p3;
assign zext_ln295_35_fu_4145_p1 = trunc_ln295_57_reg_5960;
assign zext_ln295_36_fu_2626_p1 = tmp_90_fu_2616_p4;
assign zext_ln295_37_cast_fu_2638_p3 = {{1'd1}, {trunc_ln295_61_fu_2630_p1}};
assign zext_ln295_37_fu_2696_p1 = zext_ln295_37_cast_fu_2638_p3;
assign zext_ln295_38_fu_4245_p1 = trunc_ln295_62_reg_6009;
assign zext_ln295_39_fu_2735_p1 = tmp_91_fu_2725_p4;
assign zext_ln295_3_fu_1427_p1 = tmp_79_fu_1417_p4;
assign zext_ln295_40_cast_fu_2747_p3 = {{1'd1}, {trunc_ln295_66_fu_2739_p1}};
assign zext_ln295_40_fu_2805_p1 = zext_ln295_40_cast_fu_2747_p3;
assign zext_ln295_41_fu_4345_p1 = trunc_ln295_67_reg_6058;
assign zext_ln295_42_fu_2844_p1 = tmp_92_fu_2834_p4;
assign zext_ln295_43_cast_fu_2856_p3 = {{1'd1}, {trunc_ln295_71_fu_2848_p1}};
assign zext_ln295_43_fu_2914_p1 = zext_ln295_43_cast_fu_2856_p3;
assign zext_ln295_44_fu_4445_p1 = trunc_ln295_72_reg_6107;
assign zext_ln295_45_fu_2953_p1 = tmp_93_fu_2943_p4;
assign zext_ln295_46_cast_fu_2965_p3 = {{1'd1}, {trunc_ln295_76_fu_2957_p1}};
assign zext_ln295_46_fu_3023_p1 = zext_ln295_46_cast_fu_2965_p3;
assign zext_ln295_47_fu_4545_p1 = trunc_ln295_77_reg_6156;
assign zext_ln295_4_cast_fu_1439_p3 = {{1'd1}, {trunc_ln295_6_fu_1431_p1}};
assign zext_ln295_4_fu_1497_p1 = zext_ln295_4_cast_fu_1439_p3;
assign zext_ln295_5_fu_3145_p1 = trunc_ln295_7_reg_5470;
assign zext_ln295_6_fu_1536_p1 = tmp_80_fu_1526_p4;
assign zext_ln295_7_cast_fu_1548_p3 = {{1'd1}, {trunc_ln295_11_fu_1540_p1}};
assign zext_ln295_7_fu_1606_p1 = zext_ln295_7_cast_fu_1548_p3;
assign zext_ln295_8_fu_3245_p1 = trunc_ln295_12_reg_5519;
assign zext_ln295_9_fu_1645_p1 = tmp_81_fu_1635_p4;
assign zext_ln295_fu_1318_p1 = tmp_s_fu_1308_p4;
assign zext_ln823_fu_989_p1 = ap_sig_allocacmp_k;
endmodule