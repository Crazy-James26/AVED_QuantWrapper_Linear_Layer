`timescale 1 ns / 1 ps
// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================
 
(* CORE_GENERATION_INFO="QuantWrapper_Linear_Layer_q_tb_QuantWrapper_Linear_Layer_q_tb,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcv80-lsva4737-2MHP-e-S,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.000000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=354,HLS_SYN_LUT=616,HLS_VERSION=2024_1}" *)module __rs_QuantWrapper_Linear_Layer_q_tb_aux #(
    parameter C_S_AXI_CONTROL_DATA_WIDTH  = 32,
    parameter C_S_AXI_CONTROL_ADDR_WIDTH  = 7,
    parameter C_S_AXI_DATA_WIDTH          = 32,
    parameter C_S_AXI_CONTROL_WSTRB_WIDTH = 32'd4,
    parameter C_S_AXI_WSTRB_WIDTH         = 32'd4
) (
    input wire                                           s_axi_control_AWVALID,
    output wire                                          s_axi_control_AWREADY,
    input wire  [    (C_S_AXI_CONTROL_ADDR_WIDTH - 1):0] s_axi_control_AWADDR,
    input wire                                           s_axi_control_WVALID,
    output wire                                          s_axi_control_WREADY,
    input wire  [    (C_S_AXI_CONTROL_DATA_WIDTH - 1):0] s_axi_control_WDATA,
    input wire  [   (C_S_AXI_CONTROL_WSTRB_WIDTH - 1):0] s_axi_control_WSTRB,
    input wire                                           s_axi_control_ARVALID,
    output wire                                          s_axi_control_ARREADY,
    input wire  [    (C_S_AXI_CONTROL_ADDR_WIDTH - 1):0] s_axi_control_ARADDR,
    output wire                                          s_axi_control_RVALID,
    input wire                                           s_axi_control_RREADY,
    output wire [    (C_S_AXI_CONTROL_DATA_WIDTH - 1):0] s_axi_control_RDATA,
    output wire [                                   1:0] s_axi_control_RRESP,
    output wire                                          s_axi_control_BVALID,
    input wire                                           s_axi_control_BREADY,
    output wire [                                   1:0] s_axi_control_BRESP,
    input wire                                           ap_clk,
    input wire                                           ap_rst_n,
    output wire                                          interrupt,
    output wire [                                  63:0] m_axi_input_mmap_ARADDR,
    output wire [                                   1:0] m_axi_input_mmap_ARBURST,
    output wire [                                   3:0] m_axi_input_mmap_ARCACHE,
    output wire [                                   0:0] m_axi_input_mmap_ARID,
    output wire [                                   7:0] m_axi_input_mmap_ARLEN,
    output wire                                          m_axi_input_mmap_ARLOCK,
    output wire [                                   2:0] m_axi_input_mmap_ARPROT,
    output wire [                                   3:0] m_axi_input_mmap_ARQOS,
    input wire                                           m_axi_input_mmap_ARREADY,
    output wire [                                   2:0] m_axi_input_mmap_ARSIZE,
    output wire                                          m_axi_input_mmap_ARVALID,
    output wire [                                  63:0] m_axi_input_mmap_AWADDR,
    output wire [                                   1:0] m_axi_input_mmap_AWBURST,
    output wire [                                   3:0] m_axi_input_mmap_AWCACHE,
    output wire [                                   0:0] m_axi_input_mmap_AWID,
    output wire [                                   7:0] m_axi_input_mmap_AWLEN,
    output wire                                          m_axi_input_mmap_AWLOCK,
    output wire [                                   2:0] m_axi_input_mmap_AWPROT,
    output wire [                                   3:0] m_axi_input_mmap_AWQOS,
    input wire                                           m_axi_input_mmap_AWREADY,
    output wire [                                   2:0] m_axi_input_mmap_AWSIZE,
    output wire                                          m_axi_input_mmap_AWVALID,
    input wire  [                                   0:0] m_axi_input_mmap_BID,
    output wire                                          m_axi_input_mmap_BREADY,
    input wire  [                                   1:0] m_axi_input_mmap_BRESP,
    input wire                                           m_axi_input_mmap_BVALID,
    input wire  [                                 511:0] m_axi_input_mmap_RDATA,
    input wire  [                                   0:0] m_axi_input_mmap_RID,
    input wire                                           m_axi_input_mmap_RLAST,
    output wire                                          m_axi_input_mmap_RREADY,
    input wire  [                                   1:0] m_axi_input_mmap_RRESP,
    input wire                                           m_axi_input_mmap_RVALID,
    output wire [                                 511:0] m_axi_input_mmap_WDATA,
    output wire                                          m_axi_input_mmap_WLAST,
    input wire                                           m_axi_input_mmap_WREADY,
    output wire [                                  63:0] m_axi_input_mmap_WSTRB,
    output wire                                          m_axi_input_mmap_WVALID,
    output wire [                                  63:0] m_axi_output_mmap_ARADDR,
    output wire [                                   1:0] m_axi_output_mmap_ARBURST,
    output wire [                                   3:0] m_axi_output_mmap_ARCACHE,
    output wire [                                   0:0] m_axi_output_mmap_ARID,
    output wire [                                   7:0] m_axi_output_mmap_ARLEN,
    output wire                                          m_axi_output_mmap_ARLOCK,
    output wire [                                   2:0] m_axi_output_mmap_ARPROT,
    output wire [                                   3:0] m_axi_output_mmap_ARQOS,
    input wire                                           m_axi_output_mmap_ARREADY,
    output wire [                                   2:0] m_axi_output_mmap_ARSIZE,
    output wire                                          m_axi_output_mmap_ARVALID,
    output wire [                                  63:0] m_axi_output_mmap_AWADDR,
    output wire [                                   1:0] m_axi_output_mmap_AWBURST,
    output wire [                                   3:0] m_axi_output_mmap_AWCACHE,
    output wire [                                   0:0] m_axi_output_mmap_AWID,
    output wire [                                   7:0] m_axi_output_mmap_AWLEN,
    output wire                                          m_axi_output_mmap_AWLOCK,
    output wire [                                   2:0] m_axi_output_mmap_AWPROT,
    output wire [                                   3:0] m_axi_output_mmap_AWQOS,
    input wire                                           m_axi_output_mmap_AWREADY,
    output wire [                                   2:0] m_axi_output_mmap_AWSIZE,
    output wire                                          m_axi_output_mmap_AWVALID,
    input wire  [                                   0:0] m_axi_output_mmap_BID,
    output wire                                          m_axi_output_mmap_BREADY,
    input wire  [                                   1:0] m_axi_output_mmap_BRESP,
    input wire                                           m_axi_output_mmap_BVALID,
    input wire  [                                 511:0] m_axi_output_mmap_RDATA,
    input wire  [                                   0:0] m_axi_output_mmap_RID,
    input wire                                           m_axi_output_mmap_RLAST,
    output wire                                          m_axi_output_mmap_RREADY,
    input wire  [                                   1:0] m_axi_output_mmap_RRESP,
    input wire                                           m_axi_output_mmap_RVALID,
    output wire [                                 511:0] m_axi_output_mmap_WDATA,
    output wire                                          m_axi_output_mmap_WLAST,
    input wire                                           m_axi_output_mmap_WREADY,
    output wire [                                  63:0] m_axi_output_mmap_WSTRB,
    output wire                                          m_axi_output_mmap_WVALID,
    output wire [                                  63:0] m_axi_quant_weight_mmap_ARADDR,
    output wire [                                   1:0] m_axi_quant_weight_mmap_ARBURST,
    output wire [                                   3:0] m_axi_quant_weight_mmap_ARCACHE,
    output wire [                                   0:0] m_axi_quant_weight_mmap_ARID,
    output wire [                                   7:0] m_axi_quant_weight_mmap_ARLEN,
    output wire                                          m_axi_quant_weight_mmap_ARLOCK,
    output wire [                                   2:0] m_axi_quant_weight_mmap_ARPROT,
    output wire [                                   3:0] m_axi_quant_weight_mmap_ARQOS,
    input wire                                           m_axi_quant_weight_mmap_ARREADY,
    output wire [                                   2:0] m_axi_quant_weight_mmap_ARSIZE,
    output wire                                          m_axi_quant_weight_mmap_ARVALID,
    output wire [                                  63:0] m_axi_quant_weight_mmap_AWADDR,
    output wire [                                   1:0] m_axi_quant_weight_mmap_AWBURST,
    output wire [                                   3:0] m_axi_quant_weight_mmap_AWCACHE,
    output wire [                                   0:0] m_axi_quant_weight_mmap_AWID,
    output wire [                                   7:0] m_axi_quant_weight_mmap_AWLEN,
    output wire                                          m_axi_quant_weight_mmap_AWLOCK,
    output wire [                                   2:0] m_axi_quant_weight_mmap_AWPROT,
    output wire [                                   3:0] m_axi_quant_weight_mmap_AWQOS,
    input wire                                           m_axi_quant_weight_mmap_AWREADY,
    output wire [                                   2:0] m_axi_quant_weight_mmap_AWSIZE,
    output wire                                          m_axi_quant_weight_mmap_AWVALID,
    input wire  [                                   0:0] m_axi_quant_weight_mmap_BID,
    output wire                                          m_axi_quant_weight_mmap_BREADY,
    input wire  [                                   1:0] m_axi_quant_weight_mmap_BRESP,
    input wire                                           m_axi_quant_weight_mmap_BVALID,
    input wire  [                                 255:0] m_axi_quant_weight_mmap_RDATA,
    input wire  [                                   0:0] m_axi_quant_weight_mmap_RID,
    input wire                                           m_axi_quant_weight_mmap_RLAST,
    output wire                                          m_axi_quant_weight_mmap_RREADY,
    input wire  [                                   1:0] m_axi_quant_weight_mmap_RRESP,
    input wire                                           m_axi_quant_weight_mmap_RVALID,
    output wire [                                 255:0] m_axi_quant_weight_mmap_WDATA,
    output wire                                          m_axi_quant_weight_mmap_WLAST,
    input wire                                           m_axi_quant_weight_mmap_WREADY,
    output wire [                                  31:0] m_axi_quant_weight_mmap_WSTRB,
    output wire                                          m_axi_quant_weight_mmap_WVALID,
    output wire [                                  63:0] m_axi_weight_s_sum_mmap_ARADDR,
    output wire [                                   1:0] m_axi_weight_s_sum_mmap_ARBURST,
    output wire [                                   3:0] m_axi_weight_s_sum_mmap_ARCACHE,
    output wire [                                   0:0] m_axi_weight_s_sum_mmap_ARID,
    output wire [                                   7:0] m_axi_weight_s_sum_mmap_ARLEN,
    output wire                                          m_axi_weight_s_sum_mmap_ARLOCK,
    output wire [                                   2:0] m_axi_weight_s_sum_mmap_ARPROT,
    output wire [                                   3:0] m_axi_weight_s_sum_mmap_ARQOS,
    input wire                                           m_axi_weight_s_sum_mmap_ARREADY,
    output wire [                                   2:0] m_axi_weight_s_sum_mmap_ARSIZE,
    output wire                                          m_axi_weight_s_sum_mmap_ARVALID,
    output wire [                                  63:0] m_axi_weight_s_sum_mmap_AWADDR,
    output wire [                                   1:0] m_axi_weight_s_sum_mmap_AWBURST,
    output wire [                                   3:0] m_axi_weight_s_sum_mmap_AWCACHE,
    output wire [                                   0:0] m_axi_weight_s_sum_mmap_AWID,
    output wire [                                   7:0] m_axi_weight_s_sum_mmap_AWLEN,
    output wire                                          m_axi_weight_s_sum_mmap_AWLOCK,
    output wire [                                   2:0] m_axi_weight_s_sum_mmap_AWPROT,
    output wire [                                   3:0] m_axi_weight_s_sum_mmap_AWQOS,
    input wire                                           m_axi_weight_s_sum_mmap_AWREADY,
    output wire [                                   2:0] m_axi_weight_s_sum_mmap_AWSIZE,
    output wire                                          m_axi_weight_s_sum_mmap_AWVALID,
    input wire  [                                   0:0] m_axi_weight_s_sum_mmap_BID,
    output wire                                          m_axi_weight_s_sum_mmap_BREADY,
    input wire  [                                   1:0] m_axi_weight_s_sum_mmap_BRESP,
    input wire                                           m_axi_weight_s_sum_mmap_BVALID,
    input wire  [                                  63:0] m_axi_weight_s_sum_mmap_RDATA,
    input wire  [                                   0:0] m_axi_weight_s_sum_mmap_RID,
    input wire                                           m_axi_weight_s_sum_mmap_RLAST,
    output wire                                          m_axi_weight_s_sum_mmap_RREADY,
    input wire  [                                   1:0] m_axi_weight_s_sum_mmap_RRESP,
    input wire                                           m_axi_weight_s_sum_mmap_RVALID,
    output wire [                                  63:0] m_axi_weight_s_sum_mmap_WDATA,
    output wire                                          m_axi_weight_s_sum_mmap_WLAST,
    input wire                                           m_axi_weight_s_sum_mmap_WREADY,
    output wire [                                   7:0] m_axi_weight_s_sum_mmap_WSTRB,
    output wire                                          m_axi_weight_s_sum_mmap_WVALID,
    output wire                                          control_s_axi_U_ACLK,
    output wire                                          control_s_axi_U_ACLK_EN,
    output wire [    (C_S_AXI_CONTROL_ADDR_WIDTH - 1):0] control_s_axi_U_ARADDR,
    output wire                                          control_s_axi_U_ARESET,
    input wire                                           control_s_axi_U_ARREADY,
    output wire                                          control_s_axi_U_ARVALID,
    output wire [    (C_S_AXI_CONTROL_ADDR_WIDTH - 1):0] control_s_axi_U_AWADDR,
    input wire                                           control_s_axi_U_AWREADY,
    output wire                                          control_s_axi_U_AWVALID,
    output wire                                          control_s_axi_U_BREADY,
    input wire  [                                   1:0] control_s_axi_U_BRESP,
    input wire                                           control_s_axi_U_BVALID,
    input wire  [    (C_S_AXI_CONTROL_DATA_WIDTH - 1):0] control_s_axi_U_RDATA,
    output wire                                          control_s_axi_U_RREADY,
    input wire  [                                   1:0] control_s_axi_U_RRESP,
    input wire                                           control_s_axi_U_RVALID,
    output wire [    (C_S_AXI_CONTROL_DATA_WIDTH - 1):0] control_s_axi_U_WDATA,
    input wire                                           control_s_axi_U_WREADY,
    output wire [(C_S_AXI_CONTROL_DATA_WIDTH / 8 - 1):0] control_s_axi_U_WSTRB,
    output wire                                          control_s_axi_U_WVALID,
    output wire                                          control_s_axi_U_ap_done,
    output wire                                          control_s_axi_U_ap_idle,
    output wire                                          control_s_axi_U_ap_ready,
    input wire                                           control_s_axi_U_ap_start,
    input wire  [                                  63:0] control_s_axi_U_input_mmap_offset,
    input wire                                           control_s_axi_U_interrupt,
    input wire  [                                  63:0] control_s_axi_U_output_mmap_offset,
    input wire  [                                  63:0] control_s_axi_U_quant_weight_mmap_offset,
    input wire  [                                  31:0] control_s_axi_U_seq_len,
    input wire  [                                  63:0] control_s_axi_U_weight_s_sum_mmap_offset,
    output wire                                          input_s_b_stream_clk,
    output wire [                                  64:0] input_s_b_stream_if_din,
    input wire  [                                  64:0] input_s_b_stream_if_dout,
    input wire                                           input_s_b_stream_if_empty_n,
    input wire                                           input_s_b_stream_if_full_n,
    output wire                                          input_s_b_stream_if_read,
    output wire                                          input_s_b_stream_if_read_ce,
    output wire                                          input_s_b_stream_if_write,
    output wire                                          input_s_b_stream_if_write_ce,
    output wire                                          input_s_b_stream_reset,
    output wire                                          input_stream_clk,
    output wire [                                 512:0] input_stream_if_din,
    input wire  [                                 512:0] input_stream_if_dout,
    input wire                                           input_stream_if_empty_n,
    input wire                                           input_stream_if_full_n,
    output wire                                          input_stream_if_read,
    output wire                                          input_stream_if_read_ce,
    output wire                                          input_stream_if_write,
    output wire                                          input_stream_if_write_ce,
    output wire                                          input_stream_reset,
    output wire                                          output_stream_clk,
    output wire [                                 512:0] output_stream_if_din,
    input wire  [                                 512:0] output_stream_if_dout,
    input wire                                           output_stream_if_empty_n,
    input wire                                           output_stream_if_full_n,
    output wire                                          output_stream_if_read,
    output wire                                          output_stream_if_read_ce,
    output wire                                          output_stream_if_write,
    output wire                                          output_stream_if_write_ce,
    output wire                                          output_stream_reset,
    output wire                                          quant_input_stream_clk,
    output wire [                                  64:0] quant_input_stream_if_din,
    input wire  [                                  64:0] quant_input_stream_if_dout,
    input wire                                           quant_input_stream_if_empty_n,
    input wire                                           quant_input_stream_if_full_n,
    output wire                                          quant_input_stream_if_read,
    output wire                                          quant_input_stream_if_read_ce,
    output wire                                          quant_input_stream_if_write,
    output wire                                          quant_input_stream_if_write_ce,
    output wire                                          quant_input_stream_reset,
    output wire                                          quant_output_stream_clk,
    output wire [                                 304:0] quant_output_stream_if_din,
    input wire  [                                 304:0] quant_output_stream_if_dout,
    input wire                                           quant_output_stream_if_empty_n,
    input wire                                           quant_output_stream_if_full_n,
    output wire                                          quant_output_stream_if_read,
    output wire                                          quant_output_stream_if_read_ce,
    output wire                                          quant_output_stream_if_write,
    output wire                                          quant_output_stream_if_write_ce,
    output wire                                          quant_output_stream_reset,
    output wire                                          quant_weight_stream_clk,
    output wire [                                 128:0] quant_weight_stream_if_din,
    input wire  [                                 128:0] quant_weight_stream_if_dout,
    input wire                                           quant_weight_stream_if_empty_n,
    input wire                                           quant_weight_stream_if_full_n,
    output wire                                          quant_weight_stream_if_read,
    output wire                                          quant_weight_stream_if_read_ce,
    output wire                                          quant_weight_stream_if_write,
    output wire                                          quant_weight_stream_if_write_ce,
    output wire                                          quant_weight_stream_reset,
    output wire                                          weight_s_sum_stream_clk,
    output wire [                                  64:0] weight_s_sum_stream_if_din,
    input wire  [                                  64:0] weight_s_sum_stream_if_dout,
    input wire                                           weight_s_sum_stream_if_empty_n,
    input wire                                           weight_s_sum_stream_if_full_n,
    output wire                                          weight_s_sum_stream_if_read,
    output wire                                          weight_s_sum_stream_if_read_ce,
    output wire                                          weight_s_sum_stream_if_write,
    output wire                                          weight_s_sum_stream_if_write_ce,
    output wire                                          weight_s_sum_stream_reset,
    output wire                                          Linear_Layer_i4xi4_q_0_ap_clk,
    input wire                                           Linear_Layer_i4xi4_q_0_ap_done,
    input wire                                           Linear_Layer_i4xi4_q_0_ap_idle,
    input wire                                           Linear_Layer_i4xi4_q_0_ap_ready,
    output wire                                          Linear_Layer_i4xi4_q_0_ap_rst_n,
    output wire                                          Linear_Layer_i4xi4_q_0_ap_start,
    output wire [                                  64:0] Linear_Layer_i4xi4_q_0_input_stream_peek_dout,
    output wire                                          Linear_Layer_i4xi4_q_0_input_stream_peek_empty_n,
    input wire                                           Linear_Layer_i4xi4_q_0_input_stream_peek_read,
    output wire [                                  64:0] Linear_Layer_i4xi4_q_0_input_stream_s_dout,
    output wire                                          Linear_Layer_i4xi4_q_0_input_stream_s_empty_n,
    input wire                                           Linear_Layer_i4xi4_q_0_input_stream_s_read,
    output wire [                                 304:0] Linear_Layer_i4xi4_q_0_output_stream_peek,
    input wire  [                                 304:0] Linear_Layer_i4xi4_q_0_output_stream_s_din,
    output wire                                          Linear_Layer_i4xi4_q_0_output_stream_s_full_n,
    input wire                                           Linear_Layer_i4xi4_q_0_output_stream_s_write,
    output wire [                                  31:0] Linear_Layer_i4xi4_q_0_seq_len,
    output wire [                                 128:0] Linear_Layer_i4xi4_q_0_weight_stream_peek_dout,
    output wire                                          Linear_Layer_i4xi4_q_0_weight_stream_peek_empty_n,
    input wire                                           Linear_Layer_i4xi4_q_0_weight_stream_peek_read,
    output wire [                                 128:0] Linear_Layer_i4xi4_q_0_weight_stream_s_dout,
    output wire                                          Linear_Layer_i4xi4_q_0_weight_stream_s_empty_n,
    input wire                                           Linear_Layer_i4xi4_q_0_weight_stream_s_read,
    output wire                                          dequant_layer_q_int_fp32_0_ap_clk,
    input wire                                           dequant_layer_q_int_fp32_0_ap_done,
    input wire                                           dequant_layer_q_int_fp32_0_ap_idle,
    input wire                                           dequant_layer_q_int_fp32_0_ap_ready,
    output wire                                          dequant_layer_q_int_fp32_0_ap_rst_n,
    output wire                                          dequant_layer_q_int_fp32_0_ap_start,
    output wire [                                  64:0] dequant_layer_q_int_fp32_0_input_s_b_stream_peek_dout,
    output wire                                          dequant_layer_q_int_fp32_0_input_s_b_stream_peek_empty_n,
    input wire                                           dequant_layer_q_int_fp32_0_input_s_b_stream_peek_read,
    output wire [                                  64:0] dequant_layer_q_int_fp32_0_input_s_b_stream_s_dout,
    output wire                                          dequant_layer_q_int_fp32_0_input_s_b_stream_s_empty_n,
    input wire                                           dequant_layer_q_int_fp32_0_input_s_b_stream_s_read,
    output wire [                                 304:0] dequant_layer_q_int_fp32_0_input_stream_peek_dout,
    output wire                                          dequant_layer_q_int_fp32_0_input_stream_peek_empty_n,
    input wire                                           dequant_layer_q_int_fp32_0_input_stream_peek_read,
    output wire [                                 304:0] dequant_layer_q_int_fp32_0_input_stream_s_dout,
    output wire                                          dequant_layer_q_int_fp32_0_input_stream_s_empty_n,
    input wire                                           dequant_layer_q_int_fp32_0_input_stream_s_read,
    output wire [                                 512:0] dequant_layer_q_int_fp32_0_output_stream_peek,
    input wire  [                                 512:0] dequant_layer_q_int_fp32_0_output_stream_s_din,
    output wire                                          dequant_layer_q_int_fp32_0_output_stream_s_full_n,
    input wire                                           dequant_layer_q_int_fp32_0_output_stream_s_write,
    output wire [                                  31:0] dequant_layer_q_int_fp32_0_seq_len,
    output wire [                                  64:0] dequant_layer_q_int_fp32_0_weight_s_sum_stream_peek_dout,
    output wire                                          dequant_layer_q_int_fp32_0_weight_s_sum_stream_peek_empty_n,
    input wire                                           dequant_layer_q_int_fp32_0_weight_s_sum_stream_peek_read,
    output wire [                                  64:0] dequant_layer_q_int_fp32_0_weight_s_sum_stream_s_dout,
    output wire                                          dequant_layer_q_int_fp32_0_weight_s_sum_stream_s_empty_n,
    input wire                                           dequant_layer_q_int_fp32_0_weight_s_sum_stream_s_read,
    output wire                                          input_loader_r1_ln_iembed_fp32_0_ap_clk,
    input wire                                           input_loader_r1_ln_iembed_fp32_0_ap_done,
    input wire                                           input_loader_r1_ln_iembed_fp32_0_ap_idle,
    input wire                                           input_loader_r1_ln_iembed_fp32_0_ap_ready,
    output wire                                          input_loader_r1_ln_iembed_fp32_0_ap_rst_n,
    output wire                                          input_loader_r1_ln_iembed_fp32_0_ap_start,
    output wire [                                  63:0] input_loader_r1_ln_iembed_fp32_0_input_mmap_offset,
    output wire [                                 512:0] input_loader_r1_ln_iembed_fp32_0_input_stream_peek,
    input wire  [                                 512:0] input_loader_r1_ln_iembed_fp32_0_input_stream_s_din,
    output wire                                          input_loader_r1_ln_iembed_fp32_0_input_stream_s_full_n,
    input wire                                           input_loader_r1_ln_iembed_fp32_0_input_stream_s_write,
    input wire  [                                  63:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARADDR,
    input wire  [                                   1:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARBURST,
    input wire  [                                   3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARCACHE,
    input wire  [                                   0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARID,
    input wire  [                                   7:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARLEN,
    input wire  [                                   1:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARLOCK,
    input wire  [                                   2:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARPROT,
    input wire  [                                   3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARQOS,
    output wire                                          input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARREADY,
    input wire  [                                   3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARREGION,
    input wire  [                                   2:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARSIZE,
    input wire  [                                   0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARUSER,
    input wire                                           input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARVALID,
    input wire  [                                  63:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWADDR,
    input wire  [                                   1:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWBURST,
    input wire  [                                   3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWCACHE,
    input wire  [                                   0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWID,
    input wire  [                                   7:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWLEN,
    input wire  [                                   1:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWLOCK,
    input wire  [                                   2:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWPROT,
    input wire  [                                   3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWQOS,
    output wire                                          input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWREADY,
    input wire  [                                   3:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWREGION,
    input wire  [                                   2:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWSIZE,
    input wire  [                                   0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWUSER,
    input wire                                           input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWVALID,
    output wire [                                   0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BID,
    input wire                                           input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BREADY,
    output wire [                                   1:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BRESP,
    output wire [                                   0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BUSER,
    output wire                                          input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BVALID,
    output wire [                                 511:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RDATA,
    output wire [                                   0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RID,
    output wire                                          input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RLAST,
    input wire                                           input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RREADY,
    output wire [                                   1:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RRESP,
    output wire [                                   0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RUSER,
    output wire                                          input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RVALID,
    input wire  [                                 511:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WDATA,
    input wire  [                                   0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WID,
    input wire                                           input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WLAST,
    output wire                                          input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WREADY,
    input wire  [                              32'd63:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WSTRB,
    input wire  [                                   0:0] input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WUSER,
    input wire                                           input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WVALID,
    output wire [                                  31:0] input_loader_r1_ln_iembed_fp32_0_seq_len,
    output wire                                          output_drainer_q_fp32_0_ap_clk,
    input wire                                           output_drainer_q_fp32_0_ap_done,
    input wire                                           output_drainer_q_fp32_0_ap_idle,
    input wire                                           output_drainer_q_fp32_0_ap_ready,
    output wire                                          output_drainer_q_fp32_0_ap_rst_n,
    output wire                                          output_drainer_q_fp32_0_ap_start,
    input wire  [                                  63:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARADDR,
    input wire  [                                   1:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARBURST,
    input wire  [                                   3:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARCACHE,
    input wire  [                                   0:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARID,
    input wire  [                                   7:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARLEN,
    input wire  [                                   1:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARLOCK,
    input wire  [                                   2:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARPROT,
    input wire  [                                   3:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARQOS,
    output wire                                          output_drainer_q_fp32_0_m_axi_output_mmap_ARREADY,
    input wire  [                                   3:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARREGION,
    input wire  [                                   2:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARSIZE,
    input wire  [                                   0:0] output_drainer_q_fp32_0_m_axi_output_mmap_ARUSER,
    input wire                                           output_drainer_q_fp32_0_m_axi_output_mmap_ARVALID,
    input wire  [                                  63:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWADDR,
    input wire  [                                   1:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWBURST,
    input wire  [                                   3:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWCACHE,
    input wire  [                                   0:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWID,
    input wire  [                                   7:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWLEN,
    input wire  [                                   1:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWLOCK,
    input wire  [                                   2:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWPROT,
    input wire  [                                   3:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWQOS,
    output wire                                          output_drainer_q_fp32_0_m_axi_output_mmap_AWREADY,
    input wire  [                                   3:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWREGION,
    input wire  [                                   2:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWSIZE,
    input wire  [                                   0:0] output_drainer_q_fp32_0_m_axi_output_mmap_AWUSER,
    input wire                                           output_drainer_q_fp32_0_m_axi_output_mmap_AWVALID,
    output wire [                                   0:0] output_drainer_q_fp32_0_m_axi_output_mmap_BID,
    input wire                                           output_drainer_q_fp32_0_m_axi_output_mmap_BREADY,
    output wire [                                   1:0] output_drainer_q_fp32_0_m_axi_output_mmap_BRESP,
    output wire [                                   0:0] output_drainer_q_fp32_0_m_axi_output_mmap_BUSER,
    output wire                                          output_drainer_q_fp32_0_m_axi_output_mmap_BVALID,
    output wire [                                 511:0] output_drainer_q_fp32_0_m_axi_output_mmap_RDATA,
    output wire [                                   0:0] output_drainer_q_fp32_0_m_axi_output_mmap_RID,
    output wire                                          output_drainer_q_fp32_0_m_axi_output_mmap_RLAST,
    input wire                                           output_drainer_q_fp32_0_m_axi_output_mmap_RREADY,
    output wire [                                   1:0] output_drainer_q_fp32_0_m_axi_output_mmap_RRESP,
    output wire [                                   0:0] output_drainer_q_fp32_0_m_axi_output_mmap_RUSER,
    output wire                                          output_drainer_q_fp32_0_m_axi_output_mmap_RVALID,
    input wire  [                                 511:0] output_drainer_q_fp32_0_m_axi_output_mmap_WDATA,
    input wire  [                                   0:0] output_drainer_q_fp32_0_m_axi_output_mmap_WID,
    input wire                                           output_drainer_q_fp32_0_m_axi_output_mmap_WLAST,
    output wire                                          output_drainer_q_fp32_0_m_axi_output_mmap_WREADY,
    input wire  [                              32'd63:0] output_drainer_q_fp32_0_m_axi_output_mmap_WSTRB,
    input wire  [                                   0:0] output_drainer_q_fp32_0_m_axi_output_mmap_WUSER,
    input wire                                           output_drainer_q_fp32_0_m_axi_output_mmap_WVALID,
    output wire [                                  63:0] output_drainer_q_fp32_0_output_mmap_offset,
    output wire [                                 512:0] output_drainer_q_fp32_0_output_stream_peek_dout,
    output wire                                          output_drainer_q_fp32_0_output_stream_peek_empty_n,
    input wire                                           output_drainer_q_fp32_0_output_stream_peek_read,
    output wire [                                 512:0] output_drainer_q_fp32_0_output_stream_s_dout,
    output wire                                          output_drainer_q_fp32_0_output_stream_s_empty_n,
    input wire                                           output_drainer_q_fp32_0_output_stream_s_read,
    output wire [                                  31:0] output_drainer_q_fp32_0_seq_len,
    output wire                                          quant_layer_r1_ln_iembed_fp32_int4_0_ap_clk,
    input wire                                           quant_layer_r1_ln_iembed_fp32_int4_0_ap_done,
    input wire                                           quant_layer_r1_ln_iembed_fp32_int4_0_ap_idle,
    input wire                                           quant_layer_r1_ln_iembed_fp32_int4_0_ap_ready,
    output wire                                          quant_layer_r1_ln_iembed_fp32_int4_0_ap_rst_n,
    output wire                                          quant_layer_r1_ln_iembed_fp32_int4_0_ap_start,
    output wire [                                  64:0] quant_layer_r1_ln_iembed_fp32_int4_0_input_s_b_stream_peek,
    input wire  [                                  64:0] quant_layer_r1_ln_iembed_fp32_int4_0_input_s_b_stream_s_din,
    output wire                                          quant_layer_r1_ln_iembed_fp32_int4_0_input_s_b_stream_s_full_n,
    input wire                                           quant_layer_r1_ln_iembed_fp32_int4_0_input_s_b_stream_s_write,
    output wire [                                 512:0] quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_peek_dout,
    output wire                                          quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_peek_empty_n,
    input wire                                           quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_peek_read,
    output wire [                                 512:0] quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_s_dout,
    output wire                                          quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_s_empty_n,
    input wire                                           quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_s_read,
    output wire [                                  64:0] quant_layer_r1_ln_iembed_fp32_int4_0_output_stream_peek,
    input wire  [                                  64:0] quant_layer_r1_ln_iembed_fp32_int4_0_output_stream_s_din,
    output wire                                          quant_layer_r1_ln_iembed_fp32_int4_0_output_stream_s_full_n,
    input wire                                           quant_layer_r1_ln_iembed_fp32_int4_0_output_stream_s_write,
    output wire [                                  31:0] quant_layer_r1_ln_iembed_fp32_int4_0_seq_len,
    output wire                                          weight_loader_wq_0_ap_clk,
    input wire                                           weight_loader_wq_0_ap_done,
    input wire                                           weight_loader_wq_0_ap_idle,
    input wire                                           weight_loader_wq_0_ap_ready,
    output wire                                          weight_loader_wq_0_ap_rst_n,
    output wire                                          weight_loader_wq_0_ap_start,
    input wire  [                                  63:0] weight_loader_wq_0_m_axi_weight_mmap_ARADDR,
    input wire  [                                   1:0] weight_loader_wq_0_m_axi_weight_mmap_ARBURST,
    input wire  [                                   3:0] weight_loader_wq_0_m_axi_weight_mmap_ARCACHE,
    input wire  [                                   0:0] weight_loader_wq_0_m_axi_weight_mmap_ARID,
    input wire  [                                   7:0] weight_loader_wq_0_m_axi_weight_mmap_ARLEN,
    input wire  [                                   1:0] weight_loader_wq_0_m_axi_weight_mmap_ARLOCK,
    input wire  [                                   2:0] weight_loader_wq_0_m_axi_weight_mmap_ARPROT,
    input wire  [                                   3:0] weight_loader_wq_0_m_axi_weight_mmap_ARQOS,
    output wire                                          weight_loader_wq_0_m_axi_weight_mmap_ARREADY,
    input wire  [                                   3:0] weight_loader_wq_0_m_axi_weight_mmap_ARREGION,
    input wire  [                                   2:0] weight_loader_wq_0_m_axi_weight_mmap_ARSIZE,
    input wire  [                                   0:0] weight_loader_wq_0_m_axi_weight_mmap_ARUSER,
    input wire                                           weight_loader_wq_0_m_axi_weight_mmap_ARVALID,
    input wire  [                                  63:0] weight_loader_wq_0_m_axi_weight_mmap_AWADDR,
    input wire  [                                   1:0] weight_loader_wq_0_m_axi_weight_mmap_AWBURST,
    input wire  [                                   3:0] weight_loader_wq_0_m_axi_weight_mmap_AWCACHE,
    input wire  [                                   0:0] weight_loader_wq_0_m_axi_weight_mmap_AWID,
    input wire  [                                   7:0] weight_loader_wq_0_m_axi_weight_mmap_AWLEN,
    input wire  [                                   1:0] weight_loader_wq_0_m_axi_weight_mmap_AWLOCK,
    input wire  [                                   2:0] weight_loader_wq_0_m_axi_weight_mmap_AWPROT,
    input wire  [                                   3:0] weight_loader_wq_0_m_axi_weight_mmap_AWQOS,
    output wire                                          weight_loader_wq_0_m_axi_weight_mmap_AWREADY,
    input wire  [                                   3:0] weight_loader_wq_0_m_axi_weight_mmap_AWREGION,
    input wire  [                                   2:0] weight_loader_wq_0_m_axi_weight_mmap_AWSIZE,
    input wire  [                                   0:0] weight_loader_wq_0_m_axi_weight_mmap_AWUSER,
    input wire                                           weight_loader_wq_0_m_axi_weight_mmap_AWVALID,
    output wire [                                   0:0] weight_loader_wq_0_m_axi_weight_mmap_BID,
    input wire                                           weight_loader_wq_0_m_axi_weight_mmap_BREADY,
    output wire [                                   1:0] weight_loader_wq_0_m_axi_weight_mmap_BRESP,
    output wire [                                   0:0] weight_loader_wq_0_m_axi_weight_mmap_BUSER,
    output wire                                          weight_loader_wq_0_m_axi_weight_mmap_BVALID,
    output wire [                                 255:0] weight_loader_wq_0_m_axi_weight_mmap_RDATA,
    output wire [                                   0:0] weight_loader_wq_0_m_axi_weight_mmap_RID,
    output wire                                          weight_loader_wq_0_m_axi_weight_mmap_RLAST,
    input wire                                           weight_loader_wq_0_m_axi_weight_mmap_RREADY,
    output wire [                                   1:0] weight_loader_wq_0_m_axi_weight_mmap_RRESP,
    output wire [                                   0:0] weight_loader_wq_0_m_axi_weight_mmap_RUSER,
    output wire                                          weight_loader_wq_0_m_axi_weight_mmap_RVALID,
    input wire  [                                 255:0] weight_loader_wq_0_m_axi_weight_mmap_WDATA,
    input wire  [                                   0:0] weight_loader_wq_0_m_axi_weight_mmap_WID,
    input wire                                           weight_loader_wq_0_m_axi_weight_mmap_WLAST,
    output wire                                          weight_loader_wq_0_m_axi_weight_mmap_WREADY,
    input wire  [                              32'd31:0] weight_loader_wq_0_m_axi_weight_mmap_WSTRB,
    input wire  [                                   0:0] weight_loader_wq_0_m_axi_weight_mmap_WUSER,
    input wire                                           weight_loader_wq_0_m_axi_weight_mmap_WVALID,
    output wire [                                  31:0] weight_loader_wq_0_seq_len,
    output wire [                                  63:0] weight_loader_wq_0_weight_mmap_offset,
    output wire [                                 128:0] weight_loader_wq_0_weight_stream_peek,
    input wire  [                                 128:0] weight_loader_wq_0_weight_stream_s_din,
    output wire                                          weight_loader_wq_0_weight_stream_s_full_n,
    input wire                                           weight_loader_wq_0_weight_stream_s_write,
    output wire                                          weight_s_loader_wq_0_ap_clk,
    input wire                                           weight_s_loader_wq_0_ap_done,
    input wire                                           weight_s_loader_wq_0_ap_idle,
    input wire                                           weight_s_loader_wq_0_ap_ready,
    output wire                                          weight_s_loader_wq_0_ap_rst_n,
    output wire                                          weight_s_loader_wq_0_ap_start,
    input wire  [                                  63:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARADDR,
    input wire  [                                   1:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARBURST,
    input wire  [                                   3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARCACHE,
    input wire  [                                   0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARID,
    input wire  [                                   7:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARLEN,
    input wire  [                                   1:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARLOCK,
    input wire  [                                   2:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARPROT,
    input wire  [                                   3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARQOS,
    output wire                                          weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARREADY,
    input wire  [                                   3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARREGION,
    input wire  [                                   2:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARSIZE,
    input wire  [                                   0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARUSER,
    input wire                                           weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARVALID,
    input wire  [                                  63:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWADDR,
    input wire  [                                   1:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWBURST,
    input wire  [                                   3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWCACHE,
    input wire  [                                   0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWID,
    input wire  [                                   7:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWLEN,
    input wire  [                                   1:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWLOCK,
    input wire  [                                   2:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWPROT,
    input wire  [                                   3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWQOS,
    output wire                                          weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWREADY,
    input wire  [                                   3:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWREGION,
    input wire  [                                   2:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWSIZE,
    input wire  [                                   0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWUSER,
    input wire                                           weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWVALID,
    output wire [                                   0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BID,
    input wire                                           weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BREADY,
    output wire [                                   1:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BRESP,
    output wire [                                   0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BUSER,
    output wire                                          weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BVALID,
    output wire [                                  63:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RDATA,
    output wire [                                   0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RID,
    output wire                                          weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RLAST,
    input wire                                           weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RREADY,
    output wire [                                   1:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RRESP,
    output wire [                                   0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RUSER,
    output wire                                          weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RVALID,
    input wire  [                                  63:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WDATA,
    input wire  [                                   0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WID,
    input wire                                           weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WLAST,
    output wire                                          weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WREADY,
    input wire  [                               32'd7:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WSTRB,
    input wire  [                                   0:0] weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WUSER,
    input wire                                           weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WVALID,
    output wire [                                  31:0] weight_s_loader_wq_0_seq_len,
    output wire [                                  63:0] weight_s_loader_wq_0_weight_s_sum_mmap_offset,
    output wire [                                  64:0] weight_s_loader_wq_0_weight_s_sum_stream_peek,
    input wire  [                                  64:0] weight_s_loader_wq_0_weight_s_sum_stream_s_din,
    output wire                                          weight_s_loader_wq_0_weight_s_sum_stream_s_full_n,
    input wire                                           weight_s_loader_wq_0_weight_s_sum_stream_s_write,
    input wire  [                                  31:0] __tapa_fsm_unit_Linear_Layer_i4xi4_q_0___seq_len__q0,
    output wire                                          __tapa_fsm_unit_Linear_Layer_i4xi4_q_0__ap_done,
    output wire                                          __tapa_fsm_unit_Linear_Layer_i4xi4_q_0__ap_idle,
    output wire                                          __tapa_fsm_unit_Linear_Layer_i4xi4_q_0__ap_ready,
    input wire                                           __tapa_fsm_unit_Linear_Layer_i4xi4_q_0__ap_start,
    output wire                                          __tapa_fsm_unit_ap_clk,
    input wire                                           __tapa_fsm_unit_ap_done,
    input wire                                           __tapa_fsm_unit_ap_idle,
    input wire                                           __tapa_fsm_unit_ap_ready,
    output wire                                          __tapa_fsm_unit_ap_rst_n,
    output wire                                          __tapa_fsm_unit_ap_start,
    input wire  [                                  31:0] __tapa_fsm_unit_dequant_layer_q_int_fp32_0___seq_len__q0,
    output wire                                          __tapa_fsm_unit_dequant_layer_q_int_fp32_0__ap_done,
    output wire                                          __tapa_fsm_unit_dequant_layer_q_int_fp32_0__ap_idle,
    output wire                                          __tapa_fsm_unit_dequant_layer_q_int_fp32_0__ap_ready,
    input wire                                           __tapa_fsm_unit_dequant_layer_q_int_fp32_0__ap_start,
    input wire  [                                  63:0] __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__mmap_offset_q0,
    input wire  [                                  31:0] __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0___seq_len__q0,
    output wire                                          __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__ap_done,
    output wire                                          __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__ap_idle,
    output wire                                          __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__ap_ready,
    input wire                                           __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__ap_start,
    output wire [                                  63:0] __tapa_fsm_unit_input_mmap_offset,
    input wire  [                                  63:0] __tapa_fsm_unit_output_drainer_q_fp32_0___output_mmap_offset__q0,
    input wire  [                                  31:0] __tapa_fsm_unit_output_drainer_q_fp32_0___seq_len__q0,
    output wire                                          __tapa_fsm_unit_output_drainer_q_fp32_0__ap_done,
    output wire                                          __tapa_fsm_unit_output_drainer_q_fp32_0__ap_idle,
    output wire                                          __tapa_fsm_unit_output_drainer_q_fp32_0__ap_ready,
    input wire                                           __tapa_fsm_unit_output_drainer_q_fp32_0__ap_start,
    output wire [                                  63:0] __tapa_fsm_unit_output_mmap_offset,
    input wire  [                                  31:0] __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__seq_len_q0,
    output wire                                          __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__ap_done,
    output wire                                          __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__ap_idle,
    output wire                                          __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__ap_ready,
    input wire                                           __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__ap_start,
    output wire [                                  63:0] __tapa_fsm_unit_quant_weight_mmap_offset,
    output wire [                                  31:0] __tapa_fsm_unit_seq_len,
    input wire  [                                  63:0] __tapa_fsm_unit_weight_loader_wq_0___quant_mmap_offset__q0,
    input wire  [                                  31:0] __tapa_fsm_unit_weight_loader_wq_0___seq_len__q0,
    output wire                                          __tapa_fsm_unit_weight_loader_wq_0__ap_done,
    output wire                                          __tapa_fsm_unit_weight_loader_wq_0__ap_idle,
    output wire                                          __tapa_fsm_unit_weight_loader_wq_0__ap_ready,
    input wire                                           __tapa_fsm_unit_weight_loader_wq_0__ap_start,
    input wire  [                                  31:0] __tapa_fsm_unit_weight_s_loader_wq_0___seq_len__q0,
    input wire  [                                  63:0] __tapa_fsm_unit_weight_s_loader_wq_0___s_sum_mmap_offset__q0,
    output wire                                          __tapa_fsm_unit_weight_s_loader_wq_0__ap_done,
    output wire                                          __tapa_fsm_unit_weight_s_loader_wq_0__ap_idle,
    output wire                                          __tapa_fsm_unit_weight_s_loader_wq_0__ap_ready,
    input wire                                           __tapa_fsm_unit_weight_s_loader_wq_0__ap_start,
    output wire [                                  63:0] __tapa_fsm_unit_weight_s_sum_mmap_offset
);
wire    ap_start;
wire   [63:0] input_mmap_offset;
wire   [63:0] quant_weight_mmap_offset;
wire   [63:0] weight_s_sum_mmap_offset;
wire   [63:0] output_mmap_offset;
wire   [31:0] seq_len;
 
  wire ap_rst_n_inv;
  wire ap_done;
  wire ap_idle;
  wire ap_ready;
  wire [64:0] input_s_b_stream__dout;
  wire input_s_b_stream__empty_n;
  wire input_s_b_stream__read;
  wire [64:0] input_s_b_stream__din;
  wire input_s_b_stream__full_n;
  wire input_s_b_stream__write;
  wire [512:0] input_stream__dout;
  wire input_stream__empty_n;
  wire input_stream__read;
  wire [512:0] input_stream__din;
  wire input_stream__full_n;
  wire input_stream__write;
  wire [512:0] output_stream__dout;
  wire output_stream__empty_n;
  wire output_stream__read;
  wire [512:0] output_stream__din;
  wire output_stream__full_n;
  wire output_stream__write;
  wire [64:0] quant_input_stream__dout;
  wire quant_input_stream__empty_n;
  wire quant_input_stream__read;
  wire [64:0] quant_input_stream__din;
  wire quant_input_stream__full_n;
  wire quant_input_stream__write;
  wire [304:0] quant_output_stream__dout;
  wire quant_output_stream__empty_n;
  wire quant_output_stream__read;
  wire [304:0] quant_output_stream__din;
  wire quant_output_stream__full_n;
  wire quant_output_stream__write;
  wire [128:0] quant_weight_stream__dout;
  wire quant_weight_stream__empty_n;
  wire quant_weight_stream__read;
  wire [128:0] quant_weight_stream__din;
  wire quant_weight_stream__full_n;
  wire quant_weight_stream__write;
  wire [64:0] weight_s_sum_stream__dout;
  wire weight_s_sum_stream__empty_n;
  wire weight_s_sum_stream__read;
  wire [64:0] weight_s_sum_stream__din;
  wire weight_s_sum_stream__full_n;
  wire weight_s_sum_stream__write;
  wire [31:0] Linear_Layer_i4xi4_q_0___seq_len__q0;
  wire Linear_Layer_i4xi4_q_0__ap_start;
  wire Linear_Layer_i4xi4_q_0__ap_ready;
  wire Linear_Layer_i4xi4_q_0__ap_done;
  wire Linear_Layer_i4xi4_q_0__ap_idle;
  wire [31:0] dequant_layer_q_int_fp32_0___seq_len__q0;
  wire dequant_layer_q_int_fp32_0__ap_start;
  wire dequant_layer_q_int_fp32_0__ap_ready;
  wire dequant_layer_q_int_fp32_0__ap_done;
  wire dequant_layer_q_int_fp32_0__ap_idle;
  wire [63:0] input_loader_r1_ln_iembed_fp32_0___input_mmap_offset__q0;
  wire [31:0] input_loader_r1_ln_iembed_fp32_0___seq_len__q0;
  wire input_loader_r1_ln_iembed_fp32_0__ap_start;
  wire input_loader_r1_ln_iembed_fp32_0__ap_ready;
  wire input_loader_r1_ln_iembed_fp32_0__ap_done;
  wire input_loader_r1_ln_iembed_fp32_0__ap_idle;
  wire [63:0] output_drainer_q_fp32_0___output_mmap_offset__q0;
  wire [31:0] output_drainer_q_fp32_0___seq_len__q0;
  wire output_drainer_q_fp32_0__ap_start;
  wire output_drainer_q_fp32_0__ap_ready;
  wire output_drainer_q_fp32_0__ap_done;
  wire output_drainer_q_fp32_0__ap_idle;
  wire [31:0] quant_layer_r1_ln_iembed_fp32_int4_0___seq_len__q0;
  wire quant_layer_r1_ln_iembed_fp32_int4_0__ap_start;
  wire quant_layer_r1_ln_iembed_fp32_int4_0__ap_ready;
  wire quant_layer_r1_ln_iembed_fp32_int4_0__ap_done;
  wire quant_layer_r1_ln_iembed_fp32_int4_0__ap_idle;
  wire [63:0] weight_loader_wq_0___quant_weight_mmap_offset__q0;
  wire [31:0] weight_loader_wq_0___seq_len__q0;
  wire weight_loader_wq_0__ap_start;
  wire weight_loader_wq_0__ap_ready;
  wire weight_loader_wq_0__ap_done;
  wire weight_loader_wq_0__ap_idle;
  wire [31:0] weight_s_loader_wq_0___seq_len__q0;
  wire [63:0] weight_s_loader_wq_0___weight_s_sum_mmap_offset__q0;
  wire weight_s_loader_wq_0__ap_start;
  wire weight_s_loader_wq_0__ap_ready;
  wire weight_s_loader_wq_0__ap_done;
  wire weight_s_loader_wq_0__ap_idle;
  assign ap_rst_n_inv = ~ap_rst_n;
  assign control_s_axi_U_ACLK = ap_clk;
  assign control_s_axi_U_ACLK_EN = 1'b1;
  assign control_s_axi_U_ARADDR = s_axi_control_ARADDR;
  assign control_s_axi_U_ARESET = ap_rst_n_inv;
  assign s_axi_control_ARREADY = control_s_axi_U_ARREADY;
  assign control_s_axi_U_ARVALID = s_axi_control_ARVALID;
  assign control_s_axi_U_AWADDR = s_axi_control_AWADDR;
  assign s_axi_control_AWREADY = control_s_axi_U_AWREADY;
  assign control_s_axi_U_AWVALID = s_axi_control_AWVALID;
  assign control_s_axi_U_BREADY = s_axi_control_BREADY;
  assign s_axi_control_BRESP = control_s_axi_U_BRESP;
  assign s_axi_control_BVALID = control_s_axi_U_BVALID;
  assign s_axi_control_RDATA = control_s_axi_U_RDATA;
  assign control_s_axi_U_RREADY = s_axi_control_RREADY;
  assign s_axi_control_RRESP = control_s_axi_U_RRESP;
  assign s_axi_control_RVALID = control_s_axi_U_RVALID;
  assign control_s_axi_U_WDATA = s_axi_control_WDATA;
  assign s_axi_control_WREADY = control_s_axi_U_WREADY;
  assign control_s_axi_U_WSTRB = s_axi_control_WSTRB;
  assign control_s_axi_U_WVALID = s_axi_control_WVALID;
  assign control_s_axi_U_ap_done = ap_done;
  assign control_s_axi_U_ap_idle = ap_idle;
  assign control_s_axi_U_ap_ready = ap_ready;
  assign ap_start = control_s_axi_U_ap_start;
  assign input_mmap_offset = control_s_axi_U_input_mmap_offset;
  assign interrupt = control_s_axi_U_interrupt;
  assign output_mmap_offset = control_s_axi_U_output_mmap_offset;
  assign quant_weight_mmap_offset = control_s_axi_U_quant_weight_mmap_offset;
  assign seq_len = control_s_axi_U_seq_len;
  assign weight_s_sum_mmap_offset = control_s_axi_U_weight_s_sum_mmap_offset;
  assign input_s_b_stream_clk = ap_clk;
  assign input_s_b_stream_if_din = input_s_b_stream__din;
  assign input_s_b_stream__dout = input_s_b_stream_if_dout;
  assign input_s_b_stream__empty_n = input_s_b_stream_if_empty_n;
  assign input_s_b_stream__full_n = input_s_b_stream_if_full_n;
  assign input_s_b_stream_if_read = input_s_b_stream__read;
  assign input_s_b_stream_if_read_ce = 1'b1;
  assign input_s_b_stream_if_write = input_s_b_stream__write;
  assign input_s_b_stream_if_write_ce = 1'b1;
  assign input_s_b_stream_reset = ~ ap_rst_n;
  assign input_stream_clk = ap_clk;
  assign input_stream_if_din = input_stream__din;
  assign input_stream__dout = input_stream_if_dout;
  assign input_stream__empty_n = input_stream_if_empty_n;
  assign input_stream__full_n = input_stream_if_full_n;
  assign input_stream_if_read = input_stream__read;
  assign input_stream_if_read_ce = 1'b1;
  assign input_stream_if_write = input_stream__write;
  assign input_stream_if_write_ce = 1'b1;
  assign input_stream_reset = ~ ap_rst_n;
  assign output_stream_clk = ap_clk;
  assign output_stream_if_din = output_stream__din;
  assign output_stream__dout = output_stream_if_dout;
  assign output_stream__empty_n = output_stream_if_empty_n;
  assign output_stream__full_n = output_stream_if_full_n;
  assign output_stream_if_read = output_stream__read;
  assign output_stream_if_read_ce = 1'b1;
  assign output_stream_if_write = output_stream__write;
  assign output_stream_if_write_ce = 1'b1;
  assign output_stream_reset = ~ ap_rst_n;
  assign quant_input_stream_clk = ap_clk;
  assign quant_input_stream_if_din = quant_input_stream__din;
  assign quant_input_stream__dout = quant_input_stream_if_dout;
  assign quant_input_stream__empty_n = quant_input_stream_if_empty_n;
  assign quant_input_stream__full_n = quant_input_stream_if_full_n;
  assign quant_input_stream_if_read = quant_input_stream__read;
  assign quant_input_stream_if_read_ce = 1'b1;
  assign quant_input_stream_if_write = quant_input_stream__write;
  assign quant_input_stream_if_write_ce = 1'b1;
  assign quant_input_stream_reset = ~ ap_rst_n;
  assign quant_output_stream_clk = ap_clk;
  assign quant_output_stream_if_din = quant_output_stream__din;
  assign quant_output_stream__dout = quant_output_stream_if_dout;
  assign quant_output_stream__empty_n = quant_output_stream_if_empty_n;
  assign quant_output_stream__full_n = quant_output_stream_if_full_n;
  assign quant_output_stream_if_read = quant_output_stream__read;
  assign quant_output_stream_if_read_ce = 1'b1;
  assign quant_output_stream_if_write = quant_output_stream__write;
  assign quant_output_stream_if_write_ce = 1'b1;
  assign quant_output_stream_reset = ~ ap_rst_n;
  assign quant_weight_stream_clk = ap_clk;
  assign quant_weight_stream_if_din = quant_weight_stream__din;
  assign quant_weight_stream__dout = quant_weight_stream_if_dout;
  assign quant_weight_stream__empty_n = quant_weight_stream_if_empty_n;
  assign quant_weight_stream__full_n = quant_weight_stream_if_full_n;
  assign quant_weight_stream_if_read = quant_weight_stream__read;
  assign quant_weight_stream_if_read_ce = 1'b1;
  assign quant_weight_stream_if_write = quant_weight_stream__write;
  assign quant_weight_stream_if_write_ce = 1'b1;
  assign quant_weight_stream_reset = ~ ap_rst_n;
  assign weight_s_sum_stream_clk = ap_clk;
  assign weight_s_sum_stream_if_din = weight_s_sum_stream__din;
  assign weight_s_sum_stream__dout = weight_s_sum_stream_if_dout;
  assign weight_s_sum_stream__empty_n = weight_s_sum_stream_if_empty_n;
  assign weight_s_sum_stream__full_n = weight_s_sum_stream_if_full_n;
  assign weight_s_sum_stream_if_read = weight_s_sum_stream__read;
  assign weight_s_sum_stream_if_read_ce = 1'b1;
  assign weight_s_sum_stream_if_write = weight_s_sum_stream__write;
  assign weight_s_sum_stream_if_write_ce = 1'b1;
  assign weight_s_sum_stream_reset = ~ ap_rst_n;
  assign Linear_Layer_i4xi4_q_0_ap_clk = ap_clk;
  assign Linear_Layer_i4xi4_q_0__ap_done = Linear_Layer_i4xi4_q_0_ap_done;
  assign Linear_Layer_i4xi4_q_0__ap_idle = Linear_Layer_i4xi4_q_0_ap_idle;
  assign Linear_Layer_i4xi4_q_0__ap_ready = Linear_Layer_i4xi4_q_0_ap_ready;
  assign Linear_Layer_i4xi4_q_0_ap_rst_n = ap_rst_n;
  assign Linear_Layer_i4xi4_q_0_ap_start = Linear_Layer_i4xi4_q_0__ap_start;
  assign Linear_Layer_i4xi4_q_0_input_stream_s_dout = quant_input_stream__dout;
  assign Linear_Layer_i4xi4_q_0_input_stream_s_empty_n = quant_input_stream__empty_n;
  assign quant_input_stream__read = Linear_Layer_i4xi4_q_0_input_stream_s_read;
  assign quant_output_stream__din = Linear_Layer_i4xi4_q_0_output_stream_s_din;
  assign Linear_Layer_i4xi4_q_0_output_stream_s_full_n = quant_output_stream__full_n;
  assign quant_output_stream__write = Linear_Layer_i4xi4_q_0_output_stream_s_write;
  assign Linear_Layer_i4xi4_q_0_seq_len = Linear_Layer_i4xi4_q_0___seq_len__q0;
  assign Linear_Layer_i4xi4_q_0_weight_stream_s_dout = quant_weight_stream__dout;
  assign Linear_Layer_i4xi4_q_0_weight_stream_s_empty_n = quant_weight_stream__empty_n;
  assign quant_weight_stream__read = Linear_Layer_i4xi4_q_0_weight_stream_s_read;
  assign dequant_layer_q_int_fp32_0_ap_clk = ap_clk;
  assign dequant_layer_q_int_fp32_0__ap_done = dequant_layer_q_int_fp32_0_ap_done;
  assign dequant_layer_q_int_fp32_0__ap_idle = dequant_layer_q_int_fp32_0_ap_idle;
  assign dequant_layer_q_int_fp32_0__ap_ready = dequant_layer_q_int_fp32_0_ap_ready;
  assign dequant_layer_q_int_fp32_0_ap_rst_n = ap_rst_n;
  assign dequant_layer_q_int_fp32_0_ap_start = dequant_layer_q_int_fp32_0__ap_start;
  assign dequant_layer_q_int_fp32_0_input_s_b_stream_s_dout = input_s_b_stream__dout;
  assign dequant_layer_q_int_fp32_0_input_s_b_stream_s_empty_n = input_s_b_stream__empty_n;
  assign input_s_b_stream__read = dequant_layer_q_int_fp32_0_input_s_b_stream_s_read;
  assign dequant_layer_q_int_fp32_0_input_stream_s_dout = quant_output_stream__dout;
  assign dequant_layer_q_int_fp32_0_input_stream_s_empty_n = quant_output_stream__empty_n;
  assign quant_output_stream__read = dequant_layer_q_int_fp32_0_input_stream_s_read;
  assign output_stream__din = dequant_layer_q_int_fp32_0_output_stream_s_din;
  assign dequant_layer_q_int_fp32_0_output_stream_s_full_n = output_stream__full_n;
  assign output_stream__write = dequant_layer_q_int_fp32_0_output_stream_s_write;
  assign dequant_layer_q_int_fp32_0_seq_len = dequant_layer_q_int_fp32_0___seq_len__q0;
  assign dequant_layer_q_int_fp32_0_weight_s_sum_stream_s_dout = weight_s_sum_stream__dout;
  assign dequant_layer_q_int_fp32_0_weight_s_sum_stream_s_empty_n = weight_s_sum_stream__empty_n;
  assign weight_s_sum_stream__read = dequant_layer_q_int_fp32_0_weight_s_sum_stream_s_read;
  assign input_loader_r1_ln_iembed_fp32_0_ap_clk = ap_clk;
  assign input_loader_r1_ln_iembed_fp32_0__ap_done = input_loader_r1_ln_iembed_fp32_0_ap_done;
  assign input_loader_r1_ln_iembed_fp32_0__ap_idle = input_loader_r1_ln_iembed_fp32_0_ap_idle;
  assign input_loader_r1_ln_iembed_fp32_0__ap_ready = input_loader_r1_ln_iembed_fp32_0_ap_ready;
  assign input_loader_r1_ln_iembed_fp32_0_ap_rst_n = ap_rst_n;
  assign input_loader_r1_ln_iembed_fp32_0_ap_start = input_loader_r1_ln_iembed_fp32_0__ap_start;
  assign input_loader_r1_ln_iembed_fp32_0_input_mmap_offset = input_loader_r1_ln_iembed_fp32_0___input_mmap_offset__q0;
  assign input_stream__din = input_loader_r1_ln_iembed_fp32_0_input_stream_s_din;
  assign input_loader_r1_ln_iembed_fp32_0_input_stream_s_full_n = input_stream__full_n;
  assign input_stream__write = input_loader_r1_ln_iembed_fp32_0_input_stream_s_write;
  assign m_axi_input_mmap_ARADDR = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARADDR;
  assign m_axi_input_mmap_ARBURST = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARBURST;
  assign m_axi_input_mmap_ARCACHE = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARCACHE;
  assign m_axi_input_mmap_ARID = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARID;
  assign m_axi_input_mmap_ARLEN = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARLEN;
  assign m_axi_input_mmap_ARLOCK = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARLOCK;
  assign m_axi_input_mmap_ARPROT = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARPROT;
  assign m_axi_input_mmap_ARQOS = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARQOS;
  assign input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARREADY = m_axi_input_mmap_ARREADY;
  assign m_axi_input_mmap_ARSIZE = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARSIZE;
  assign m_axi_input_mmap_ARVALID = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_ARVALID;
  assign m_axi_input_mmap_AWADDR = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWADDR;
  assign m_axi_input_mmap_AWBURST = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWBURST;
  assign m_axi_input_mmap_AWCACHE = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWCACHE;
  assign m_axi_input_mmap_AWID = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWID;
  assign m_axi_input_mmap_AWLEN = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWLEN;
  assign m_axi_input_mmap_AWLOCK = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWLOCK;
  assign m_axi_input_mmap_AWPROT = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWPROT;
  assign m_axi_input_mmap_AWQOS = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWQOS;
  assign input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWREADY = m_axi_input_mmap_AWREADY;
  assign m_axi_input_mmap_AWSIZE = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWSIZE;
  assign m_axi_input_mmap_AWVALID = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_AWVALID;
  assign input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BID = m_axi_input_mmap_BID;
  assign m_axi_input_mmap_BREADY = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BREADY;
  assign input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BRESP = m_axi_input_mmap_BRESP;
  assign input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_BVALID = m_axi_input_mmap_BVALID;
  assign input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RDATA = m_axi_input_mmap_RDATA;
  assign input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RID = m_axi_input_mmap_RID;
  assign input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RLAST = m_axi_input_mmap_RLAST;
  assign m_axi_input_mmap_RREADY = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RREADY;
  assign input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RRESP = m_axi_input_mmap_RRESP;
  assign input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_RVALID = m_axi_input_mmap_RVALID;
  assign m_axi_input_mmap_WDATA = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WDATA;
  assign m_axi_input_mmap_WLAST = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WLAST;
  assign input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WREADY = m_axi_input_mmap_WREADY;
  assign m_axi_input_mmap_WSTRB = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WSTRB;
  assign m_axi_input_mmap_WVALID = input_loader_r1_ln_iembed_fp32_0_m_axi_input_mmap_WVALID;
  assign input_loader_r1_ln_iembed_fp32_0_seq_len = input_loader_r1_ln_iembed_fp32_0___seq_len__q0;
  assign output_drainer_q_fp32_0_ap_clk = ap_clk;
  assign output_drainer_q_fp32_0__ap_done = output_drainer_q_fp32_0_ap_done;
  assign output_drainer_q_fp32_0__ap_idle = output_drainer_q_fp32_0_ap_idle;
  assign output_drainer_q_fp32_0__ap_ready = output_drainer_q_fp32_0_ap_ready;
  assign output_drainer_q_fp32_0_ap_rst_n = ap_rst_n;
  assign output_drainer_q_fp32_0_ap_start = output_drainer_q_fp32_0__ap_start;
  assign m_axi_output_mmap_ARADDR = output_drainer_q_fp32_0_m_axi_output_mmap_ARADDR;
  assign m_axi_output_mmap_ARBURST = output_drainer_q_fp32_0_m_axi_output_mmap_ARBURST;
  assign m_axi_output_mmap_ARCACHE = output_drainer_q_fp32_0_m_axi_output_mmap_ARCACHE;
  assign m_axi_output_mmap_ARID = output_drainer_q_fp32_0_m_axi_output_mmap_ARID;
  assign m_axi_output_mmap_ARLEN = output_drainer_q_fp32_0_m_axi_output_mmap_ARLEN;
  assign m_axi_output_mmap_ARLOCK = output_drainer_q_fp32_0_m_axi_output_mmap_ARLOCK;
  assign m_axi_output_mmap_ARPROT = output_drainer_q_fp32_0_m_axi_output_mmap_ARPROT;
  assign m_axi_output_mmap_ARQOS = output_drainer_q_fp32_0_m_axi_output_mmap_ARQOS;
  assign output_drainer_q_fp32_0_m_axi_output_mmap_ARREADY = m_axi_output_mmap_ARREADY;
  assign m_axi_output_mmap_ARSIZE = output_drainer_q_fp32_0_m_axi_output_mmap_ARSIZE;
  assign m_axi_output_mmap_ARVALID = output_drainer_q_fp32_0_m_axi_output_mmap_ARVALID;
  assign m_axi_output_mmap_AWADDR = output_drainer_q_fp32_0_m_axi_output_mmap_AWADDR;
  assign m_axi_output_mmap_AWBURST = output_drainer_q_fp32_0_m_axi_output_mmap_AWBURST;
  assign m_axi_output_mmap_AWCACHE = output_drainer_q_fp32_0_m_axi_output_mmap_AWCACHE;
  assign m_axi_output_mmap_AWID = output_drainer_q_fp32_0_m_axi_output_mmap_AWID;
  assign m_axi_output_mmap_AWLEN = output_drainer_q_fp32_0_m_axi_output_mmap_AWLEN;
  assign m_axi_output_mmap_AWLOCK = output_drainer_q_fp32_0_m_axi_output_mmap_AWLOCK;
  assign m_axi_output_mmap_AWPROT = output_drainer_q_fp32_0_m_axi_output_mmap_AWPROT;
  assign m_axi_output_mmap_AWQOS = output_drainer_q_fp32_0_m_axi_output_mmap_AWQOS;
  assign output_drainer_q_fp32_0_m_axi_output_mmap_AWREADY = m_axi_output_mmap_AWREADY;
  assign m_axi_output_mmap_AWSIZE = output_drainer_q_fp32_0_m_axi_output_mmap_AWSIZE;
  assign m_axi_output_mmap_AWVALID = output_drainer_q_fp32_0_m_axi_output_mmap_AWVALID;
  assign output_drainer_q_fp32_0_m_axi_output_mmap_BID = m_axi_output_mmap_BID;
  assign m_axi_output_mmap_BREADY = output_drainer_q_fp32_0_m_axi_output_mmap_BREADY;
  assign output_drainer_q_fp32_0_m_axi_output_mmap_BRESP = m_axi_output_mmap_BRESP;
  assign output_drainer_q_fp32_0_m_axi_output_mmap_BVALID = m_axi_output_mmap_BVALID;
  assign output_drainer_q_fp32_0_m_axi_output_mmap_RDATA = m_axi_output_mmap_RDATA;
  assign output_drainer_q_fp32_0_m_axi_output_mmap_RID = m_axi_output_mmap_RID;
  assign output_drainer_q_fp32_0_m_axi_output_mmap_RLAST = m_axi_output_mmap_RLAST;
  assign m_axi_output_mmap_RREADY = output_drainer_q_fp32_0_m_axi_output_mmap_RREADY;
  assign output_drainer_q_fp32_0_m_axi_output_mmap_RRESP = m_axi_output_mmap_RRESP;
  assign output_drainer_q_fp32_0_m_axi_output_mmap_RVALID = m_axi_output_mmap_RVALID;
  assign m_axi_output_mmap_WDATA = output_drainer_q_fp32_0_m_axi_output_mmap_WDATA;
  assign m_axi_output_mmap_WLAST = output_drainer_q_fp32_0_m_axi_output_mmap_WLAST;
  assign output_drainer_q_fp32_0_m_axi_output_mmap_WREADY = m_axi_output_mmap_WREADY;
  assign m_axi_output_mmap_WSTRB = output_drainer_q_fp32_0_m_axi_output_mmap_WSTRB;
  assign m_axi_output_mmap_WVALID = output_drainer_q_fp32_0_m_axi_output_mmap_WVALID;
  assign output_drainer_q_fp32_0_output_mmap_offset = output_drainer_q_fp32_0___output_mmap_offset__q0;
  assign output_drainer_q_fp32_0_output_stream_s_dout = output_stream__dout;
  assign output_drainer_q_fp32_0_output_stream_s_empty_n = output_stream__empty_n;
  assign output_stream__read = output_drainer_q_fp32_0_output_stream_s_read;
  assign output_drainer_q_fp32_0_seq_len = output_drainer_q_fp32_0___seq_len__q0;
  assign quant_layer_r1_ln_iembed_fp32_int4_0_ap_clk = ap_clk;
  assign quant_layer_r1_ln_iembed_fp32_int4_0__ap_done = quant_layer_r1_ln_iembed_fp32_int4_0_ap_done;
  assign quant_layer_r1_ln_iembed_fp32_int4_0__ap_idle = quant_layer_r1_ln_iembed_fp32_int4_0_ap_idle;
  assign quant_layer_r1_ln_iembed_fp32_int4_0__ap_ready = quant_layer_r1_ln_iembed_fp32_int4_0_ap_ready;
  assign quant_layer_r1_ln_iembed_fp32_int4_0_ap_rst_n = ap_rst_n;
  assign quant_layer_r1_ln_iembed_fp32_int4_0_ap_start = quant_layer_r1_ln_iembed_fp32_int4_0__ap_start;
  assign input_s_b_stream__din = quant_layer_r1_ln_iembed_fp32_int4_0_input_s_b_stream_s_din;
  assign quant_layer_r1_ln_iembed_fp32_int4_0_input_s_b_stream_s_full_n = input_s_b_stream__full_n;
  assign input_s_b_stream__write = quant_layer_r1_ln_iembed_fp32_int4_0_input_s_b_stream_s_write;
  assign quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_s_dout = input_stream__dout;
  assign quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_s_empty_n = input_stream__empty_n;
  assign input_stream__read = quant_layer_r1_ln_iembed_fp32_int4_0_input_stream_s_read;
  assign quant_input_stream__din = quant_layer_r1_ln_iembed_fp32_int4_0_output_stream_s_din;
  assign quant_layer_r1_ln_iembed_fp32_int4_0_output_stream_s_full_n = quant_input_stream__full_n;
  assign quant_input_stream__write = quant_layer_r1_ln_iembed_fp32_int4_0_output_stream_s_write;
  assign quant_layer_r1_ln_iembed_fp32_int4_0_seq_len = quant_layer_r1_ln_iembed_fp32_int4_0___seq_len__q0;
  assign weight_loader_wq_0_ap_clk = ap_clk;
  assign weight_loader_wq_0__ap_done = weight_loader_wq_0_ap_done;
  assign weight_loader_wq_0__ap_idle = weight_loader_wq_0_ap_idle;
  assign weight_loader_wq_0__ap_ready = weight_loader_wq_0_ap_ready;
  assign weight_loader_wq_0_ap_rst_n = ap_rst_n;
  assign weight_loader_wq_0_ap_start = weight_loader_wq_0__ap_start;
  assign m_axi_quant_weight_mmap_ARADDR = weight_loader_wq_0_m_axi_weight_mmap_ARADDR;
  assign m_axi_quant_weight_mmap_ARBURST = weight_loader_wq_0_m_axi_weight_mmap_ARBURST;
  assign m_axi_quant_weight_mmap_ARCACHE = weight_loader_wq_0_m_axi_weight_mmap_ARCACHE;
  assign m_axi_quant_weight_mmap_ARID = weight_loader_wq_0_m_axi_weight_mmap_ARID;
  assign m_axi_quant_weight_mmap_ARLEN = weight_loader_wq_0_m_axi_weight_mmap_ARLEN;
  assign m_axi_quant_weight_mmap_ARLOCK = weight_loader_wq_0_m_axi_weight_mmap_ARLOCK;
  assign m_axi_quant_weight_mmap_ARPROT = weight_loader_wq_0_m_axi_weight_mmap_ARPROT;
  assign m_axi_quant_weight_mmap_ARQOS = weight_loader_wq_0_m_axi_weight_mmap_ARQOS;
  assign weight_loader_wq_0_m_axi_weight_mmap_ARREADY = m_axi_quant_weight_mmap_ARREADY;
  assign m_axi_quant_weight_mmap_ARSIZE = weight_loader_wq_0_m_axi_weight_mmap_ARSIZE;
  assign m_axi_quant_weight_mmap_ARVALID = weight_loader_wq_0_m_axi_weight_mmap_ARVALID;
  assign m_axi_quant_weight_mmap_AWADDR = weight_loader_wq_0_m_axi_weight_mmap_AWADDR;
  assign m_axi_quant_weight_mmap_AWBURST = weight_loader_wq_0_m_axi_weight_mmap_AWBURST;
  assign m_axi_quant_weight_mmap_AWCACHE = weight_loader_wq_0_m_axi_weight_mmap_AWCACHE;
  assign m_axi_quant_weight_mmap_AWID = weight_loader_wq_0_m_axi_weight_mmap_AWID;
  assign m_axi_quant_weight_mmap_AWLEN = weight_loader_wq_0_m_axi_weight_mmap_AWLEN;
  assign m_axi_quant_weight_mmap_AWLOCK = weight_loader_wq_0_m_axi_weight_mmap_AWLOCK;
  assign m_axi_quant_weight_mmap_AWPROT = weight_loader_wq_0_m_axi_weight_mmap_AWPROT;
  assign m_axi_quant_weight_mmap_AWQOS = weight_loader_wq_0_m_axi_weight_mmap_AWQOS;
  assign weight_loader_wq_0_m_axi_weight_mmap_AWREADY = m_axi_quant_weight_mmap_AWREADY;
  assign m_axi_quant_weight_mmap_AWSIZE = weight_loader_wq_0_m_axi_weight_mmap_AWSIZE;
  assign m_axi_quant_weight_mmap_AWVALID = weight_loader_wq_0_m_axi_weight_mmap_AWVALID;
  assign weight_loader_wq_0_m_axi_weight_mmap_BID = m_axi_quant_weight_mmap_BID;
  assign m_axi_quant_weight_mmap_BREADY = weight_loader_wq_0_m_axi_weight_mmap_BREADY;
  assign weight_loader_wq_0_m_axi_weight_mmap_BRESP = m_axi_quant_weight_mmap_BRESP;
  assign weight_loader_wq_0_m_axi_weight_mmap_BVALID = m_axi_quant_weight_mmap_BVALID;
  assign weight_loader_wq_0_m_axi_weight_mmap_RDATA = m_axi_quant_weight_mmap_RDATA;
  assign weight_loader_wq_0_m_axi_weight_mmap_RID = m_axi_quant_weight_mmap_RID;
  assign weight_loader_wq_0_m_axi_weight_mmap_RLAST = m_axi_quant_weight_mmap_RLAST;
  assign m_axi_quant_weight_mmap_RREADY = weight_loader_wq_0_m_axi_weight_mmap_RREADY;
  assign weight_loader_wq_0_m_axi_weight_mmap_RRESP = m_axi_quant_weight_mmap_RRESP;
  assign weight_loader_wq_0_m_axi_weight_mmap_RVALID = m_axi_quant_weight_mmap_RVALID;
  assign m_axi_quant_weight_mmap_WDATA = weight_loader_wq_0_m_axi_weight_mmap_WDATA;
  assign m_axi_quant_weight_mmap_WLAST = weight_loader_wq_0_m_axi_weight_mmap_WLAST;
  assign weight_loader_wq_0_m_axi_weight_mmap_WREADY = m_axi_quant_weight_mmap_WREADY;
  assign m_axi_quant_weight_mmap_WSTRB = weight_loader_wq_0_m_axi_weight_mmap_WSTRB;
  assign m_axi_quant_weight_mmap_WVALID = weight_loader_wq_0_m_axi_weight_mmap_WVALID;
  assign weight_loader_wq_0_seq_len = weight_loader_wq_0___seq_len__q0;
  assign weight_loader_wq_0_weight_mmap_offset = weight_loader_wq_0___quant_weight_mmap_offset__q0;
  assign quant_weight_stream__din = weight_loader_wq_0_weight_stream_s_din;
  assign weight_loader_wq_0_weight_stream_s_full_n = quant_weight_stream__full_n;
  assign quant_weight_stream__write = weight_loader_wq_0_weight_stream_s_write;
  assign weight_s_loader_wq_0_ap_clk = ap_clk;
  assign weight_s_loader_wq_0__ap_done = weight_s_loader_wq_0_ap_done;
  assign weight_s_loader_wq_0__ap_idle = weight_s_loader_wq_0_ap_idle;
  assign weight_s_loader_wq_0__ap_ready = weight_s_loader_wq_0_ap_ready;
  assign weight_s_loader_wq_0_ap_rst_n = ap_rst_n;
  assign weight_s_loader_wq_0_ap_start = weight_s_loader_wq_0__ap_start;
  assign m_axi_weight_s_sum_mmap_ARADDR = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARADDR;
  assign m_axi_weight_s_sum_mmap_ARBURST = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARBURST;
  assign m_axi_weight_s_sum_mmap_ARCACHE = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARCACHE;
  assign m_axi_weight_s_sum_mmap_ARID = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARID;
  assign m_axi_weight_s_sum_mmap_ARLEN = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARLEN;
  assign m_axi_weight_s_sum_mmap_ARLOCK = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARLOCK;
  assign m_axi_weight_s_sum_mmap_ARPROT = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARPROT;
  assign m_axi_weight_s_sum_mmap_ARQOS = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARQOS;
  assign weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARREADY = m_axi_weight_s_sum_mmap_ARREADY;
  assign m_axi_weight_s_sum_mmap_ARSIZE = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARSIZE;
  assign m_axi_weight_s_sum_mmap_ARVALID = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_ARVALID;
  assign m_axi_weight_s_sum_mmap_AWADDR = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWADDR;
  assign m_axi_weight_s_sum_mmap_AWBURST = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWBURST;
  assign m_axi_weight_s_sum_mmap_AWCACHE = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWCACHE;
  assign m_axi_weight_s_sum_mmap_AWID = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWID;
  assign m_axi_weight_s_sum_mmap_AWLEN = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWLEN;
  assign m_axi_weight_s_sum_mmap_AWLOCK = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWLOCK;
  assign m_axi_weight_s_sum_mmap_AWPROT = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWPROT;
  assign m_axi_weight_s_sum_mmap_AWQOS = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWQOS;
  assign weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWREADY = m_axi_weight_s_sum_mmap_AWREADY;
  assign m_axi_weight_s_sum_mmap_AWSIZE = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWSIZE;
  assign m_axi_weight_s_sum_mmap_AWVALID = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_AWVALID;
  assign weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BID = m_axi_weight_s_sum_mmap_BID;
  assign m_axi_weight_s_sum_mmap_BREADY = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BREADY;
  assign weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BRESP = m_axi_weight_s_sum_mmap_BRESP;
  assign weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_BVALID = m_axi_weight_s_sum_mmap_BVALID;
  assign weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RDATA = m_axi_weight_s_sum_mmap_RDATA;
  assign weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RID = m_axi_weight_s_sum_mmap_RID;
  assign weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RLAST = m_axi_weight_s_sum_mmap_RLAST;
  assign m_axi_weight_s_sum_mmap_RREADY = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RREADY;
  assign weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RRESP = m_axi_weight_s_sum_mmap_RRESP;
  assign weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_RVALID = m_axi_weight_s_sum_mmap_RVALID;
  assign m_axi_weight_s_sum_mmap_WDATA = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WDATA;
  assign m_axi_weight_s_sum_mmap_WLAST = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WLAST;
  assign weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WREADY = m_axi_weight_s_sum_mmap_WREADY;
  assign m_axi_weight_s_sum_mmap_WSTRB = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WSTRB;
  assign m_axi_weight_s_sum_mmap_WVALID = weight_s_loader_wq_0_m_axi_weight_s_sum_mmap_WVALID;
  assign weight_s_loader_wq_0_seq_len = weight_s_loader_wq_0___seq_len__q0;
  assign weight_s_loader_wq_0_weight_s_sum_mmap_offset = weight_s_loader_wq_0___weight_s_sum_mmap_offset__q0;
  assign weight_s_sum_stream__din = weight_s_loader_wq_0_weight_s_sum_stream_s_din;
  assign weight_s_loader_wq_0_weight_s_sum_stream_s_full_n = weight_s_sum_stream__full_n;
  assign weight_s_sum_stream__write = weight_s_loader_wq_0_weight_s_sum_stream_s_write;
  assign Linear_Layer_i4xi4_q_0___seq_len__q0 = __tapa_fsm_unit_Linear_Layer_i4xi4_q_0___seq_len__q0;
  assign __tapa_fsm_unit_Linear_Layer_i4xi4_q_0__ap_done = Linear_Layer_i4xi4_q_0__ap_done;
  assign __tapa_fsm_unit_Linear_Layer_i4xi4_q_0__ap_idle = Linear_Layer_i4xi4_q_0__ap_idle;
  assign __tapa_fsm_unit_Linear_Layer_i4xi4_q_0__ap_ready = Linear_Layer_i4xi4_q_0__ap_ready;
  assign Linear_Layer_i4xi4_q_0__ap_start = __tapa_fsm_unit_Linear_Layer_i4xi4_q_0__ap_start;
  assign __tapa_fsm_unit_ap_clk = ap_clk;
  assign ap_done = __tapa_fsm_unit_ap_done;
  assign ap_idle = __tapa_fsm_unit_ap_idle;
  assign ap_ready = __tapa_fsm_unit_ap_ready;
  assign __tapa_fsm_unit_ap_rst_n = ap_rst_n;
  assign __tapa_fsm_unit_ap_start = ap_start;
  assign dequant_layer_q_int_fp32_0___seq_len__q0 = __tapa_fsm_unit_dequant_layer_q_int_fp32_0___seq_len__q0;
  assign __tapa_fsm_unit_dequant_layer_q_int_fp32_0__ap_done = dequant_layer_q_int_fp32_0__ap_done;
  assign __tapa_fsm_unit_dequant_layer_q_int_fp32_0__ap_idle = dequant_layer_q_int_fp32_0__ap_idle;
  assign __tapa_fsm_unit_dequant_layer_q_int_fp32_0__ap_ready = dequant_layer_q_int_fp32_0__ap_ready;
  assign dequant_layer_q_int_fp32_0__ap_start = __tapa_fsm_unit_dequant_layer_q_int_fp32_0__ap_start;
  assign input_loader_r1_ln_iembed_fp32_0___input_mmap_offset__q0 = __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__mmap_offset_q0;
  assign input_loader_r1_ln_iembed_fp32_0___seq_len__q0 = __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0___seq_len__q0;
  assign __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__ap_done = input_loader_r1_ln_iembed_fp32_0__ap_done;
  assign __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__ap_idle = input_loader_r1_ln_iembed_fp32_0__ap_idle;
  assign __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__ap_ready = input_loader_r1_ln_iembed_fp32_0__ap_ready;
  assign input_loader_r1_ln_iembed_fp32_0__ap_start = __tapa_fsm_unit_input_loader_r1_ln_iembed_fp32_0__ap_start;
  assign __tapa_fsm_unit_input_mmap_offset = input_mmap_offset;
  assign output_drainer_q_fp32_0___output_mmap_offset__q0 = __tapa_fsm_unit_output_drainer_q_fp32_0___output_mmap_offset__q0;
  assign output_drainer_q_fp32_0___seq_len__q0 = __tapa_fsm_unit_output_drainer_q_fp32_0___seq_len__q0;
  assign __tapa_fsm_unit_output_drainer_q_fp32_0__ap_done = output_drainer_q_fp32_0__ap_done;
  assign __tapa_fsm_unit_output_drainer_q_fp32_0__ap_idle = output_drainer_q_fp32_0__ap_idle;
  assign __tapa_fsm_unit_output_drainer_q_fp32_0__ap_ready = output_drainer_q_fp32_0__ap_ready;
  assign output_drainer_q_fp32_0__ap_start = __tapa_fsm_unit_output_drainer_q_fp32_0__ap_start;
  assign __tapa_fsm_unit_output_mmap_offset = output_mmap_offset;
  assign quant_layer_r1_ln_iembed_fp32_int4_0___seq_len__q0 = __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__seq_len_q0;
  assign __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__ap_done = quant_layer_r1_ln_iembed_fp32_int4_0__ap_done;
  assign __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__ap_idle = quant_layer_r1_ln_iembed_fp32_int4_0__ap_idle;
  assign __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__ap_ready = quant_layer_r1_ln_iembed_fp32_int4_0__ap_ready;
  assign quant_layer_r1_ln_iembed_fp32_int4_0__ap_start = __tapa_fsm_unit_quant_layer_r1_ln_iembed_fp32_int4_0__ap_start;
  assign __tapa_fsm_unit_quant_weight_mmap_offset = quant_weight_mmap_offset;
  assign __tapa_fsm_unit_seq_len = seq_len;
  assign weight_loader_wq_0___quant_weight_mmap_offset__q0 = __tapa_fsm_unit_weight_loader_wq_0___quant_mmap_offset__q0;
  assign weight_loader_wq_0___seq_len__q0 = __tapa_fsm_unit_weight_loader_wq_0___seq_len__q0;
  assign __tapa_fsm_unit_weight_loader_wq_0__ap_done = weight_loader_wq_0__ap_done;
  assign __tapa_fsm_unit_weight_loader_wq_0__ap_idle = weight_loader_wq_0__ap_idle;
  assign __tapa_fsm_unit_weight_loader_wq_0__ap_ready = weight_loader_wq_0__ap_ready;
  assign weight_loader_wq_0__ap_start = __tapa_fsm_unit_weight_loader_wq_0__ap_start;
  assign weight_s_loader_wq_0___seq_len__q0 = __tapa_fsm_unit_weight_s_loader_wq_0___seq_len__q0;
  assign weight_s_loader_wq_0___weight_s_sum_mmap_offset__q0 = __tapa_fsm_unit_weight_s_loader_wq_0___s_sum_mmap_offset__q0;
  assign __tapa_fsm_unit_weight_s_loader_wq_0__ap_done = weight_s_loader_wq_0__ap_done;
  assign __tapa_fsm_unit_weight_s_loader_wq_0__ap_idle = weight_s_loader_wq_0__ap_idle;
  assign __tapa_fsm_unit_weight_s_loader_wq_0__ap_ready = weight_s_loader_wq_0__ap_ready;
  assign weight_s_loader_wq_0__ap_start = __tapa_fsm_unit_weight_s_loader_wq_0__ap_start;
  assign __tapa_fsm_unit_weight_s_sum_mmap_offset = weight_s_sum_mmap_offset;
endmodule