// ==================================================
// RTL generated by RapidStream
//
// Copyright 2024 RapidStream Design Automation, Inc.
// All Rights Reserved.
// ==================================================
`timescale 1 ns / 1 ps
/**   Generated by RapidStream   **/
module SLOT_X0Y1_TO_SLOT_X0Y1 (
    output wire [0:0] Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] __tapa_fsm_unit___ff_0_RS_FF_PP_HEAD_if_dout,
    input wire  [0:0] _tWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_1_if_doutb49,
    input wire        ap_clk,
    output wire [0:0] control_s_axi_U_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] input_s_b_stream_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] input_stream_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] output_drainer_q_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] output_stream_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] quant_input_stream_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] quant_output_stream_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] quant_weight_stream_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] weight_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] weight_s_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout,
    output wire [0:0] weight_s_sum_stream_ff_0_RS_FF_PP_HEAD_if_dout
);

wire        Linear_Layer_i4xi4_q_0_ap_rst_n;
wire        _Wrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_Linear_Layer_i4xi4_q_0_ap_clk92e;
wire        __Layer_q_tb_aux_split_aux_1_inst_quant_layer_r1_ln_iembed_fp32_int4_0_ap_clk7dc;
wire        __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst___rs_pipelined_ap_rst_n;
wire        __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst___tapa_fsm_unit_ap_clk;
wire        __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_control_s_axi_U_ACLK;
wire        __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_input_s_b_stream_clk;
wire        __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_input_stream_clk;
wire        __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_output_stream_clk;
wire        __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_quant_input_stream_clk;
wire        __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_quant_output_stream_clk;
wire        __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_quant_weight_stream_clk;
wire        __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_weight_s_sum_stream_clk;
wire        __tapa_fsm_unit_ap_rst_n;
wire        _near_Layer_q_tb_aux_split_aux_1_inst_input_loader_r1_ln_iembed_fp32_0_ap_clk777;
wire        _ntWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_weight_s_loader_wq_0_ap_clk249;
wire        _per_Linear_Layer_q_tb_aux_split_aux_1_inst_dequant_layer_q_int_fp32_0_ap_clk655;
wire        _rapper_Linear_Layer_q_tb_aux_split_aux_1_inst_output_drainer_q_fp32_0_ap_clk9d4;
wire        _uantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_weight_loader_wq_0_ap_clk299;
wire        control_s_axi_U_ARESET;
wire        dequant_layer_q_int_fp32_0_ap_rst_n;
wire        input_loader_r1_ln_iembed_fp32_0_ap_rst_n;
wire        input_s_b_stream_reset;
wire        input_stream_reset;
wire        output_drainer_q_fp32_0_ap_rst_n;
wire        output_stream_reset;
wire        quant_input_stream_reset;
wire        quant_layer_r1_ln_iembed_fp32_int4_0_ap_rst_n;
wire        quant_output_stream_reset;
wire        quant_weight_stream_reset;
wire        weight_loader_wq_0_ap_rst_n;
wire        weight_s_loader_wq_0_ap_rst_n;
wire        weight_s_sum_stream_reset;



__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { Linear_Layer_i4xi4_q_0_ap_rst_n } )),
    .if_dout (Linear_Layer_i4xi4_q_0_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) __merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { __tapa_fsm_unit_ap_rst_n } )),
    .if_dout (__merged_task_fsm_SLOT_X0Y0_TO_SLOT_X0Y0_0_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1 #(
    .C_S_AXI_CONTROL_ADDR_WIDTH  (7),
    .C_S_AXI_CONTROL_DATA_WIDTH  (32),
    .C_S_AXI_CONTROL_WSTRB_WIDTH (32'd4),
    .C_S_AXI_DATA_WIDTH          (32),
    .C_S_AXI_WSTRB_WIDTH         (32'd4)
) __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst (
    .Linear_Layer_i4xi4_q_0_ap_clk                 (_Wrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_Linear_Layer_i4xi4_q_0_ap_clk92e),
    .Linear_Layer_i4xi4_q_0_ap_rst_n               (Linear_Layer_i4xi4_q_0_ap_rst_n),
    .__tapa_fsm_unit_ap_clk                        (__rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst___tapa_fsm_unit_ap_clk),
    .__tapa_fsm_unit_ap_rst_n                      (__tapa_fsm_unit_ap_rst_n),
    .ap_clk                                        (ap_clk),
    .ap_rst_n                                      (__rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst___rs_pipelined_ap_rst_n),
    .control_s_axi_U_ACLK                          (__rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_control_s_axi_U_ACLK),
    .control_s_axi_U_ARESET                        (control_s_axi_U_ARESET),
    .dequant_layer_q_int_fp32_0_ap_clk             (_per_Linear_Layer_q_tb_aux_split_aux_1_inst_dequant_layer_q_int_fp32_0_ap_clk655),
    .dequant_layer_q_int_fp32_0_ap_rst_n           (dequant_layer_q_int_fp32_0_ap_rst_n),
    .input_loader_r1_ln_iembed_fp32_0_ap_clk       (_near_Layer_q_tb_aux_split_aux_1_inst_input_loader_r1_ln_iembed_fp32_0_ap_clk777),
    .input_loader_r1_ln_iembed_fp32_0_ap_rst_n     (input_loader_r1_ln_iembed_fp32_0_ap_rst_n),
    .input_s_b_stream_clk                          (__rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_input_s_b_stream_clk),
    .input_s_b_stream_reset                        (input_s_b_stream_reset),
    .input_stream_clk                              (__rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_input_stream_clk),
    .input_stream_reset                            (input_stream_reset),
    .output_drainer_q_fp32_0_ap_clk                (_rapper_Linear_Layer_q_tb_aux_split_aux_1_inst_output_drainer_q_fp32_0_ap_clk9d4),
    .output_drainer_q_fp32_0_ap_rst_n              (output_drainer_q_fp32_0_ap_rst_n),
    .output_stream_clk                             (__rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_output_stream_clk),
    .output_stream_reset                           (output_stream_reset),
    .quant_input_stream_clk                        (__rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_quant_input_stream_clk),
    .quant_input_stream_reset                      (quant_input_stream_reset),
    .quant_layer_r1_ln_iembed_fp32_int4_0_ap_clk   (__Layer_q_tb_aux_split_aux_1_inst_quant_layer_r1_ln_iembed_fp32_int4_0_ap_clk7dc),
    .quant_layer_r1_ln_iembed_fp32_int4_0_ap_rst_n (quant_layer_r1_ln_iembed_fp32_int4_0_ap_rst_n),
    .quant_output_stream_clk                       (__rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_quant_output_stream_clk),
    .quant_output_stream_reset                     (quant_output_stream_reset),
    .quant_weight_stream_clk                       (__rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_quant_weight_stream_clk),
    .quant_weight_stream_reset                     (quant_weight_stream_reset),
    .weight_loader_wq_0_ap_clk                     (_uantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_weight_loader_wq_0_ap_clk299),
    .weight_loader_wq_0_ap_rst_n                   (weight_loader_wq_0_ap_rst_n),
    .weight_s_loader_wq_0_ap_clk                   (_ntWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_weight_s_loader_wq_0_ap_clk249),
    .weight_s_loader_wq_0_ap_rst_n                 (weight_s_loader_wq_0_ap_rst_n),
    .weight_s_sum_stream_clk                       (__rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_weight_s_sum_stream_clk),
    .weight_s_sum_stream_reset                     (weight_s_sum_stream_reset)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_TAIL /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (_tWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst_ff_0_RS_FF_PP_BODY_1_if_doutb49),
    .if_dout (( { __rs_QuantWrapper_Linear_Layer_q_tb_aux_split_aux_1_inst___rs_pipelined_ap_rst_n } ))
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) __tapa_fsm_unit___ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { __tapa_fsm_unit_ap_rst_n } )),
    .if_dout (__tapa_fsm_unit___ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) control_s_axi_U_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { control_s_axi_U_ARESET } )),
    .if_dout (control_s_axi_U_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { dequant_layer_q_int_fp32_0_ap_rst_n } )),
    .if_dout (dequant_layer_q_int_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { input_loader_r1_ln_iembed_fp32_0_ap_rst_n } )),
    .if_dout (input_loader_r1_ln_iembed_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) input_s_b_stream_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { input_s_b_stream_reset } )),
    .if_dout (input_s_b_stream_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) input_stream_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { input_stream_reset } )),
    .if_dout (input_stream_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) output_drainer_q_fp32_0_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { output_drainer_q_fp32_0_ap_rst_n } )),
    .if_dout (output_drainer_q_fp32_0_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) output_stream_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { output_stream_reset } )),
    .if_dout (output_stream_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) quant_input_stream_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { quant_input_stream_reset } )),
    .if_dout (quant_input_stream_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { quant_layer_r1_ln_iembed_fp32_int4_0_ap_rst_n } )),
    .if_dout (quant_layer_r1_ln_iembed_fp32_int4_0_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) quant_output_stream_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { quant_output_stream_reset } )),
    .if_dout (quant_output_stream_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) quant_weight_stream_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { quant_weight_stream_reset } )),
    .if_dout (quant_weight_stream_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) weight_loader_wq_0_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { weight_loader_wq_0_ap_rst_n } )),
    .if_dout (weight_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) weight_s_loader_wq_0_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { weight_s_loader_wq_0_ap_rst_n } )),
    .if_dout (weight_s_loader_wq_0_ff_0_RS_FF_PP_HEAD_if_dout)
);


__rs_feed_forward_reg #(
    .DATA_WIDTH (1),
    .ENABLE_REG (1),
    .__REGION   ("SLOT_X0Y1_TO_SLOT_X0Y1")
) weight_s_sum_stream_ff_0_RS_FF_PP_HEAD /**   Generated by RapidStream   **/ (
    .clk     (ap_clk),
    .if_din  (( { weight_s_sum_stream_reset } )),
    .if_dout (weight_s_sum_stream_ff_0_RS_FF_PP_HEAD_if_dout)
);

endmodule  // SLOT_X0Y1_TO_SLOT_X0Y1